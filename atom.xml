<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Welcome to Mr.l&#39;s World</title>
  
  <subtitle>海棠 花未眠/I miss you</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hong-king.github.io/"/>
  <updated>2020-11-29T01:24:38.053Z</updated>
  <id>https://hong-king.github.io/</id>
  
  <author>
    <name>Hong-King</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>你好，欢迎光临我的博客</title>
    <link href="https://hong-king.github.io/2020/11/29/%E4%BD%A0%E5%A5%BD%EF%BC%8C%E6%AC%A2%E8%BF%8E%E5%85%89%E4%B8%B4%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%81/"/>
    <id>https://hong-king.github.io/2020/11/29/%E4%BD%A0%E5%A5%BD%EF%BC%8C%E6%AC%A2%E8%BF%8E%E5%85%89%E4%B8%B4%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%81/</id>
    <published>2020-11-29T01:24:00.000Z</published>
    <updated>2020-11-29T01:24:38.053Z</updated>
    
    <content type="html"><![CDATA[<h2 id="这篇说明将更好地帮助你在-lt-Mr-l’s-World-gt-里畅游"><a href="#这篇说明将更好地帮助你在-lt-Mr-l’s-World-gt-里畅游" class="headerlink" title="这篇说明将更好地帮助你在&lt;Mr.l’s World&gt;里畅游"></a>这篇说明将更好地帮助你在&lt;<em>Mr.l’s World</em>&gt;里畅游</h2><blockquote><p><strong>博客使用简介</strong></p></blockquote><ol><li><p>博客界面<strong>左侧</strong>有<strong>侧边菜单</strong>为你提供快捷帮助<strong>&lt;<em>手机用户请点击屏幕左上角按钮以呼出菜单</em>&gt;</strong></p></li><li><p>博客界面<strong>右下角</strong>有<strong>暗夜模式按钮</strong>为你提供更好的浏览体验</p></li><li><p>博客同样为你提供<strong>文章查找</strong>功能，功能按钮在<strong>侧边菜单</strong>的下方</p></li><li><p>博客已开放<strong>评论留言系统</strong>，欢迎大家在评论区留下你的足迹</p></li><li><p><strong>《语言之美-古诗丽词》</strong>与<strong>《语言之美-新句美文》</strong>两篇文章将不定时持续更新，欢迎大家在评论区留下自己的珍藏，我也很乐意将其收录进文章里面</p></li><li><p><strong>光影画廊</strong>模块里展示了一些我个人的绘画作品，希望大家能够喜欢(^^)</p></li></ol><blockquote><p>技术支持</p></blockquote><ul><li><strong>Powered by</strong> <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a></li><li><strong>Theme:</strong> <a href="https://shen-yu.gitee.io/" target="_blank" rel="noopener">Ayer</a></li></ul><hr><p> (以下是博客更新日志，日志从2020/4/11开始记录，你<strong>可以点击</strong>&lt;阅读更多…&gt;来快速掌握博客更新动向，或者在<strong>文章概览</strong>里浏览最近更新的文章)</p><a id="more"></a><hr><blockquote><p><strong>博客更新日志</strong></p></blockquote><ul><li><strong>2020/11/29</strong></li></ul><ol><li>修改文章《希尔密码(Hill Cipher)的Python实现》</li></ol><p><strong>小结</strong>：修改一篇文章</p><hr><ul><li><strong>2020/11/28</strong></li></ul><ol><li>添加文章《希尔密码(Hill Cipher)的Python实现》</li></ol><p><strong>小结</strong>：添加一篇文章</p><hr><ul><li><strong>2020/11/27</strong></li></ul><ol><li>修改文章《利用reshape重塑数》</li><li>添加文章《Python 从输入端读取多行数据》</li></ol><p><strong>小结</strong>：修改一篇文章，添加一篇文章</p><hr><ul><li><strong>2020/11/25</strong></li></ul><ol><li>修改文章《费诺(Fano)编码的Python实现》</li><li>添加文章《哈夫曼(Huffman)编码的Python实现》</li></ol><p><strong>小结</strong>：添加一篇文章,修改一篇文章</p><hr><ul><li><strong>2020/11/24</strong></li></ul><ol><li>修改文章《天平秤球问题的Python实现》</li><li>添加文章《香农(Shannon)编码的Python实现》</li><li>添加文章《费诺(Fano)编码的Python实现》</li></ol><p><strong>小结</strong>：添加两篇文章，修改一篇文章</p><hr><ul><li><strong>2020/11/18</strong></li></ul><ol><li>添加文章《天平秤球问题的Python实现》</li></ol><p><strong>小结</strong>：添加一篇文章</p><hr><ul><li><strong>2020/11/06</strong></li></ul><ol><li>《语言之美-古诗丽词》添加一篇诗</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/10/31</strong></li></ul><ol><li>《语言之美-古诗丽词》添加一篇诗</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/10/16</strong></li></ul><ol><li>添加文章《利用Python从文本中提取单词》</li></ol><p><strong>小结</strong>：添加一篇文章</p><hr><ul><li><strong>2020/10/13</strong></li></ul><ol><li>添加文章《解决C++从输入流读取所需个数的数据后，多余数据仍存在输入流中的问题》</li></ol><p><strong>小结</strong>：添加一篇文章</p><hr><ul><li><strong>2020/10/12</strong></li></ul><ol><li>添加文章《解决C++ ifstream 读取文件总多读一次问题》</li></ol><p><strong>小结</strong>：添加一篇文章</p><hr><ul><li><strong>2020/10/06</strong></li></ul><ol><li>《语言之美-古诗丽词》添加一篇诗</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/9/30</strong></li></ul><ol><li>《语言之美-古诗丽词》添加两篇词</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/9/26</strong></li></ul><ol><li>《语言之美-古诗丽词》添加词《一剪梅·舟过吴江》</li><li>修复无法评论BUG</li></ol><p><strong>小结</strong>：更新一篇文章；修复BUG</p><hr><ul><li><strong>2020/8/26</strong></li></ul><ol><li>更新文章《语言之美-新句美文》</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/8/19</strong></li></ul><ol><li>更新文章《语言之美-古诗丽词》</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/8/14</strong></li></ul><ol><li>添加文章《Python网络爬虫示例（有道词典）》</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/8/9</strong></li></ul><ol><li>添加文章《关于在Python中利用pandas读取与保存csv文件失败的解决方法(‘utf-8’编码格式不对)》</li><li>删除两篇低价值文章，合并一篇文章</li></ol><p><strong>小结</strong>：更新一篇文章，清理两篇文章</p><hr><ul><li><strong>2020/8/6</strong></li></ul><ol><li>更新文章《语言之美-古诗丽词》</li><li>添加文章《R语言dgCMatrix稀疏矩阵结构》</li><li>修复文章评论系统</li></ol><p><strong>小结</strong>：更新两篇文章，修复无法评论小BUG</p><hr><ul><li><strong>2020/7/21</strong></li></ul><ol><li>更新文章《R语言学习笔记》、《语言之美-古诗丽词》</li></ol><p><strong>小结</strong>：更新两篇文章</p><hr><ul><li><strong>2020/7/20</strong></li></ul><ol><li>更新文章《R语言学习笔记》</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/7/19</strong></li></ul><ol><li>更新文章《R语言学习笔记》</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/7/5</strong></li></ul><ol><li>更新文章《Hexo进行本地预览》为《Hexo常用命令》</li><li>小幅修改博客导航文字</li></ol><p><strong>小结</strong>：更新一篇文章，小幅修改博客导航文字</p><hr><ul><li><strong>2020/7/5</strong></li></ul><ol><li>更新文章《R语言学习笔记》</li></ol><p><strong>小结</strong>：更新文章《R语言学习笔记》</p><hr><ul><li><strong>2020/7/5</strong></li></ul><ol><li>添加文章《C++学习笔记》</li></ol><p><strong>小结</strong>：添加文章《C++学习笔记》</p><hr><ul><li><strong>2020/7/4</strong></li></ul><ol><li>修复了博客<em>文章分类</em>模块无法显示的问题</li></ol><p><strong>小结</strong>：博客小BUG修复</p><hr><ul><li><strong>2020/7/2</strong></li></ul><ol><li>添加文章《R语言学习笔记》</li></ol><p><strong>小结</strong>：添加文章<strong>《R语言学习笔记》</strong></p><hr><ul><li><strong>2020/5/9</strong></li></ul><ol><li>更新文章《《python深度学习》笔记》</li><li>添加文章《Python中copy与deepcopy的区别》</li></ol><p><strong>小结</strong>：今日更新文章<strong>《《python深度学习》笔记》</strong>，添加文章<strong>《Python中copy与deepcopy的区别》</strong></p><hr><ul><li><strong>2020/5/8</strong></li></ul><ol><li>更新文章《《python深度学习》笔记》</li><li>优化《语言之美-古诗丽词》检索界面</li></ol><p><strong>小结</strong>：今日更新文章<strong>《《python深度学习》笔记》</strong>，优化<strong>《语言之美-古诗丽词》</strong>检索界面(2020/5/8 09:42 PV:460 UV:206)</p><hr><ul><li><strong>2020/5/7</strong></li></ul><ol><li>更新文章《《python深度学习》笔记》</li></ol><p><strong>小结</strong>：今日更新文章<strong>《《python深度学习》笔记》</strong>(2020/5/7 11:14 PV:460 UV:206)</p><hr><ul><li><strong>2020/5/6</strong></li></ul><ol><li>添加文章《《python深度学习》笔记》</li></ol><p><strong>小结</strong>：今日添加文章<strong>《《python深度学习》笔记》</strong>(2020/5/6 12:08 PV:456 UV:204)</p><hr><ul><li><strong>2020/4/30</strong></li></ul><ol><li>光影画廊模块上线</li><li>小幅更新文章《语言之美-古诗丽词》</li></ol><p><strong>小结</strong>：今日<strong>上线光影画廊模块</strong>,更新<strong>《语言之美-古诗丽词》</strong>(2020/4/30 20:39 PV:436 UV:188)</p><hr><ul><li><strong>2020/4/29</strong></li></ul><ol><li>小幅更新文章《语言之美-古诗丽词》与《语言之美-新句美文》</li><li>更改两处滚动标题</li></ol><p><strong>小结</strong>：今日<strong>更新两篇文章</strong>(2020/4/29 22:34 PV:430 UV:183)</p><hr><ul><li><strong>2020/4/23</strong></li></ul><ol><li>更新文章《利用tf.concat()与np.concatenate来拼接向量》</li></ol><p><strong>小结</strong>：今日<strong>更新一篇文章</strong>(2020/4/23 10:13 PV:411 UV:165)</p><hr><ul><li><strong>2020/4/22</strong></li></ul><ol><li>添加文章《利用reshape重塑numpy数组》，《利用tf.concat()与np.concatenate来拼接向量》</li></ol><p><strong>小结</strong>：今日<strong>添加两篇文章</strong>(2020/4/22 10:13 PV:399 UV:158)</p><hr><ul><li><strong>2020/4/20</strong></li></ul><ol><li>更新文章《语言之美-古诗丽词》</li></ol><p><strong>小结</strong>：今日<strong>大幅更新《语言之美-古诗丽词》并优化文章排版</strong>(2020/4/20 22:05 PV:390 UV:153)</p><hr><ul><li><strong>2020/4/16</strong></li></ul><ol><li>更新文章《《数据结构与算法》笔记(Python语言实现)》(2020/4/16 20:06 PV:385 UV:150)</li></ol><hr><ul><li><strong>2020/4/14</strong></li></ul><ol><li>更新文章《Pandas在Python语言下的基础使用》(2020/4/14 22:12 PV:376 UV:145)</li></ol><hr><ul><li><strong>2020/4/13</strong></li></ul><ol><li>更新文章《《Python机器学习基础教程》笔记(scikit-learn框架)》</li><li>更新文章《python画散点图[plt.scatter()]以及矩阵散点图[pd.scatter_matrix()]详解》（待优化）</li><li>暂时搁置文章《Pandas在Python语言下的基础使用》</li><li>暂时搁置文章《《数据结构与算法》笔记(Python语言实现)》</li></ol><p><strong>小结</strong>：今日更新主要<strong>优化文章排版</strong>，<strong>更新两篇文章</strong>(2020/4/13 22:05 PV:374 UV:143)</p><hr><ul><li><strong>2020/4/11</strong></li></ul><ol><li>博客现在已经<strong>能够在文章中插入图片</strong>，但<strong>光影画廊仍然无法在云端显示图片</strong></li><li>博客现在已开放<strong>评论留言系统</strong>，并能够<strong>置顶文章</strong></li></ol><p><strong>小结</strong>：今天<strong>无文章更新</strong>，主要是<strong>完善博客功能</strong>(2020/4/11 22:39 PV:354 UV:138)</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;这篇说明将更好地帮助你在-lt-Mr-l’s-World-gt-里畅游&quot;&gt;&lt;a href=&quot;#这篇说明将更好地帮助你在-lt-Mr-l’s-World-gt-里畅游&quot; class=&quot;headerlink&quot; title=&quot;这篇说明将更好地帮助你在&amp;lt;Mr.l’s World&amp;gt;里畅游&quot;&gt;&lt;/a&gt;这篇说明将更好地帮助你在&amp;lt;&lt;em&gt;Mr.l’s World&lt;/em&gt;&amp;gt;里畅游&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;博客使用简介&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;博客界面&lt;strong&gt;左侧&lt;/strong&gt;有&lt;strong&gt;侧边菜单&lt;/strong&gt;为你提供快捷帮助&lt;strong&gt;&amp;lt;&lt;em&gt;手机用户请点击屏幕左上角按钮以呼出菜单&lt;/em&gt;&amp;gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;博客界面&lt;strong&gt;右下角&lt;/strong&gt;有&lt;strong&gt;暗夜模式按钮&lt;/strong&gt;为你提供更好的浏览体验&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;博客同样为你提供&lt;strong&gt;文章查找&lt;/strong&gt;功能，功能按钮在&lt;strong&gt;侧边菜单&lt;/strong&gt;的下方&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;博客已开放&lt;strong&gt;评论留言系统&lt;/strong&gt;，欢迎大家在评论区留下你的足迹&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;《语言之美-古诗丽词》&lt;/strong&gt;与&lt;strong&gt;《语言之美-新句美文》&lt;/strong&gt;两篇文章将不定时持续更新，欢迎大家在评论区留下自己的珍藏，我也很乐意将其收录进文章里面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;光影画廊&lt;/strong&gt;模块里展示了一些我个人的绘画作品，希望大家能够喜欢(^^)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;技术支持&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Powered by&lt;/strong&gt; &lt;a href=&quot;https://hexo.io/zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Theme:&lt;/strong&gt; &lt;a href=&quot;https://shen-yu.gitee.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ayer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt; (以下是博客更新日志，日志从2020/4/11开始记录，你&lt;strong&gt;可以点击&lt;/strong&gt;&amp;lt;阅读更多…&amp;gt;来快速掌握博客更新动向，或者在&lt;strong&gt;文章概览&lt;/strong&gt;里浏览最近更新的文章)&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>希尔密码(Hill Cipher)的Python实现</title>
    <link href="https://hong-king.github.io/2020/11/29/%E5%B8%8C%E5%B0%94%E5%AF%86%E7%A0%81(Hill%20Cipher)%E7%9A%84Python%E5%AE%9E%E7%8E%B0/"/>
    <id>https://hong-king.github.io/2020/11/29/%E5%B8%8C%E5%B0%94%E5%AF%86%E7%A0%81(Hill%20Cipher)%E7%9A%84Python%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-11-29T01:23:00.000Z</published>
    <updated>2020-11-29T01:24:01.434Z</updated>
    
    <content type="html"><![CDATA[<p>此程序为希尔密码(Hill Cipher)的Python实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">All rights reserved by Liu Junhong</span></span><br><span class="line"><span class="string">Reference books: 《信息论基础》、百度百科-希尔密码 (https://baike.baidu.com/item/%E5%B8%8C%E5%B0%94%E5%AF%86%E7%A0%81/2250150?fr=aladdin)</span></span><br><span class="line"><span class="string">Completion time：2020-11-27</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">import math</span><br><span class="line">import numpy as np</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"><span class="comment">#加/解密算法</span></span><br><span class="line">def <span class="keyword">function</span>(matrix):</span><br><span class="line">    List = []</span><br><span class="line">    STR = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> message:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(i)):</span><br><span class="line">            <span class="keyword">for</span> h <span class="keyword">in</span> i[j]:</span><br><span class="line">                List.append(letter_dict[h])</span><br><span class="line">            <span class="keyword">if</span> len(i)- j &gt; 1:</span><br><span class="line">                List.append(letter_dict[<span class="string">' '</span>])</span><br><span class="line">        <span class="keyword">while</span>(not len(List)%4 == 0):</span><br><span class="line">            List.append(letter_dict[<span class="string">' '</span>])</span><br><span class="line">        B = np.array(List).reshape(-1,4)</span><br><span class="line">        C = np.dot(matrix,np.transpose(B))</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> np.transpose(C).reshape(1,-1)[0]:</span><br><span class="line">            <span class="keyword">if</span> k &gt;int(k):                                <span class="comment">#确保矩阵计算精度</span></span><br><span class="line">                STR = STR + num_dict[(int(k)+1)%53]</span><br><span class="line">            <span class="keyword">else</span>:STR = STR + num_dict[int(k)%53]</span><br><span class="line">        <span class="built_in">print</span>(STR)</span><br><span class="line">        List = []     </span><br><span class="line">        STR = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#程序说明</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------&lt;希尔密码(MOD53)&gt;程序说明-------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"该程序目前只接受大小写英文加密讯息(支持空格)!"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"若要结束输入，请按两次回车"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"每次运行程序，密钥都会改变!"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"为保证解码顺利，密钥矩阵|A|=+/-1!"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"-----------------------------------------------"</span>,<span class="string">"\n"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Designed by 刘俊宏：All rights reserved"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: 《信息论基础》、百度百科-希尔密码 (https://baike.baidu.com/item/%E5%B8%8C%E5%B0%94%E5%AF%86%E7%A0%81/2250150?fr=aladdin)"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Completion time：2020-11-27"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Last modification time ：2020-11-29"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"--------------------------------------------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建码符集</span></span><br><span class="line">letter = [<span class="string">' '</span>]+[chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(97, 123)] + [chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(65, 91)]</span><br><span class="line">letter_dict = dict(zip(letter,range(len(letter))))</span><br><span class="line">num_dict = dict(zip(range(len(letter)),letter))</span><br><span class="line">                   </span><br><span class="line"><span class="comment">#*******录入数据</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"请输入需要加密的英文讯息:"</span>)</span><br><span class="line">message = []</span><br><span class="line">try:</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        m = sys.stdin.readline().strip() <span class="comment">#若是多输入，strip()默认是以空格分隔，返回一个包含多个字符串的list。</span></span><br><span class="line">        <span class="keyword">if</span> m == <span class="string">''</span>:</span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        m = list(m.split())</span><br><span class="line">        message.append(m)</span><br><span class="line">except:</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"正在加密，请稍后...."</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成随机4阶可逆矩阵(密钥)</span></span><br><span class="line">A = np.random.randint(1, 10, size=(4,4)) <span class="comment">#生成[1,10]区间的整数随机矩阵(密钥)</span></span><br><span class="line"><span class="keyword">while</span> (not abs(np.linalg.det(A)) == 1 ): <span class="comment">#该条件用于保证密钥的逆矩阵为整数</span></span><br><span class="line">    A = np.random.randint(1, 10, size=(4,4))</span><br><span class="line">A_Inv = np.linalg.inv(A)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------密钥-------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(A)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------密文-------------------"</span>)</span><br><span class="line"><span class="keyword">function</span>(A)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"****************解码****************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"请输入密文："</span>)</span><br><span class="line">message = []</span><br><span class="line">try:</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        m = sys.stdin.readline().strip() <span class="comment">#若是多输入，strip()默认是以空格分隔，返回一个包含多个字符串的list。</span></span><br><span class="line">        <span class="keyword">if</span> m == <span class="string">''</span>:</span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        m = list(m.split())</span><br><span class="line">        message.append(m)</span><br><span class="line">except:</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"正在解密，请稍后...."</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------原文-------------------"</span>)</span><br><span class="line"><span class="keyword">function</span>(A_Inv)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;此程序为希尔密码(Hill Cipher)的Python实现&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python 从输入端读取多行数据</title>
    <link href="https://hong-king.github.io/2020/11/27/Python%20%E4%BB%8E%E8%BE%93%E5%85%A5%E7%AB%AF%E8%AF%BB%E5%8F%96%E5%A4%9A%E8%A1%8C%E6%95%B0%E6%8D%AE/"/>
    <id>https://hong-king.github.io/2020/11/27/Python%20%E4%BB%8E%E8%BE%93%E5%85%A5%E7%AB%AF%E8%AF%BB%E5%8F%96%E5%A4%9A%E8%A1%8C%E6%95%B0%E6%8D%AE/</id>
    <published>2020-11-27T08:49:00.000Z</published>
    <updated>2020-11-27T08:53:33.406Z</updated>
    
    <content type="html"><![CDATA[<p>该方法解决Python从输入端一次读取多个数据的问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">try:</span><br><span class="line">    mx = []</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        m = sys.stdin.readline().strip()</span><br><span class="line">        <span class="comment">#若是多输入，strip()默认是以空格分隔，返回一个包含多个字符串的list。</span></span><br><span class="line">        <span class="keyword">if</span> m == <span class="string">''</span>:</span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        m = list(m.split())</span><br><span class="line">        mx.append(m)</span><br><span class="line">    <span class="built_in">print</span>(mx)</span><br><span class="line">except:</span><br><span class="line">    pass</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;该方法解决Python从输入端一次读取多个数据的问题&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cla
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>利用reshape重塑数组</title>
    <link href="https://hong-king.github.io/2020/11/27/%E5%88%A9%E7%94%A8reshape%E9%87%8D%E5%A1%91numpy%E6%95%B0%E7%BB%84/"/>
    <id>https://hong-king.github.io/2020/11/27/%E5%88%A9%E7%94%A8reshape%E9%87%8D%E5%A1%91numpy%E6%95%B0%E7%BB%84/</id>
    <published>2020-11-27T08:49:00.000Z</published>
    <updated>2020-11-27T08:49:31.996Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在数据预处理阶段，我们经常需要重塑数组。这里所介绍的numpy内置属性reshape将有助于此</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">z = np.array([[1, 2, 3, 4],[5, 6, 7, 8],[9, 10, 11, 12],[13, 14, 15, 16]])</span><br><span class="line"><span class="comment"># 创建一个形状为（4，4）的数组[z]</span></span><br><span class="line">a = z.reshape(-1)</span><br><span class="line"><span class="comment">#reshape(1,-1)转化成1行：</span></span><br><span class="line"><span class="comment">#reshape(2,-1)转换成两行：</span></span><br><span class="line"><span class="comment">#reshape(-1,1)转换成1列：</span></span><br><span class="line"><span class="comment">#reshape(-1,2)转化成两列</span></span><br><span class="line"><span class="comment"># 使用reshape重塑数组[z]</span></span><br><span class="line">[out]:</span><br><span class="line">[ 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 ]</span><br><span class="line"><span class="comment">#----------------------------------------------------------</span></span><br><span class="line">a = z.reshape(-1,2)</span><br><span class="line"><span class="comment"># 在这种用法中，-1可以理解为数组行数待定，2表示重组后的数组列数为2</span></span><br><span class="line">[out]:</span><br><span class="line">[[ 1  2]</span><br><span class="line"> [ 3  4]</span><br><span class="line"> [ 5  6]</span><br><span class="line"> [ 7  8]</span><br><span class="line"> [ 9 10]</span><br><span class="line"> [11 12]</span><br><span class="line"> [13 14]</span><br><span class="line"> [15 16]]</span><br><span class="line"><span class="comment">#--------------------------------------------------------------</span></span><br><span class="line">a = z.reshape(2,2,4)</span><br><span class="line"><span class="comment"># 也可以指定行列，但重组后的矩阵元素数量必须与之前相同</span></span><br><span class="line">[out]:</span><br><span class="line">[[[ 1  2  3  4]</span><br><span class="line">  [ 5  6  7  8]]</span><br><span class="line"></span><br><span class="line"> [[ 9 10 11 12]</span><br><span class="line">  [13 14 15 16]]]</span><br></pre></td></tr></table></figure><blockquote><p>在TensorFlow中还可以利用tf.reshape对数组重塑</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tf.reshape(tensor,shape,name=None)</span><br><span class="line"><span class="comment"># tensor表示要处理的对象，shape表示目标矩阵形状（如[num，num]）</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;在数据预处理阶段，我们经常需要重塑数组。这里所介绍的numpy内置属性reshape将有助于此&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 基础语法" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>哈夫曼(Huffman)编码的Python实现</title>
    <link href="https://hong-king.github.io/2020/11/25/%E5%93%88%E5%A4%AB%E6%9B%BC(Huffman)%E7%BC%96%E7%A0%81%E7%9A%84Python%E5%AE%9E%E7%8E%B0/"/>
    <id>https://hong-king.github.io/2020/11/25/%E5%93%88%E5%A4%AB%E6%9B%BC(Huffman)%E7%BC%96%E7%A0%81%E7%9A%84Python%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-11-25T12:18:00.000Z</published>
    <updated>2020-11-25T12:20:10.877Z</updated>
    
    <content type="html"><![CDATA[<p>此程序为哈夫曼(Huffman)编码的Python实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">All rights reserved by Liu Junhong</span></span><br><span class="line"><span class="string">Reference books: 《信息论基础》</span></span><br><span class="line"><span class="string">Completion time：2020-11-24</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">import math</span><br><span class="line"></span><br><span class="line"><span class="comment">#程序说明</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------&lt;哈夫曼编码&gt;程序说明-------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Designed by 刘俊宏：All rights reserved"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: 《信息论基础》、百度百科-哈夫曼编码 (https://baike.baidu.com/item/%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81/1719730?fr=aladdin)"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Completion time：2020-11-24"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Last modification time ：2020-11-25"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"--------------------------------------------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#*******录入数据</span></span><br><span class="line">N_num = <span class="built_in">float</span>(input(<span class="string">"请输入需要编码字符个数："</span>))</span><br><span class="line"><span class="keyword">while</span>(N_num &lt;= 0 or (N_num % 1)):</span><br><span class="line">    N_num = <span class="built_in">float</span>(input(<span class="string">"请输入正整数："</span>))</span><br><span class="line">N_num = int(N_num)</span><br><span class="line"></span><br><span class="line">Dict = []</span><br><span class="line">Huffman_dict = &#123;&#125;</span><br><span class="line">probability = 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(N_num &gt; 0):</span><br><span class="line">    N_num = N_num-1</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"------还需输入"</span>,N_num,<span class="string">"编码字符信息------"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"请输入一个编码字符名："</span>)</span><br><span class="line">    name = str(input())</span><br><span class="line">    Huffman_dict.setdefault(name)</span><br><span class="line">    Huffman_dict[name] = <span class="string">''</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"请输入小于"</span>,probability,<span class="string">"的对应编码字符概率："</span>)</span><br><span class="line">    value = <span class="built_in">float</span>(input())</span><br><span class="line">    probability = probability - value</span><br><span class="line">    Dict.append((value,[name]))</span><br><span class="line"></span><br><span class="line"><span class="comment">#按概率排序</span></span><br><span class="line">Dict_order=sorted(Dict,reverse=False)</span><br><span class="line"></span><br><span class="line"><span class="comment">#编码算法</span></span><br><span class="line">Dict_order_copy = Dict_order</span><br><span class="line">Dict_order_copy_copy = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(len(Dict_order_copy)&gt;1):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(int(len(Dict_order_copy)/2)):</span><br><span class="line">        <span class="keyword">if</span> len(Dict_order_copy)-2*(i+1) == 1:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> Dict_order_copy[2*i][1]:</span><br><span class="line">                </span><br><span class="line">                   Huffman_dict[j] =  <span class="string">'0'</span> + Huffman_dict[j]</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> Dict_order_copy[2*i+1][1]:</span><br><span class="line">                   Huffman_dict[j] =  <span class="string">'1'</span> + Huffman_dict[j]</span><br><span class="line">               </span><br><span class="line">            Dict_order_copy_copy.append((Dict_order_copy[2*i][0]+Dict_order_copy[2*i+1][0],Dict_order_copy[2*i][1]+Dict_order_copy[2*i+1][1]))</span><br><span class="line">            Dict_order_copy_copy.append((Dict_order_copy[len(Dict_order_copy)-1][0],Dict_order_copy[len(Dict_order_copy)-1][1]))</span><br><span class="line">        <span class="keyword">else</span>:    </span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> Dict_order_copy[2*i][1]:</span><br><span class="line">                   Huffman_dict[j] = <span class="string">'0'</span> + Huffman_dict[j]</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> Dict_order_copy[2*i+1][1]:</span><br><span class="line">                   Huffman_dict[j] = <span class="string">'1'</span> + Huffman_dict[j]</span><br><span class="line">                   </span><br><span class="line">            Dict_order_copy_copy.append((Dict_order_copy[2*i][0]+Dict_order_copy[2*i+1][0],Dict_order_copy[2*i][1]+Dict_order_copy[2*i+1][1]))</span><br><span class="line">            </span><br><span class="line">    Dict_order_copy = sorted(Dict_order_copy_copy,reverse=False)</span><br><span class="line"></span><br><span class="line">    Dict_order_copy_copy = []</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果</span></span><br><span class="line"><span class="built_in">print</span>(Huffman_dict)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;此程序为哈夫曼(Huffman)编码的Python实现&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cl
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>费诺(Fano)编码的Python实现</title>
    <link href="https://hong-king.github.io/2020/11/25/%E8%B4%B9%E8%AF%BA(Fano)%E7%BC%96%E7%A0%81%E7%9A%84Python%E5%AE%9E%E7%8E%B0/"/>
    <id>https://hong-king.github.io/2020/11/25/%E8%B4%B9%E8%AF%BA(Fano)%E7%BC%96%E7%A0%81%E7%9A%84Python%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-11-25T10:17:00.000Z</published>
    <updated>2020-11-25T10:17:53.897Z</updated>
    
    <content type="html"><![CDATA[<p>此程序为费诺编码的Python实现,但此版本存在缺陷：每个编码符号出现的概率不能相同。该问题在第二个程序得到改进。</p><blockquote><p>第一个程序</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">All rights reserved by Liu Junhong</span></span><br><span class="line"><span class="string">Reference books: 《信息论基础》</span></span><br><span class="line"><span class="string">Completion time：2020-11-24</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line"><span class="comment">#import numpy as np</span></span><br><span class="line"><span class="comment">#import pandas</span></span><br><span class="line"><span class="comment">#import time</span></span><br><span class="line">import math</span><br><span class="line"><span class="comment">#import sys</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#程序说明</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------&lt;费诺编码&gt;程序说明-------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Designed by 刘俊宏：All rights reserved"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: 《信息论基础》、百度百科-费诺编码 (https://baike.baidu.com/item/%E8%B4%B9%E8%AF%BA%E7%BC%96%E7%A0%81)"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Completion time：2020-11-24"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Last modification time ：2020-11-24"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"--------------------------------------------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#*******录入数据</span></span><br><span class="line">N_num = <span class="built_in">float</span>(input(<span class="string">"请输入需要编码字符个数："</span>))</span><br><span class="line"><span class="keyword">while</span>(N_num &lt;= 0 or (N_num % 1)):</span><br><span class="line">    N_num = <span class="built_in">float</span>(input(<span class="string">"请输入正整数："</span>))</span><br><span class="line">N_num = int(N_num)</span><br><span class="line"></span><br><span class="line">Dict = &#123;&#125;</span><br><span class="line">probability = 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(N_num &gt; 0):</span><br><span class="line">    N_num = N_num-1</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"------还需输入"</span>,N_num,<span class="string">"编码字符信息------"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"请输入一个编码字符名："</span>)</span><br><span class="line">    name = str(input())</span><br><span class="line">    Dict.setdefault(name)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"请输入小于"</span>,probability,<span class="string">"的对应编码字符概率："</span>)</span><br><span class="line">    value = <span class="built_in">float</span>(input())</span><br><span class="line">    probability = probability - value</span><br><span class="line">    Dict[name] = value</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(Dict)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#按概率排序</span></span><br><span class="line">Dict_order=sorted(Dict.items(),key=lambda x:x[1],reverse=True)</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(Dict_order)</span></span><br><span class="line"><span class="comment">#sys.exit(0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#编码算法</span></span><br><span class="line">name = []</span><br><span class="line">value = []</span><br><span class="line"><span class="comment">#code = []</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#truncation = 0 #保存截断位置</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> Dict_order:</span><br><span class="line">    name.append(i[0])</span><br><span class="line">    value.append(i[1])</span><br><span class="line">    </span><br><span class="line">Fano_dict_value = &#123;&#125;.fromkeys(value,<span class="string">''</span>)</span><br><span class="line"><span class="comment">#print(name)</span></span><br><span class="line"><span class="comment">#print(value)</span></span><br><span class="line"></span><br><span class="line">value_copy = [value]</span><br><span class="line">value_copy_copy = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(len(value_copy)&gt;0):</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> value_copy:</span><br><span class="line">        <span class="keyword">if</span> len(k) == 2:</span><br><span class="line">            Fano_dict_value[k[0]] = Fano_dict_value[k[0]] + <span class="string">'0'</span></span><br><span class="line">            Fano_dict_value[k[1]] = Fano_dict_value[k[1]] + <span class="string">'1'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(k)):</span><br><span class="line">                a = sum(k[:i])</span><br><span class="line">                b = sum(k[i:])</span><br><span class="line">                c = sum(k[:(i+1)])</span><br><span class="line">                d = sum(k[(i+1):])</span><br><span class="line">                <span class="keyword">if</span> abs(a-b)&lt;abs(c<span class="_">-d</span>):</span><br><span class="line">                    <span class="keyword">if</span> i == 1:</span><br><span class="line">                        Fano_dict_value[k[0]] = Fano_dict_value[k[0]] + <span class="string">'0'</span></span><br><span class="line">                        value_copy_copy.append(k[1:])</span><br><span class="line">                        <span class="keyword">for</span> h <span class="keyword">in</span> k[1:]:</span><br><span class="line">                            Fano_dict_value[h] = Fano_dict_value[h] + <span class="string">'1'</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        value_copy_copy.append(k[:i])</span><br><span class="line">                        value_copy_copy.append(k[i:])</span><br><span class="line">                        <span class="keyword">for</span> j <span class="keyword">in</span> k[:i]:</span><br><span class="line">                            Fano_dict_value[j] = Fano_dict_value[j] + <span class="string">'0'</span></span><br><span class="line">                        <span class="keyword">for</span> h <span class="keyword">in</span> k[i:]:</span><br><span class="line">                            Fano_dict_value[h] = Fano_dict_value[h] + <span class="string">'1'</span></span><br><span class="line">                    <span class="built_in">break</span></span><br><span class="line">    value_copy = value_copy_copy</span><br><span class="line">    value_copy_copy = []</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果</span></span><br><span class="line">Fano_dict = dict(zip(name,Fano_dict_value.values()))</span><br><span class="line"><span class="built_in">print</span>(Fano_dict)</span><br></pre></td></tr></table></figure><a id="more"></a><blockquote><p>第二个程序</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">All rights reserved by Liu Junhong</span></span><br><span class="line"><span class="string">Reference books: 《信息论基础》</span></span><br><span class="line"><span class="string">Completion time：2020-11-24</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">import math</span><br><span class="line"></span><br><span class="line"><span class="comment">#程序说明</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------&lt;费诺编码&gt;程序说明-------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Designed by 刘俊宏：All rights reserved"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: 《信息论基础》、百度百科-费诺编码 (https://baike.baidu.com/item/%E8%B4%B9%E8%AF%BA%E7%BC%96%E7%A0%81)"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Completion time：2020-11-24"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Last modification time ：2020-11-25"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"--------------------------------------------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#*******录入数据</span></span><br><span class="line">N_num = <span class="built_in">float</span>(input(<span class="string">"请输入需要编码字符个数："</span>))</span><br><span class="line"><span class="keyword">while</span>(N_num &lt;= 0 or (N_num % 1)):</span><br><span class="line">    N_num = <span class="built_in">float</span>(input(<span class="string">"请输入正整数："</span>))</span><br><span class="line">N_num = int(N_num)</span><br><span class="line"></span><br><span class="line">Dict = &#123;&#125;</span><br><span class="line">probability = 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(N_num &gt; 0):</span><br><span class="line">    N_num = N_num-1</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"------还需输入"</span>,N_num,<span class="string">"编码字符信息------"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"请输入一个编码字符名："</span>)</span><br><span class="line">    name = str(input())</span><br><span class="line">    Dict.setdefault(name)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"请输入小于"</span>,probability,<span class="string">"的对应编码字符概率："</span>)</span><br><span class="line">    value = <span class="built_in">float</span>(input())</span><br><span class="line">    probability = probability - value</span><br><span class="line">    Dict[name] = value</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#按概率排序</span></span><br><span class="line">Dict_order=sorted(Dict.items(),key=lambda x:x[1],reverse=True)</span><br><span class="line"></span><br><span class="line"><span class="comment">#编码算法</span></span><br><span class="line">name = []</span><br><span class="line">value = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> Dict_order:</span><br><span class="line">    name.append(i[0])</span><br><span class="line">    value.append(i[1])</span><br><span class="line">    </span><br><span class="line">Fano_dict = &#123;&#125;.fromkeys(name,<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line">value_copy = [value]</span><br><span class="line">value_copy_copy = []</span><br><span class="line">name_copy = [name]</span><br><span class="line">name_copy_copy = []</span><br><span class="line"><span class="keyword">while</span>(len(value_copy)&gt;0):</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(len(value_copy)):</span><br><span class="line">        <span class="keyword">if</span> len(value_copy[k]) == 2:</span><br><span class="line">            Fano_dict[name_copy[k][0]] = Fano_dict[name_copy[k][0]] + <span class="string">'0'</span></span><br><span class="line">            Fano_dict[name_copy[k][1]] = Fano_dict[name_copy[k][1]] + <span class="string">'1'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(value_copy[k])):</span><br><span class="line">                a = sum(value_copy[k][:i])</span><br><span class="line">                b = sum(value_copy[k][i:])</span><br><span class="line">                c = sum(value_copy[k][:(i+1)])</span><br><span class="line">                d = sum(value_copy[k][(i+1):])</span><br><span class="line">                <span class="keyword">if</span> abs(a-b)&lt;abs(c<span class="_">-d</span>):</span><br><span class="line">                    <span class="keyword">if</span> i == 1:</span><br><span class="line">                        Fano_dict[name_copy[k][0]] = Fano_dict[name_copy[k][0]] + <span class="string">'0'</span></span><br><span class="line">                        value_copy_copy.append(value_copy[k][1:])</span><br><span class="line">                        name_copy_copy.append(name_copy[k][1:])</span><br><span class="line">                        <span class="keyword">for</span> h <span class="keyword">in</span> name_copy[k][1:]:</span><br><span class="line">                            Fano_dict[h] = Fano_dict[h] + <span class="string">'1'</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        value_copy_copy.append(value_copy[k][:i])</span><br><span class="line">                        value_copy_copy.append(value_copy[k][i:])</span><br><span class="line">                        name_copy_copy.append(name_copy[k][:i])</span><br><span class="line">                        name_copy_copy.append(name_copy[k][i:])</span><br><span class="line">                        <span class="keyword">for</span> j <span class="keyword">in</span> name_copy[k][:i]:</span><br><span class="line">                            Fano_dict[j] = Fano_dict[j] + <span class="string">'0'</span></span><br><span class="line">                        <span class="keyword">for</span> h <span class="keyword">in</span> name_copy[k][i:]:</span><br><span class="line">                            Fano_dict[h] = Fano_dict[h] + <span class="string">'1'</span></span><br><span class="line">                    <span class="built_in">break</span></span><br><span class="line">    value_copy = value_copy_copy</span><br><span class="line">    name_copy = name_copy_copy</span><br><span class="line">    value_copy_copy = []</span><br><span class="line">    name_copy_copy = []</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果</span></span><br><span class="line"><span class="built_in">print</span>(Fano_dict)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此程序为费诺编码的Python实现,但此版本存在缺陷：每个编码符号出现的概率不能相同。该问题在第二个程序得到改进。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第一个程序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;All rights reserved by Liu Junhong&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;Reference books: 《信息论基础》&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;Completion time：2020-11-24&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#import numpy as np&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#import pandas&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#import time&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import math&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#import sys&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#程序说明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;-------------------&amp;lt;费诺编码&amp;gt;程序说明-------------------&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Designed by 刘俊宏：All rights reserved&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Reference books: 《信息论基础》、百度百科-费诺编码 (https://baike.baidu.com/item/%E8%B4%B9%E8%AF%BA%E7%BC%96%E7%A0%81)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Completion time：2020-11-24&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Last modification time ：2020-11-24&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;--------------------------------------------------------&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#*******录入数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;N_num = &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt;(input(&lt;span class=&quot;string&quot;&gt;&quot;请输入需要编码字符个数：&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(N_num &amp;lt;= 0 or (N_num % 1)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    N_num = &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt;(input(&lt;span class=&quot;string&quot;&gt;&quot;请输入正整数：&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;N_num = int(N_num)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Dict = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;probability = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(N_num &amp;gt; 0):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    N_num = N_num-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;------还需输入&quot;&lt;/span&gt;,N_num,&lt;span class=&quot;string&quot;&gt;&quot;编码字符信息------&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;请输入一个编码字符名：&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name = str(input())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Dict.setdefault(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;请输入小于&quot;&lt;/span&gt;,probability,&lt;span class=&quot;string&quot;&gt;&quot;的对应编码字符概率：&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value = &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt;(input())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    probability = probability - value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Dict[name] = value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#print(Dict)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#按概率排序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Dict_order=sorted(Dict.items(),key=lambda x:x[1],reverse=True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#print(Dict_order)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#sys.exit(0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#编码算法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;value = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#code = []&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#truncation = 0 #保存截断位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; Dict_order:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name.append(i[0])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value.append(i[1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Fano_dict_value = &amp;#123;&amp;#125;.fromkeys(value,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#print(name)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#print(value)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;value_copy = [value]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;value_copy_copy = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(len(value_copy)&amp;gt;0):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; k &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; value_copy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(k) == 2:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Fano_dict_value[k[0]] = Fano_dict_value[k[0]] + &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Fano_dict_value[k[1]] = Fano_dict_value[k[1]] + &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(k)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                a = sum(k[:i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                b = sum(k[i:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                c = sum(k[:(i+1)])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                d = sum(k[(i+1):])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; abs(a-b)&amp;lt;abs(c&lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i == 1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        Fano_dict_value[k[0]] = Fano_dict_value[k[0]] + &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        value_copy_copy.append(k[1:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; h &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; k[1:]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            Fano_dict_value[h] = Fano_dict_value[h] + &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        value_copy_copy.append(k[:i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        value_copy_copy.append(k[i:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; k[:i]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            Fano_dict_value[j] = Fano_dict_value[j] + &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; h &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; k[i:]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            Fano_dict_value[h] = Fano_dict_value[h] + &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;built_in&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value_copy = value_copy_copy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value_copy_copy = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#输出结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Fano_dict = dict(zip(name,Fano_dict_value.values()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(Fano_dict)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>香农(Shannon)编码的Python实现</title>
    <link href="https://hong-king.github.io/2020/11/24/%E9%A6%99%E5%86%9C(Shannon)%E7%BC%96%E7%A0%81%E7%9A%84Python%E5%AE%9E%E7%8E%B0/"/>
    <id>https://hong-king.github.io/2020/11/24/%E9%A6%99%E5%86%9C(Shannon)%E7%BC%96%E7%A0%81%E7%9A%84Python%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-11-24T10:53:00.000Z</published>
    <updated>2020-11-24T10:57:04.877Z</updated>
    
    <content type="html"><![CDATA[<p>此程序为香农编码的Python实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">All rights reserved by Liu Junhong</span></span><br><span class="line"><span class="string">Reference books: 《信息论基础》</span></span><br><span class="line"><span class="string">Completion time：2020-11-23</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line"><span class="comment">#import numpy as np</span></span><br><span class="line"><span class="comment">#import pandas</span></span><br><span class="line"><span class="comment">#import time</span></span><br><span class="line">import math</span><br><span class="line"><span class="comment">#import sys</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#程序说明</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------&lt;香农编码&gt;程序说明-------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Designed by 刘俊宏：All rights reserved"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: 《信息论基础》、百度百科-香农编码 (https://baike.baidu.com/item/%E9%A6%99%E5%86%9C%E7%BC%96%E7%A0%81/22353186?fr=aladdin)"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Completion time：2020-11-23"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Last modification time ：2020-11-23"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"--------------------------------------------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#*******录入数据</span></span><br><span class="line">N_num = <span class="built_in">float</span>(input(<span class="string">"请输入需要编码字符个数："</span>))</span><br><span class="line"><span class="keyword">while</span>(N_num &lt;= 0 or (N_num % 1)):</span><br><span class="line">    N_num = <span class="built_in">float</span>(input(<span class="string">"请输入正整数："</span>))</span><br><span class="line">N_num = int(N_num)</span><br><span class="line"></span><br><span class="line">Dict = &#123;&#125;</span><br><span class="line">probability = 1</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(N_num &gt; 0):</span><br><span class="line">    N_num = N_num-1</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"------还需输入"</span>,N_num,<span class="string">"编码字符信息------"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"请输入一个编码字符名："</span>)</span><br><span class="line">    name = str(input())</span><br><span class="line">    Dict.setdefault(name)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"请输入小于"</span>,probability,<span class="string">"的对应编码字符概率："</span>)</span><br><span class="line">    value = <span class="built_in">float</span>(input())</span><br><span class="line">    probability = probability - value</span><br><span class="line">    Dict[name] = value</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(Dict)</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">#按概率排序</span></span><br><span class="line">Dict_order=sorted(Dict.items(),key=lambda x:x[1],reverse=True)</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(Dict_order)</span></span><br><span class="line"><span class="comment">#sys.exit(0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#编码算法</span></span><br><span class="line">Q = 0  <span class="comment">#累加概率</span></span><br><span class="line">Shannon_dict = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> Dict_order:</span><br><span class="line">    P = i[1]    <span class="comment">#字符概率</span></span><br><span class="line">    L = math.ceil(-math.log(P,2)) <span class="comment">#码长</span></span><br><span class="line">    Autoregressive_variable = 0</span><br><span class="line">    num = Q</span><br><span class="line">    word = <span class="string">""</span>   <span class="comment">#码字</span></span><br><span class="line">    <span class="keyword">while</span>(Autoregressive_variable &lt; L):</span><br><span class="line">        <span class="keyword">if</span> int(num) &lt; int(2*num):</span><br><span class="line">            word = word + <span class="string">'1'</span></span><br><span class="line">            num = 2*num - int(2*num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            word = word + <span class="string">'0'</span></span><br><span class="line">            num = 2*num</span><br><span class="line">        Autoregressive_variable = Autoregressive_variable+1</span><br><span class="line">    Shannon_dict.setdefault(i[0])</span><br><span class="line">    Shannon_dict[i[0]] = word</span><br><span class="line">    Q = Q + P</span><br><span class="line">    </span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Shannon_dict编码结果："</span>,Shannon_dict)</span><br><span class="line"><span class="comment">#sys.exit(0)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;此程序为香农编码的Python实现&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>天平秤球问题的Python实现</title>
    <link href="https://hong-king.github.io/2020/11/18/%E5%A4%A9%E5%B9%B3%E7%A7%A4%E7%90%83%E9%97%AE%E9%A2%98%E7%9A%84Python%E5%AE%9E%E7%8E%B0/"/>
    <id>https://hong-king.github.io/2020/11/18/%E5%A4%A9%E5%B9%B3%E7%A7%A4%E7%90%83%E9%97%AE%E9%A2%98%E7%9A%84Python%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-11-18T08:01:00.000Z</published>
    <updated>2020-11-24T10:51:20.132Z</updated>
    
    <content type="html"><![CDATA[<p>此程序为信息论中提到的秤球问题的代码实现，但此算法功能并不完善。目前，该程序只能针对特定的情况给出特定的称量方法，无法给出通解。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">All rights reserved by Liu Junhong</span></span><br><span class="line"><span class="string">Reference books: 百度百科-称球问题 (https://baike.baidu.com/item/称球问题/16038399?fr=aladdin)</span></span><br><span class="line"><span class="string">Completion time：2020-11-16</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">import numpy as np</span><br><span class="line">import pandas</span><br><span class="line">import time</span><br><span class="line">import math</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">sys.setrecursionlimit(1000000) <span class="comment">#设置最大递归深度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#程序说明</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------&lt;称球问题&gt;程序说明-------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Designed by 刘俊宏：All rights reserved"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: 百度百科-称球问题 (https://baike.baidu.com/item/称球问题/16038399?fr=aladdin)"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Completion time：2020-11-16"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Last modification time ：2020-11-24"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"程序缺陷：目前只能对于提供的特定称量情况，给出相对应的称量方案"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"--------------------------------------------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#*******录入数据</span></span><br><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">N_num 所需判断球的总数(正整数)</span></span><br><span class="line"><span class="string">N_bad 坏球的序号(正整数)</span></span><br><span class="line"><span class="string">N_bad_weight 坏球的轻重(正整数)</span></span><br><span class="line"><span class="string">Weighing_times 所需称量的次数</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">N_num = <span class="built_in">float</span>(input(<span class="string">"请输入所需判断球的总数(正整数，n&gt;1)："</span>))</span><br><span class="line"><span class="keyword">while</span>(N_num &lt;= 1 or (N_num % 1)):</span><br><span class="line">    N_num = <span class="built_in">float</span>(input(<span class="string">"请输入规范正整数："</span>))</span><br><span class="line">N_num = int(N_num)</span><br><span class="line">N = np.zeros(N_num,dtype=int)</span><br><span class="line"></span><br><span class="line">N_bad = <span class="built_in">float</span>(input(<span class="string">"请输入第几个球为坏球(正整数)："</span>))</span><br><span class="line"><span class="keyword">while</span>(N_bad &lt;= 0 or (N_bad % 1)):</span><br><span class="line">    N_bad = <span class="built_in">float</span>(input(<span class="string">"请输入正整数："</span>))</span><br><span class="line">N_bad = int(N_bad)</span><br><span class="line"></span><br><span class="line">N_bad_weight = <span class="built_in">float</span>(input(<span class="string">"请输入坏球的轻重(轻输入 -1，重输入 1)："</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>((N_bad_weight != -1) and  (N_bad_weight != 1)):</span><br><span class="line">    </span><br><span class="line">    N_bad_weight = <span class="built_in">float</span>(input(<span class="string">"请输入正确数字："</span>))</span><br><span class="line">N_bad_weight = int(N_bad_weight)</span><br><span class="line"></span><br><span class="line">N[N_bad - 1] = N_bad_weight</span><br><span class="line"></span><br><span class="line">Weighing_times = math.ceil(math.log((2*N_num+3),3))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"---------数据录入成功！---------"</span>,<span class="string">"\n"</span>)</span><br><span class="line">time.sleep(0.6)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"球的总数为："</span>,int(N_num),<span class="string">"\n"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"第"</span>,int(N_bad),<span class="string">"个球为坏球"</span>,<span class="string">"\n"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"球的数据概览如下："</span>,N,<span class="string">"\n"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"所需称量的次数为："</span>,Weighing_times,<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#*******算法部分</span></span><br><span class="line">def Random_generation():</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#生成符合条件的随机矩阵</span></span><br><span class="line">    A = np.random.randint(-1, 2, size=(Weighing_times,N_num)) <span class="comment">#生成[-1,2)区间的整数随机矩阵</span></span><br><span class="line">    <span class="keyword">while</span> (not all(np.sum(A,axis=1) == 0)):</span><br><span class="line">        A = np.random.randint(-1, 2, size=(Weighing_times,N_num))</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#进行矩阵乘法    </span></span><br><span class="line">    Y = np.dot(A,N.reshape((-1,1)))</span><br><span class="line">    <span class="keyword">if</span> all(Y == 0):         <span class="comment">#防止天平全平衡情况</span></span><br><span class="line">        Random_generation()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N_num):</span><br><span class="line">        LIST = list(range(N_num))</span><br><span class="line">        LIST.pop(i)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> all(Y == A[:,i].reshape((-1,1))) and (not any(all(Y == -A[:,j].reshape((-1,1))) <span class="keyword">for</span> j <span class="keyword">in</span> LIST)) and (not any(all(Y == A[:,j].reshape((-1,1))) <span class="keyword">for</span> j <span class="keyword">in</span> LIST)):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"---------程序运行成功，输出结果：---------"</span>,<span class="string">"\n"</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"第"</span>,i+1,<span class="string">"个球为坏的重球"</span>,<span class="string">"\n"</span>)</span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        <span class="keyword">elif</span> all(Y == -A[:,i].reshape((-1,1))) and (not any(all(Y == A[:,j].reshape((-1,1))) <span class="keyword">for</span> j <span class="keyword">in</span> LIST)) and (not any(all(Y == -A[:,j].reshape((-1,1))) <span class="keyword">for</span> j <span class="keyword">in</span> LIST)):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"---------程序运行成功，输出结果：---------"</span>,<span class="string">"\n"</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"第"</span>,i+1,<span class="string">"个球为坏的轻球"</span>,<span class="string">"\n"</span>)</span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        <span class="keyword">elif</span> i == N_num-1:</span><br><span class="line">            Random_generation()</span><br><span class="line">            </span><br><span class="line">    <span class="built_in">return</span> A,Y</span><br><span class="line"></span><br><span class="line">A,Y = Random_generation()</span><br><span class="line"></span><br><span class="line"><span class="comment">#*******描述部分</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"---------称量方法展示！---------"</span>,<span class="string">"\n"</span>)</span><br><span class="line">time.sleep(0.6)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(Weighing_times):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"第"</span>,i+1,<span class="string">"次称量:"</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"左盘球的序号(从1开始计数):"</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(N_num):</span><br><span class="line">        <span class="keyword">if</span> A[i,j] == 1:</span><br><span class="line">            <span class="built_in">print</span>(j+1)</span><br><span class="line">            </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"右盘球的序号(从1开始计数):"</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(N_num):</span><br><span class="line">        <span class="keyword">if</span> A[i,j] == -1:</span><br><span class="line">            <span class="built_in">print</span>(j+1)</span><br><span class="line">            </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"称量结果:"</span>)</span><br><span class="line">    <span class="keyword">if</span> Y[i] == 1:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"左盘重"</span>)</span><br><span class="line">    <span class="keyword">elif</span> Y[i] == 0:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"平衡"</span>)</span><br><span class="line">    <span class="keyword">elif</span> Y[i] == -1:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"右盘重"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;此程序为信息论中提到的秤球问题的代码实现，但此算法功能并不完善。目前，该程序只能针对特定的情况给出特定的称量方法，无法给出通解。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>语言之美-古诗丽词</title>
    <link href="https://hong-king.github.io/2020/11/06/%E8%AF%AD%E8%A8%80%E4%B9%8B%E7%BE%8E-%E5%8F%A4%E8%AF%97%E4%B8%BD%E8%AF%8D/"/>
    <id>https://hong-king.github.io/2020/11/06/%E8%AF%AD%E8%A8%80%E4%B9%8B%E7%BE%8E-%E5%8F%A4%E8%AF%97%E4%B8%BD%E8%AF%8D/</id>
    <published>2020-11-06T10:58:00.000Z</published>
    <updated>2020-11-18T08:18:27.945Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2020下半年收录"><a href="#2020下半年收录" class="headerlink" title="2020下半年收录"></a>2020下半年收录</h1><h3 id="《杂诗三首·其二》-唐-王维"><a href="#《杂诗三首·其二》-唐-王维" class="headerlink" title="《杂诗三首·其二》-[唐] 王维"></a>《杂诗三首·其二》-[唐] 王维</h3><blockquote><p><strong>君自故乡来，应知故乡事。<br>来日绮窗前，寒梅著花未？</strong></p></blockquote><hr><h3 id="《相思》-唐-王维"><a href="#《相思》-唐-王维" class="headerlink" title="《相思》-[唐] 王维"></a>《相思》-[唐] 王维</h3><blockquote><p><strong>红豆生南国，春来发几枝。<br>愿君多采撷，此物最相思。</strong></p></blockquote><hr><h3 id="《自遣》-唐-罗隐"><a href="#《自遣》-唐-罗隐" class="headerlink" title="《自遣》-[唐] 罗隐"></a>《自遣》-[唐] 罗隐</h3><blockquote><p><strong>得即高歌失即休，多愁多恨亦悠悠。<br>今朝有酒今朝醉，明日愁来明日愁。</strong></p></blockquote><hr><h3 id="《妒花》-明-唐寅"><a href="#《妒花》-明-唐寅" class="headerlink" title="《妒花》-[明] 唐寅"></a>《妒花》-[明] 唐寅</h3><blockquote><p><strong>昨夜海棠初着雨，<br>数点轻盈娇欲语。<br>佳人晓起出兰房，<br>折来对镜化红妆。<br>问郎花好奴颜好？<br>郎道不如花窈窕。<br>佳人闻语发娇嗔，<br>不信死花胜活人。<br>将花揉碎掷郎前：<br>请郎今日伴花眠！</strong></p></blockquote><hr><h3 id="《近试上张籍水部-近试上张水部-闺意献张水部》-唐-朱庆馀"><a href="#《近试上张籍水部-近试上张水部-闺意献张水部》-唐-朱庆馀" class="headerlink" title="《近试上张籍水部 / 近试上张水部 / 闺意献张水部》-[唐] 朱庆馀"></a>《近试上张籍水部 / 近试上张水部 / 闺意献张水部》-[唐] 朱庆馀</h3><blockquote><p><strong>洞房昨夜停红烛，待晓堂前拜舅姑。<br>妆罢低声问夫婿，画眉深浅入时无。</strong></p></blockquote><hr><h3 id="《一剪梅·舟过吴江》-宋-蒋捷"><a href="#《一剪梅·舟过吴江》-宋-蒋捷" class="headerlink" title="《一剪梅·舟过吴江》-[宋] 蒋捷"></a>《一剪梅·舟过吴江》-[宋] 蒋捷</h3><blockquote><p><strong>一片春愁待酒浇。江上舟摇，楼上帘招。秋娘渡与泰娘桥，风又飘飘，雨又萧萧。<br>何日归家洗客袍？银字笙调，心字香烧。流光容易把人抛，红了樱桃，绿了芭蕉。</strong></p></blockquote><a id="more"></a><hr><h3 id="《宣州谢朓楼饯别校书叔云》-唐-李白"><a href="#《宣州谢朓楼饯别校书叔云》-唐-李白" class="headerlink" title="《宣州谢朓楼饯别校书叔云》-[唐] 李白"></a>《宣州谢朓楼饯别校书叔云》-[唐] 李白</h3><blockquote><p><strong>弃我去者，昨日之日不可留；<br>乱我心者，今日之日多烦忧。<br>长风万里送秋雁，对此可以酣高楼。<br>蓬莱文章建安骨，中间小谢又清发。<br>俱怀逸兴壮思飞，欲上青天览明月。<br>抽刀断水水更流，举杯消愁愁更愁。<br>人生在世不称意，明朝散发弄扁舟。</strong></p></blockquote><hr><h3 id="《卜算子·我住长江头》-宋-李之仪"><a href="#《卜算子·我住长江头》-宋-李之仪" class="headerlink" title="《卜算子·我住长江头》-[宋] 李之仪"></a>《卜算子·我住长江头》-[宋] 李之仪</h3><blockquote><p><strong>我住长江头，君住长江尾。日日思君不见君，共饮长江水。<br>此水几时休，此恨何时已。只愿君心似我心，定不负相思意。</strong></p></blockquote><hr><h3 id="《清平乐·春归何处》-宋-黄庭坚"><a href="#《清平乐·春归何处》-宋-黄庭坚" class="headerlink" title="《清平乐·春归何处》-[宋] 黄庭坚"></a>《清平乐·春归何处》-[宋] 黄庭坚</h3><blockquote><p><strong>春归何处。寂寞无行路。若有人知春去处。换取归来同住。<br>春无踪迹谁知。除非问取黄鹂。百啭无人能解，因风飞过蔷薇。</strong></p></blockquote><hr><h1 id="2020上半年收录"><a href="#2020上半年收录" class="headerlink" title="2020上半年收录"></a>2020上半年收录</h1><h2 id="五月上旬收录"><a href="#五月上旬收录" class="headerlink" title="* 五月上旬收录"></a>* 五月上旬收录</h2><h3 id="《蝶恋花·庭院深深深几许》-宋-欧阳修"><a href="#《蝶恋花·庭院深深深几许》-宋-欧阳修" class="headerlink" title="《蝶恋花·庭院深深深几许》-[宋] 欧阳修"></a>《蝶恋花·庭院深深深几许》-[宋] 欧阳修</h3><blockquote><p><strong>庭院深深深几许，杨柳堆烟，帘幕无重数。玉勒雕鞍游冶处，楼高不见章台路。<br>雨横风狂三月暮，门掩黄昏，无计留春住。泪眼问花花不语，乱红飞过秋千去。</strong></p></blockquote><hr><h3 id="《武陵春·风住尘香花已尽》-宋-李清照"><a href="#《武陵春·风住尘香花已尽》-宋-李清照" class="headerlink" title="《武陵春·风住尘香花已尽》-[宋] 李清照"></a>《武陵春·风住尘香花已尽》-[宋] 李清照</h3><blockquote><p><strong>风住尘香花已尽，日晚倦梳头。物是人非事事休，欲语泪先流。<br>闻说双溪春尚好，也拟泛轻舟。只恐双溪舴艋舟，载不动许多愁。</strong></p></blockquote><hr><h3 id="《生查子·元夕》-宋-欧阳修"><a href="#《生查子·元夕》-宋-欧阳修" class="headerlink" title="《生查子·元夕》-[宋] 欧阳修"></a>《生查子·元夕》-[宋] 欧阳修</h3><blockquote><p><strong>去年元夜时，花市灯如昼。月上柳梢头，人约黄昏后。<br>今年元夜时，月与灯依旧。不见去年人，泪湿春衫袖。</strong></p></blockquote><hr><h3 id="《钗头凤·红酥手》-宋-陆游"><a href="#《钗头凤·红酥手》-宋-陆游" class="headerlink" title="《钗头凤·红酥手》-[宋] 陆游"></a>《钗头凤·红酥手》-[宋] 陆游</h3><blockquote><p><strong>红酥手，黄縢酒，满城春色宫墙柳。东风恶，欢情薄。一怀愁绪，几年离索。错、错、错。<br>春如旧，人空瘦，泪痕红浥鲛绡透。桃花落，闲池阁。山盟虽在，锦书难托。莫、莫、莫！</strong></p></blockquote><hr><h2 id="四月下旬收录"><a href="#四月下旬收录" class="headerlink" title="* 四月下旬收录"></a>* 四月下旬收录</h2><h3 id="《陌上花三首》-宋-苏轼"><a href="#《陌上花三首》-宋-苏轼" class="headerlink" title="《陌上花三首》-[宋] 苏轼"></a>《陌上花三首》-[宋] 苏轼</h3><blockquote><ul><li><strong>陌上开花蝴蝶飞，江山犹是昔人非</strong></li></ul></blockquote><hr><h3 id="《贺新郎·甚矣吾衰矣》-宋-辛弃疾"><a href="#《贺新郎·甚矣吾衰矣》-宋-辛弃疾" class="headerlink" title="《贺新郎·甚矣吾衰矣》-[宋] 辛弃疾"></a>《贺新郎·甚矣吾衰矣》-[宋] 辛弃疾</h3><blockquote><ul><li><strong>我见青山多妩媚，料青山见我，应如是。</strong></li></ul></blockquote><hr><h3 id="《虞美人·雨后同干誉才卿置酒来禽花下作》-宋-叶梦得"><a href="#《虞美人·雨后同干誉才卿置酒来禽花下作》-宋-叶梦得" class="headerlink" title="《虞美人·雨后同干誉才卿置酒来禽花下作》-[宋] 叶梦得"></a>《虞美人·雨后同干誉才卿置酒来禽花下作》-[宋] 叶梦得</h3><blockquote><p><strong>落花已作风前舞。又送黄昏雨。晓来庭院半残红。惟有游丝千丈、罥晴空。<br>殷勤花下同携手。更尽杯中酒。美人不用敛蛾眉。我亦多情无奈、酒阑时。</strong></p></blockquote><hr><h3 id="《蝶恋花·春景》-宋-苏轼"><a href="#《蝶恋花·春景》-宋-苏轼" class="headerlink" title="《蝶恋花·春景》-[宋] 苏轼"></a>《蝶恋花·春景》-[宋] 苏轼</h3><blockquote><p><strong>花褪残红青杏小。燕子飞时，绿水人家绕。枝上柳绵吹又少。天涯何处无芳草。<br>墙里秋千墙外道。墙外行人，墙里佳人笑。笑渐不闻声渐悄。多情却被无情恼。</strong></p></blockquote><hr><h3 id="《东风第一枝·倾国倾城》-宋-吴文英"><a href="#《东风第一枝·倾国倾城》-宋-吴文英" class="headerlink" title="《东风第一枝·倾国倾城》-[宋] 吴文英"></a>《东风第一枝·倾国倾城》-[宋] 吴文英</h3><blockquote><p><strong>倾国倾城，非花非雾，春风十里独步。胜如西子妖绕，更比太真澹泞。铅华不御。漫道有、巫山洛浦。似恁地、标格无双，镇锁画楼深处。<br>曾被风、容易送去。曾被月、等闲留住。似花翻使花羞，似柳任从柳妒。不教歌舞。恐化作、彩云轻举。信下蔡、阳城俱迷，看取宋玉词赋。</strong></p></blockquote><hr><h3 id="《洛神赋》-魏晋-曹植"><a href="#《洛神赋》-魏晋-曹植" class="headerlink" title="《洛神赋》-[魏晋] 曹植"></a>《洛神赋》-[魏晋] 曹植</h3><blockquote><ul><li><strong>翩若惊鸿，婉若游龙，荣曜秋菊，华茂春松。</strong></li></ul></blockquote><blockquote><ul><li><strong>髣髴兮若轻云之蔽月，飘飖兮若流风之回雪。</strong></li></ul></blockquote><blockquote><ul><li><strong>远而望之，皎若太阳升朝霞；迫而察之，灼若芙蕖出渌波。</strong></li></ul></blockquote><hr><h3 id="《相见欢》-五代-李煜"><a href="#《相见欢》-五代-李煜" class="headerlink" title="《相见欢》-[五代] 李煜"></a>《相见欢》-[五代] 李煜</h3><blockquote><p><strong>林花谢了春红，太匆匆。无奈朝来寒雨晚来风。<br>胭脂泪，相留醉，几时重。自是人生长恨水长东。</strong></p></blockquote><hr><h3 id="《沈园二首》-宋-陆游"><a href="#《沈园二首》-宋-陆游" class="headerlink" title="《沈园二首》-[宋] 陆游"></a>《沈园二首》-[宋] 陆游</h3><blockquote><ul><li><strong>城上斜阳画角哀，沈园非复旧池台， 伤心桥下春波绿，曾是惊鸿照影来。</strong> </li></ul></blockquote><hr><h3 id="《鹊桥仙·纤云弄巧》-宋-秦观"><a href="#《鹊桥仙·纤云弄巧》-宋-秦观" class="headerlink" title="《鹊桥仙·纤云弄巧》-[宋] 秦观"></a>《鹊桥仙·纤云弄巧》-[宋] 秦观</h3><blockquote><p><strong>纤云弄巧，飞星传恨，银汉迢迢暗度。 金风玉露一相逢，便胜却、人间无数。<br>柔情似水，佳期如梦，忍顾鹊桥归路。 两情若是久长时，又岂在、朝朝暮暮。</strong></p></blockquote><hr><h3 id="《乞彩笺歌》-唐-韦庄"><a href="#《乞彩笺歌》-唐-韦庄" class="headerlink" title="《乞彩笺歌》-[唐] 韦庄"></a>《乞彩笺歌》-[唐] 韦庄</h3><blockquote><ul><li><strong>我有歌诗一千首，磨砻山岳罗星斗。开卷长疑雷电惊，挥毫只怕龙蛇走。</strong></li></ul></blockquote><blockquote><ul><li><strong>班班布在时人口，满袖松花都未有。人间无处买烟霞，须知得自神仙手。</strong></li></ul></blockquote><blockquote><ul><li><strong>也知价重连城璧，一纸万金犹不惜。薛涛昨夜梦中来，殷勤劝向君边觅。</strong></li></ul></blockquote><hr><h3 id="《山居秋暝》-唐-王维"><a href="#《山居秋暝》-唐-王维" class="headerlink" title="《山居秋暝》-[唐] 王维"></a>《山居秋暝》-[唐] 王维</h3><blockquote><p><strong>空山新雨后，天气晚来秋。 明月松间照，清泉石上流。<br>竹喧归浣女，莲动下渔舟。 随意春芳歇，王孙自可留。</strong></p></blockquote><hr><h3 id="《芙蓉楼送辛渐》-唐-王昌龄"><a href="#《芙蓉楼送辛渐》-唐-王昌龄" class="headerlink" title="《芙蓉楼送辛渐》-[唐] 王昌龄"></a>《芙蓉楼送辛渐》-[唐] 王昌龄</h3><blockquote><p><strong>寒雨连江夜入吴，平明送客楚山孤。 洛阳亲友如相问，一片冰心在玉壶。</strong></p></blockquote><hr><h2 id="四月中旬收录"><a href="#四月中旬收录" class="headerlink" title="* 四月中旬收录"></a>* 四月中旬收录</h2><h3 id="《无题》-唐-李商隐"><a href="#《无题》-唐-李商隐" class="headerlink" title="《无题》-[唐] 李商隐"></a>《无题》-[唐] 李商隐</h3><blockquote><p><strong>照梁初有情，出水旧知名。裙衩芙蓉小，钗茸翡翠轻。<br>锦长书郑重，眉细恨分明。莫近弹棋局，中心最不平。</strong></p></blockquote><hr><h3 id="《乐府-古相思曲》-两汉-佚名"><a href="#《乐府-古相思曲》-两汉-佚名" class="headerlink" title="《乐府.古相思曲》-[两汉] 佚名"></a>《乐府.古相思曲》-[两汉] 佚名</h3><p>　</p><blockquote><ul><li><strong>君似明月我似雾，雾随月隐空留露。<br>君善抚琴我善舞，曲终人离心若堵。<br>只缘感君一回顾，使我思君朝与暮。<br>魂随君去终不悔, 绵绵相思为君苦。<br>相思苦，凭谁诉？遥遥不知君何处。<br>扶门切思君之嘱，登高望断天涯路。</strong></li></ul></blockquote><blockquote><ul><li><strong>十三与君初相识，王侯宅里弄丝竹。<br>只缘感君一回顾，使我思君朝与暮。<br>再见君时妾十五，且为君作霓裳舞。<br>可叹年华如朝露，何时衔泥巢君屋？</strong></li></ul></blockquote><hr><h3 id="《长命女·春日宴》-五代-冯延巳"><a href="#《长命女·春日宴》-五代-冯延巳" class="headerlink" title="《长命女·春日宴》-[五代] 冯延巳"></a>《长命女·春日宴》-[五代] 冯延巳</h3><blockquote><p><strong>春日宴，绿酒一杯歌一遍。再拜陈三愿：一愿郎君千岁，二愿妾身常健，三愿如同梁上燕，岁岁长相见。</strong></p></blockquote><hr><h3 id="《听筝》-唐-李端"><a href="#《听筝》-唐-李端" class="headerlink" title="《听筝》-[唐] 李端"></a>《听筝》-[唐] 李端</h3><blockquote><p><strong>鸣筝金粟柱，素手玉房前。欲得周郎顾，时时误拂弦。</strong></p></blockquote><hr><h3 id="《陌上花开，可缓缓归矣》-五代-吴越王"><a href="#《陌上花开，可缓缓归矣》-五代-吴越王" class="headerlink" title="《陌上花开，可缓缓归矣》-[五代] 吴越王"></a>《陌上花开，可缓缓归矣》-[五代] 吴越王</h3><blockquote><p><strong>陌上花开，可缓缓归矣</strong></p></blockquote><hr><h3 id="《赠去婢》-唐-崔郊"><a href="#《赠去婢》-唐-崔郊" class="headerlink" title="《赠去婢》-[唐] 崔郊"></a>《赠去婢》-[唐] 崔郊</h3><blockquote><p><strong>公子王孙逐后尘，绿珠垂泪滴罗巾。侯门一入深如海，从此萧郎是路人。</strong></p></blockquote><hr><h3 id="《丑奴儿·书博山道中壁》-宋-辛弃疾"><a href="#《丑奴儿·书博山道中壁》-宋-辛弃疾" class="headerlink" title="《丑奴儿·书博山道中壁》-[宋] 辛弃疾"></a>《丑奴儿·书博山道中壁》-[宋] 辛弃疾</h3><blockquote><p><strong>少年不识愁滋味，爱上层楼。爱上层楼，为赋新词强说愁。<br>而今识尽愁滋味，欲说还休。欲说还休，却道天凉好个秋。</strong></p></blockquote><hr><h3 id="《题都城南庄》-唐-崔护"><a href="#《题都城南庄》-唐-崔护" class="headerlink" title="《题都城南庄》-[唐] 崔护"></a>《题都城南庄》-[唐] 崔护</h3><blockquote><p><strong>去年今日此门中，人面桃花相映红。 人面不知何处去，桃花依旧笑春风。</strong></p></blockquote><hr><h3 id="《闺怨》-唐-王昌龄"><a href="#《闺怨》-唐-王昌龄" class="headerlink" title="《闺怨》-[唐] 王昌龄"></a>《闺怨》-[唐] 王昌龄</h3><blockquote><p><strong>闺中少妇不知愁，春日凝妆上翠楼。 忽见陌头杨柳色，悔教夫婿觅封侯。</strong></p></blockquote><hr><h3 id="《采薇》-先秦-佚名"><a href="#《采薇》-先秦-佚名" class="headerlink" title="《采薇》-[先秦] 佚名"></a>《采薇》-[先秦] 佚名</h3><blockquote><ul><li><strong>昔我往矣，杨柳依依。今我来思，雨雪霏霏。</strong></li></ul></blockquote><hr><h3 id="《乌衣巷》-唐-刘禹锡"><a href="#《乌衣巷》-唐-刘禹锡" class="headerlink" title="《乌衣巷》-[唐] 刘禹锡"></a>《乌衣巷》-[唐] 刘禹锡</h3><blockquote><p><strong>朱雀桥边野草花，乌衣巷口夕阳斜。 旧时王谢堂前燕，飞入寻常百姓家。</strong></p></blockquote><hr><h3 id="《木兰词·拟古决绝词柬友》-清-纳兰性德"><a href="#《木兰词·拟古决绝词柬友》-清-纳兰性德" class="headerlink" title="《木兰词·拟古决绝词柬友》-[清] 纳兰性德"></a>《木兰词·拟古决绝词柬友》-[清] 纳兰性德</h3><blockquote><ul><li><strong>人生若只如初见，何事秋风悲画扇。</strong></li></ul></blockquote><hr><h3 id="《青玉案·凌波不过横塘路》-宋-贺铸"><a href="#《青玉案·凌波不过横塘路》-宋-贺铸" class="headerlink" title="《青玉案·凌波不过横塘路》-[宋] 贺铸"></a>《青玉案·凌波不过横塘路》-[宋] 贺铸</h3><blockquote><p><strong>凌波不过横塘路。但目送、芳尘去。锦瑟华年谁与度。月桥花院，琐窗朱户。只有春知处。<br>飞云冉冉蘅皋暮。彩笔新题断肠句。若问闲情都几许。一川烟草，满城风絮。梅子黄时雨。</strong></p></blockquote><hr><h3 id="《采桑子·时光只解催人老》-宋-晏殊"><a href="#《采桑子·时光只解催人老》-宋-晏殊" class="headerlink" title="《采桑子·时光只解催人老》-[宋] 晏殊"></a>《采桑子·时光只解催人老》-[宋] 晏殊</h3><blockquote><ul><li><strong>时光只解催人老，不信多情，长恨离亭，泪滴春衫酒易醒。</strong></li></ul></blockquote><hr><h2 id="四月上旬收录"><a href="#四月上旬收录" class="headerlink" title="* 四月上旬收录"></a>* 四月上旬收录</h2><h3 id="《越人歌》-春秋-刘向"><a href="#《越人歌》-春秋-刘向" class="headerlink" title="《越人歌》-[春秋] 刘向"></a>《越人歌》-[春秋] 刘向</h3><blockquote><ul><li><strong>山有木兮木有枝，心悦君兮君不知。</strong></li></ul></blockquote><hr><h3 id="《白头吟》-汉-卓文君"><a href="#《白头吟》-汉-卓文君" class="headerlink" title="《白头吟》-[汉] 卓文君"></a>《白头吟》-[汉] 卓文君</h3><blockquote><ul><li><strong>愿得一心人，白头不相离。</strong></li></ul></blockquote><hr><h3 id="《迢迢牵牛星》-汉-佚名"><a href="#《迢迢牵牛星》-汉-佚名" class="headerlink" title="《迢迢牵牛星》-[汉] 佚名"></a>《迢迢牵牛星》-[汉] 佚名</h3><blockquote><p><strong>迢迢牵牛星，皎皎河汉女。<br>纤纤擢素手，札札弄机杼。<br>终日不成章，泣涕零如雨；<br>河汉清且浅，相去复几许！<br>盈盈一水间，脉脉不得语。</strong></p></blockquote><hr><h3 id="《蝶恋花·阅尽天涯离别苦》-清-王国维"><a href="#《蝶恋花·阅尽天涯离别苦》-清-王国维" class="headerlink" title="《蝶恋花·阅尽天涯离别苦》-[清] 王国维"></a>《蝶恋花·阅尽天涯离别苦》-[清] 王国维</h3><blockquote><ul><li><strong>待把相思灯下诉，一缕新欢，旧恨千千缕。最是人间留不住，朱颜辞镜花辞树。</strong></li></ul></blockquote><hr><h3 id="《长相思·一重山》-五代-李煜"><a href="#《长相思·一重山》-五代-李煜" class="headerlink" title="《长相思·一重山》-[五代] 李煜"></a>《长相思·一重山》-[五代] 李煜</h3><blockquote><p><strong>一重山，两重山。山远天高烟水寒，相思枫叶丹。<br>菊花开，菊花残。塞雁高飞人未还，一帘风月闲。</strong></p></blockquote><hr><h3 id="《青玉案·元夕》-宋-辛弃疾"><a href="#《青玉案·元夕》-宋-辛弃疾" class="headerlink" title="《青玉案·元夕》-[宋] 辛弃疾"></a>《青玉案·元夕》-[宋] 辛弃疾</h3><blockquote><p><strong>东风夜放花千树。更吹落、星如雨。宝马雕车香满路。凤箫声动，玉壶光转，一夜鱼龙舞。<br>蛾儿雪柳黄金缕。笑语盈盈暗香去。众里寻他千百度。蓦然回首，那人却在，灯火阑珊处。</strong></p></blockquote><hr><h3 id="《醉花阴·薄雾浓云愁永昼》-宋-李清照"><a href="#《醉花阴·薄雾浓云愁永昼》-宋-李清照" class="headerlink" title="《醉花阴·薄雾浓云愁永昼》-[宋] 李清照"></a>《醉花阴·薄雾浓云愁永昼》-[宋] 李清照</h3><blockquote><p><strong>薄雾浓云愁永昼，瑞脑消金兽。佳节又重阳，玉枕纱厨，半夜凉初透。<br>东篱把酒黄昏后，有暗香盈袖。莫道不销魂，帘卷西风，人比黄花瘦。</strong></p></blockquote><hr><h3 id="《山亭夏日》-唐-高骈"><a href="#《山亭夏日》-唐-高骈" class="headerlink" title="《山亭夏日》-[唐] 高骈"></a>《山亭夏日》-[唐] 高骈</h3><blockquote><p><strong>绿树阴浓夏日长，楼台倒影入池塘。<br>水晶帘动微风起，满架蔷薇一院香。</strong></p></blockquote><hr><h3 id="《书湖阴先生壁》-宋-王安石"><a href="#《书湖阴先生壁》-宋-王安石" class="headerlink" title="《书湖阴先生壁》-[宋] 王安石"></a>《书湖阴先生壁》-[宋] 王安石</h3><blockquote><p><strong>茅檐长扫净无苔，花木成畦手自栽。<br>一水护田将绿绕，两山排闼送青来。</strong></p></blockquote><hr><h3 id="《鹧鸪天·彩袖殷勤捧玉钟》-宋-晏几道"><a href="#《鹧鸪天·彩袖殷勤捧玉钟》-宋-晏几道" class="headerlink" title="《鹧鸪天·彩袖殷勤捧玉钟》-[宋] 晏几道"></a>《鹧鸪天·彩袖殷勤捧玉钟》-[宋] 晏几道</h3><blockquote><p><strong>彩袖殷勤捧玉钟。当年拚却醉颜红。舞低杨柳楼心月，歌尽桃花扇影风。<br>从别后，忆相逢。几回魂梦与君同。今宵剩把银釭照，犹恐相逢是梦中。</strong></p></blockquote><hr><h3 id="《上邪》-汉-佚名"><a href="#《上邪》-汉-佚名" class="headerlink" title="《上邪》-[汉] 佚名"></a>《上邪》-[汉] 佚名</h3><blockquote><p><strong>上邪，<br>我欲与君相知，<br>长命无绝衰。<br>山无陵，<br>江水为竭。<br>冬雷震震，<br>夏雨雪。<br>天地合，<br>乃敢与君绝。</strong></p></blockquote><hr><h3 id="《晓出净慈寺送林子方》-宋-杨万里"><a href="#《晓出净慈寺送林子方》-宋-杨万里" class="headerlink" title="《晓出净慈寺送林子方》-[宋] 杨万里"></a>《晓出净慈寺送林子方》-[宋] 杨万里</h3><blockquote><p><strong>毕竟西湖六月中，风光不与四时同。<br>接天莲叶无穷碧，映日荷花别样红。</strong></p></blockquote><hr><h3 id="《一剪梅》-明-唐寅"><a href="#《一剪梅》-明-唐寅" class="headerlink" title="《一剪梅》-[明] 唐寅"></a>《一剪梅》-[明] 唐寅</h3><blockquote><p><strong>雨打梨花深闭门，忘了青春，误了青春。赏心乐事共谁论？花下销魂，月下销魂。<br>愁聚眉峰尽日颦，千点啼痕，万点啼痕。晓看天色暮看云，行也思君，坐也思君。</strong></p></blockquote><hr><h3 id="《清平调·其一》-唐-李白"><a href="#《清平调·其一》-唐-李白" class="headerlink" title="《清平调·其一》-[唐] 李白"></a>《清平调·其一》-[唐] 李白</h3><blockquote><p><strong>云想衣裳花想容，春风拂槛露华浓。<br>若非群玉山头见，会向瑶台月下逢。</strong></p></blockquote><hr><h3 id="《江城子·乙卯正月二十日夜记梦》-宋-苏轼"><a href="#《江城子·乙卯正月二十日夜记梦》-宋-苏轼" class="headerlink" title="《江城子·乙卯正月二十日夜记梦》-[宋] 苏轼"></a>《江城子·乙卯正月二十日夜记梦》-[宋] 苏轼</h3><blockquote><p><strong>十年生死两茫茫，不思量，自难忘。千里孤坟，无处话凄凉。纵使相逢应不识，尘满面，鬓如霜。<br>夜来幽梦忽还乡，小轩窗，正梳妆。相顾无言，惟有泪千行。料得年年肠断处，明月夜，短松冈。</strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;2020下半年收录&quot;&gt;&lt;a href=&quot;#2020下半年收录&quot; class=&quot;headerlink&quot; title=&quot;2020下半年收录&quot;&gt;&lt;/a&gt;2020下半年收录&lt;/h1&gt;&lt;h3 id=&quot;《杂诗三首·其二》-唐-王维&quot;&gt;&lt;a href=&quot;#《杂诗三首·其二》-唐-王维&quot; class=&quot;headerlink&quot; title=&quot;《杂诗三首·其二》-[唐] 王维&quot;&gt;&lt;/a&gt;《杂诗三首·其二》-[唐] 王维&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;君自故乡来，应知故乡事。&lt;br&gt;来日绮窗前，寒梅著花未？&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;《相思》-唐-王维&quot;&gt;&lt;a href=&quot;#《相思》-唐-王维&quot; class=&quot;headerlink&quot; title=&quot;《相思》-[唐] 王维&quot;&gt;&lt;/a&gt;《相思》-[唐] 王维&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;红豆生南国，春来发几枝。&lt;br&gt;愿君多采撷，此物最相思。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;《自遣》-唐-罗隐&quot;&gt;&lt;a href=&quot;#《自遣》-唐-罗隐&quot; class=&quot;headerlink&quot; title=&quot;《自遣》-[唐] 罗隐&quot;&gt;&lt;/a&gt;《自遣》-[唐] 罗隐&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;得即高歌失即休，多愁多恨亦悠悠。&lt;br&gt;今朝有酒今朝醉，明日愁来明日愁。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;《妒花》-明-唐寅&quot;&gt;&lt;a href=&quot;#《妒花》-明-唐寅&quot; class=&quot;headerlink&quot; title=&quot;《妒花》-[明] 唐寅&quot;&gt;&lt;/a&gt;《妒花》-[明] 唐寅&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;昨夜海棠初着雨，&lt;br&gt;数点轻盈娇欲语。&lt;br&gt;佳人晓起出兰房，&lt;br&gt;折来对镜化红妆。&lt;br&gt;问郎花好奴颜好？&lt;br&gt;郎道不如花窈窕。&lt;br&gt;佳人闻语发娇嗔，&lt;br&gt;不信死花胜活人。&lt;br&gt;将花揉碎掷郎前：&lt;br&gt;请郎今日伴花眠！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;《近试上张籍水部-近试上张水部-闺意献张水部》-唐-朱庆馀&quot;&gt;&lt;a href=&quot;#《近试上张籍水部-近试上张水部-闺意献张水部》-唐-朱庆馀&quot; class=&quot;headerlink&quot; title=&quot;《近试上张籍水部 / 近试上张水部 / 闺意献张水部》-[唐] 朱庆馀&quot;&gt;&lt;/a&gt;《近试上张籍水部 / 近试上张水部 / 闺意献张水部》-[唐] 朱庆馀&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;洞房昨夜停红烛，待晓堂前拜舅姑。&lt;br&gt;妆罢低声问夫婿，画眉深浅入时无。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;《一剪梅·舟过吴江》-宋-蒋捷&quot;&gt;&lt;a href=&quot;#《一剪梅·舟过吴江》-宋-蒋捷&quot; class=&quot;headerlink&quot; title=&quot;《一剪梅·舟过吴江》-[宋] 蒋捷&quot;&gt;&lt;/a&gt;《一剪梅·舟过吴江》-[宋] 蒋捷&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;一片春愁待酒浇。江上舟摇，楼上帘招。秋娘渡与泰娘桥，风又飘飘，雨又萧萧。&lt;br&gt;何日归家洗客袍？银字笙调，心字香烧。流光容易把人抛，红了樱桃，绿了芭蕉。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="佳句收录 古诗丽词" scheme="https://Hong-King.github.io/categories/%E4%BD%B3%E5%8F%A5%E6%94%B6%E5%BD%95-%E5%8F%A4%E8%AF%97%E4%B8%BD%E8%AF%8D/"/>
    
    
      <category term="语言之美" scheme="https://Hong-King.github.io/tags/%E8%AF%AD%E8%A8%80%E4%B9%8B%E7%BE%8E/"/>
    
  </entry>
  
  <entry>
    <title>利用Python从文本中提取单词</title>
    <link href="https://hong-king.github.io/2020/10/16/%E5%88%A9%E7%94%A8Python%E4%BB%8E%E6%96%87%E6%9C%AC%E4%B8%AD%E6%8F%90%E5%8F%96%E5%8D%95%E8%AF%8D/"/>
    <id>https://hong-king.github.io/2020/10/16/%E5%88%A9%E7%94%A8Python%E4%BB%8E%E6%96%87%E6%9C%AC%E4%B8%AD%E6%8F%90%E5%8F%96%E5%8D%95%E8%AF%8D/</id>
    <published>2020-10-16T10:49:00.000Z</published>
    <updated>2020-10-16T10:49:34.266Z</updated>
    
    <content type="html"><![CDATA[<p>首先介绍string包的一些实用内置函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import string</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; string.digits  <span class="comment">#所有的数字</span></span><br><span class="line"><span class="string">'0123456789'</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; string.ascii_lowercase  <span class="comment">#所有的小写字母</span></span><br><span class="line"><span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; string.ascii_uppercase  <span class="comment">#所有的大写字母</span></span><br><span class="line"><span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; string.hexdigits        <span class="comment">#所有的十六进制字符</span></span><br><span class="line"><span class="string">'0123456789abcdefABCDEF'</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; string.whitespace       <span class="comment">#所有的空白字符</span></span><br><span class="line"><span class="string">' \t\n\r\x0b\x0c'</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; string.punctuation      <span class="comment">#所有的标点字符</span></span><br><span class="line"><span class="string">'!"#$%&amp;\'</span>()*+,-./:;&lt;=&gt;?@[\\]^_`&#123;|&#125;~<span class="string">'</span></span><br></pre></td></tr></table></figure><p>接下来时python的一些内置函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import numpy</span><br><span class="line">import pandas</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">data = open(<span class="string">"data.txt"</span>,<span class="string">"r"</span>,encoding = <span class="string">'utf-8'</span>)</span><br><span class="line"><span class="comment">##------------提取单词</span></span><br><span class="line">data.readlines()   <span class="comment">#data.readlines()用于读取所有行，每行为一个元素</span></span><br><span class="line"></span><br><span class="line">data.replace(i,<span class="string">" "</span>) <span class="comment">#data.replace()用其他字符替换文本中的指定字符</span></span><br><span class="line"></span><br><span class="line">data.strip()        <span class="comment">#data.strip用于移除字符串头尾指定的字符序列</span></span><br><span class="line"></span><br><span class="line">data.rstrip() <span class="comment">#rstrip() 删除字符串末尾的指定字符（默认为空格）</span></span><br><span class="line"></span><br><span class="line">data.split():           <span class="comment">#split() 通过指定分隔符对字符串进行切片，如果参数 num 有指定值，则分隔 num+1 个子字符串</span></span><br><span class="line"></span><br><span class="line">str.upper()          <span class="comment"># 把所有字符中的小写字母转换成大写字母</span></span><br><span class="line"></span><br><span class="line">str.lower()         <span class="comment"># 把所有字符中的大写字母转换成小写字母</span></span><br><span class="line"></span><br><span class="line">str.capitalize()   <span class="comment"># 把第一个字母转化为大写字母，其余小写</span></span><br><span class="line"></span><br><span class="line">str.title()         <span class="comment"># 把每个单词的第一个字母转化为大写，其余小写</span></span><br></pre></td></tr></table></figure><p>一下为解决一个英文文档单词提取问题的源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import numpy</span><br><span class="line">import pandas</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">data = open(<span class="string">"data.txt"</span>,<span class="string">"r"</span>,encoding = <span class="string">'utf-8'</span>)</span><br><span class="line"><span class="comment">##------------提取单词</span></span><br><span class="line">words = <span class="built_in">set</span>()</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> data.readlines():                                       <span class="comment">#.readlines用于读取所有行</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> line:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> (string.punctuation.replace(<span class="string">"'"</span>,<span class="string">" "</span>)):  <span class="comment">#如果字符是标点符号的话就将其替换为空格,.replace("'"," ")用于剔除"'"符号</span></span><br><span class="line">            line = line.replace(i,<span class="string">" "</span>)</span><br><span class="line">    line = line.strip(<span class="string">'\n'</span>)                                         <span class="comment">#.strip用于移除字符串头尾指定的字符序列</span></span><br><span class="line">    line = line.strip(string.digits)                                <span class="comment">#string.digits方法的作用是生成数组，包括0-9</span></span><br><span class="line"><span class="comment">#    line = line.strip(string.punctuation)                           #string.punctuation所有的标点字符</span></span><br><span class="line"><span class="comment">#    line = line.rstrip(string.punctuation)                          #rstrip() 删除字符串末尾的指定字符（默认为空格）</span></span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> line.split():                                       <span class="comment">#split() 通过指定分隔符对字符串进行切片，如果参数 num 有指定值，则分隔 num+1 个子字符串</span></span><br><span class="line">        words.add(word)</span><br><span class="line"><span class="built_in">print</span>(words)</span><br><span class="line">data.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先介绍string包的一些实用内置函数&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>解决C++从输入流读取所需个数的数据后，多余数据仍存在输入流中的问题</title>
    <link href="https://hong-king.github.io/2020/10/13/%E8%A7%A3%E5%86%B3C++%E4%BB%8E%E8%BE%93%E5%85%A5%E6%B5%81%E8%AF%BB%E5%8F%96%E6%89%80%E9%9C%80%E4%B8%AA%E6%95%B0%E7%9A%84%E6%95%B0%E6%8D%AE%E5%90%8E%EF%BC%8C%E5%A4%9A%E4%BD%99%E6%95%B0%E6%8D%AE%E4%BB%8D%E5%AD%98%E5%9C%A8%E8%BE%93%E5%85%A5%E6%B5%81%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://hong-king.github.io/2020/10/13/%E8%A7%A3%E5%86%B3C++%E4%BB%8E%E8%BE%93%E5%85%A5%E6%B5%81%E8%AF%BB%E5%8F%96%E6%89%80%E9%9C%80%E4%B8%AA%E6%95%B0%E7%9A%84%E6%95%B0%E6%8D%AE%E5%90%8E%EF%BC%8C%E5%A4%9A%E4%BD%99%E6%95%B0%E6%8D%AE%E4%BB%8D%E5%AD%98%E5%9C%A8%E8%BE%93%E5%85%A5%E6%B5%81%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2020-10-13T03:19:00.000Z</published>
    <updated>2020-10-13T03:34:26.176Z</updated>
    
    <content type="html"><![CDATA[<p>在我用链表实现票务管理系统过程中，发现在输入超过所需个数的数据，并在下一次从输入流中读取数据时，上一次输入到输入流中未读取的数据仍在数据流中，故使程序错误运行，现将解决办法展示如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"--------【录入票务信息】----------\n"</span>);</span><br><span class="line">fflush(stdin);//清空缓冲区</span><br><span class="line">cout &lt;&lt; <span class="string">"请输入：起始站名 终点站名 火车编号 车票编号 票价"</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; Data.Terminus_Station &gt;&gt; Data.Departure_Station &gt;&gt; Data.Train_number &gt;&gt; Data.Ticketing_number &gt;&gt; Data.price;</span><br><span class="line">cin.clear(); </span><br><span class="line">cin.ignore(numeric_limits&lt;streamsize&gt;::max(), <span class="string">'\n'</span>); //清空输入流</span><br><span class="line">insertNodeByHead(list_administrators, Data);</span><br><span class="line">cout &lt;&lt; <span class="string">"信息录入成功!"</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">break</span>;</span><br></pre></td></tr></table></figure><p><strong>cin.clear()是用来更改cin的状态标示符的，cin在接收到错误的输入的时候，会设置状态位good。如果good位不为1，则cin不接受输入，直接跳过。如果下次输入前状态位没有改变那么即使清除了缓冲区数据流也无法输入。所以清除缓冲区之前必须要cin.clear()。</strong></p><p><strong>使用ignore清空输入流</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cin.ignore(numeric_limits&lt;std::streamsize&gt;::max(),’\n’);//清除输入缓冲区的当前行 </span><br><span class="line">cin.ignore(numeric_limits&lt;std::streamsize&gt;::max()); //清除输入缓冲区里所有内容 </span><br><span class="line">cin.ignore();//清除一个字符</span><br><span class="line">cin.get(str,5).get();//清除后面的换行符</span><br></pre></td></tr></table></figure><p>*numeric_limits<a href="std::streamsize">std::streamsize</a>::max()是climits头文件定义的流使用的最大值，你也可以用一个足够大的整数代替它。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在我用链表实现票务管理系统过程中，发现在输入超过所需个数的数据，并在下一次从输入流中读取数据时，上一次输入到输入流中未读取的数据仍在数据流中，故使程序错误运行，现将解决办法展示如下。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C++ 基础语法" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/C-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
    
      <category term="C++" scheme="https://Hong-King.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>解决C++ ifstream 读取文件总多读一次问题</title>
    <link href="https://hong-king.github.io/2020/10/12/%E8%A7%A3%E5%86%B3C++%20ifstream%20%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6%E6%80%BB%E5%A4%9A%E8%AF%BB%E4%B8%80%E6%AC%A1%E9%97%AE%E9%A2%98/"/>
    <id>https://hong-king.github.io/2020/10/12/%E8%A7%A3%E5%86%B3C++%20ifstream%20%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6%E6%80%BB%E5%A4%9A%E8%AF%BB%E4%B8%80%E6%AC%A1%E9%97%AE%E9%A2%98/</id>
    <published>2020-10-12T11:55:00.000Z</published>
    <updated>2020-10-13T03:34:21.607Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//文件读操作</span><br><span class="line">void readInfoFromFile(struct LNode* headNode,const char* fileName)</span><br><span class="line">&#123;</span><br><span class="line">struct Ticketing data;</span><br><span class="line">ifstream fin(fileName);</span><br><span class="line"><span class="keyword">while</span> (!fin.eof())</span><br><span class="line">&#123;</span><br><span class="line">fin &gt;&gt; data.Terminus_Station &gt;&gt; data.Departure_Station &gt;&gt; data.Train_number &gt;&gt; data.Ticketing_number &gt;&gt; data.price;</span><br><span class="line">//<span class="keyword">if</span> (fin.fail())</span><br><span class="line">//<span class="built_in">break</span>;</span><br><span class="line">insertNodeByHead(headNode, data);</span><br><span class="line">&#125;</span><br><span class="line">fin.close();</span><br><span class="line">fin.clear();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果按上述原码操作，在读取文件数据时总是会多读取一遍。<br>查阅了<a href="https://www.cnblogs.com/youxin/p/3793814.html" target="_blank" rel="noopener">资料</a>后：<br>发现问题出在，fin对象在读取文件的时候，到末尾后后，再读一次才能判断到eof<br>因此最后一行会被读取两次。<br>解决方法是在while循环中加入判断：<br><strong>对于c风格的字符串可以使用:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(a[0]=<span class="string">'\0'</span>) //其中a是第一个被读入的对象</span><br><span class="line"><span class="built_in">break</span>;</span><br></pre></td></tr></table></figure><p><strong>更加通用的形式:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (in.fail())</span><br><span class="line"><span class="built_in">break</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C++ 基础语法" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/C-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
    
      <category term="C++" scheme="https://Hong-King.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>语言之美-新句美文</title>
    <link href="https://hong-king.github.io/2020/08/26/%E8%AF%AD%E8%A8%80%E4%B9%8B%E7%BE%8E-%E6%96%B0%E5%8F%A5%E7%BE%8E%E6%96%87/"/>
    <id>https://hong-king.github.io/2020/08/26/%E8%AF%AD%E8%A8%80%E4%B9%8B%E7%BE%8E-%E6%96%B0%E5%8F%A5%E7%BE%8E%E6%96%87/</id>
    <published>2020-08-26T07:13:00.000Z</published>
    <updated>2020-09-09T02:07:56.522Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>《终了》-张九南</p></blockquote><ul><li><strong>终是庄周梦了蝶，你是恩赐也是劫。<br>终是李白醉了酒，你是孤独也是愁。<br>终是荆轲刺了秦，一代君王一世民。<br>终是妲己祸了国，万里江山似蹉跎。<br>终是玉环停了曲，无人再懂琵琶语。<br>终是韩信放下枪，你是宿命也是伤。<br>终是悟空成了佛，你一堕落便是魔。<br>终是霸王别了姬，弃了江山负了你。<br>终是后裔断了箭，此生注定难相见。<br>终是评书已截断，从此告别定场诗。</strong></li></ul><hr><blockquote><p>刘俊宏</p></blockquote><ul><li><strong>照片是光与影的悦动，纠缠着喜或悲的回忆</strong></li></ul><hr><blockquote><p>《波兰来客》-北岛</p></blockquote><ul><li><strong>年轻时我们都有梦想，关于文字，关于爱情，关于穿越世界的旅行。现在我们夜深饮酒杯子撞在一起，听到的都是梦破碎的声音。</strong></li></ul><hr><blockquote><p>《红玫瑰与白玫瑰》-张爱玲 </p></blockquote><ul><li><strong>也许每一个男子全都有过这样的两个女人，至少两个。娶了红玫瑰，久而久之，红的变了墙上的一抹蚊子血，白的还是“床前明月光”；娶了白玫瑰，白的便是衣服上的一粒饭粘子，红的却是心口上的一颗朱砂痣。</strong></li></ul><hr><blockquote><p>《在细雨中呼喊》-余华 </p></blockquote><ul><li><strong>死亡不是失去生命，而是走出了时间。</strong></li></ul><hr><blockquote><p>《生命最后的读书会》-[美] 威尔·施瓦尔贝 </p></blockquote><ul><li><strong>假如你不愿祝福他的王国，那么不要为之祈祷。假如你愿意，不能只靠祈祷，还必须为之努力。-《天国降临》</strong></li></ul><a id="more"></a><hr><blockquote><p>《江海共余生》-春和</p></blockquote><ul><li><strong>山河远阔，人间星河，无一是你，无一不是你。</strong></li></ul><hr><blockquote><p>《十里红妆女儿梦》-何晓道</p></blockquote><ul><li><strong>待我长发及腰，少年娶我可好？待你青丝绾正，铺十里红妆可愿？ 却怕长发及腰，少年倾心他人。待你青丝绾正，笑看君怀她笑颜。时待我发齐腰长，愿与梦郎诉衷肠。半生缠绵报君享，此情绵绵意长长。时待我发齐腰长，轻舞霓裳意飞扬。襄王神女应无恙，巫山云雨梦得度偿。时待我发齐腰长，红颜老去珠也黄。</strong></li></ul><hr><blockquote><p>《思念往昔》-张小娴</p></blockquote><ul><li><strong>我没有很刻意地去想念你，因为我知道遇到了就应该感恩，路过了就应该释怀。我只是在很多个小瞬间想起你。比如，一部电影，一首歌，一句歌词，一条马路和无数个闭上眼的瞬间。</strong></li></ul><hr><blockquote><p>《后来》-2017年刘若英演唱会后，出自网络</p></blockquote><p><strong>初闻不知曲中意，再闻已是曲中人。<br>既然已是曲中人，何必再听曲中曲。<br>曲中轻忆梦中人，梦醒时分叹红尘。<br>曲终人散梦已醒，何处再寻梦中人。<br>梦中合唱凤求凰，梦醒独奏离别赋。<br>即知曲人存于梦，何故执于曲外人。<br>多少痴梦多少等，难诉痴情曲中人。<br>一萧一页红尘事，一弦一曲了人生。<br>既然已是曲中人，何必再悟曲中意。<br>不愿再做曲中人，奈何越听越沉沦。<br>曲中曲，人中人，曲散人终离，曲终人散早成空。<br>一曲肝肠断，天涯何处觅知音。</strong></p><hr><blockquote><p>《当幸福来敲门》-电影</p></blockquote><ul><li><strong>当人们做不到一些事情的时候，他们就会对你说你也同样不可能。如果你有梦想，就去捍卫它。</strong></li></ul><hr><blockquote><p>《寄生虫》影评-Hong-King改编自网络</p></blockquote><ul><li><strong>有人说电影《寄生虫》太过灰暗，描述了穷富之间难以跨越的鸿沟，书写了生而为人难以逃脱的宿命。但这是阶级的悲剧吗？我更倾向于这是选择的悲剧，亦是悲剧的选择。他们本可以选择上进、勤恳、沟通，却沉沦于寄生和懒惰，暴力和杀戮。生活不是永恒的暴雨倾盆，总有阳光灿烂的时候，但这时候，就要看你如何选择。是躲在屋里仇视外面的阳光，还是冲到阳光下，努力地活一把。</strong></li></ul><hr><blockquote><p>《Like That》-网易云评论</p></blockquote><ul><li><strong>我会变得更好，因为你，但不是为了你。</strong></li></ul><hr><blockquote><p>《记得》-网易云评论</p></blockquote><ul><li><strong>无论我们以后生疏成什么样子，请记得曾经我对你的好是真的。剩下的路就不陪你走了，要照顾好自己，不是每个人都是我，三生有幸，遇见你纵使悲凉也是情。</strong></li></ul><hr><blockquote><p>《被讨厌的勇气》-[日] 岸见一郎/古贺史健  </p></blockquote><ul><li><strong>在阿德勒眼中，理想的人际关系大概是“我爱你，但与你无关”。他认为每个人的课题都是分离又独特的。我怎么爱你，这是我的课题，而你要不要接受我的爱，这是你的课题。</strong></li></ul><hr><blockquote><p>摘自网络</p></blockquote><ul><li><p><strong>有人说，林深时见鹿，海蓝时见鲸，梦醒时见你。可实际，林深时起雾，海蓝时浪涌，梦醒时夜续。但终究，鹿踏雾而来，鲸随浪而起。你没回头又怎知我不在？</strong></p></li><li><p><strong>你认为的完美爱情是从一而终，而现实中的完美爱情，更像是和生活的握手言和。永远不要说永远。</strong></p></li><li><p><strong>我永远喜欢你，不是说我会十年二十年一辈子都喜欢你，而是指，我这一刻喜欢你的程度，让我有勇气说出来我永远喜欢你。</strong></p></li><li><p><strong>过程才是生命，两端都是死亡。</strong></p></li><li><p><strong>每当有人问起，为什么我不恋爱的时候，我都以麻烦为由搪塞过去。又有人开始问我到底喜欢过谁没有，我也轻描淡写地表示否定。无数的朋友告诉我，或许是你还没碰到过真正喜欢的人吧，我却没法开口告诉他们，其实我曾经碰到过，碰得太早，以至于我没来得及分清，也没来得及弄明白。</strong></p></li><li><p><strong>遗憾吗？那么喜欢连张合影都没有</strong></p></li><li><p><strong>没人嘲笑你的梦想，他们只是嘲笑你的实力</strong></p></li><li><p><strong>其实我也是很羡慕别的小女生收到花，收到唇膏，收到各种各样的惊喜，我嘴上说，反正我都买得起，但在心里还是偷偷羡慕过的，所以希望我的恋人，拜托拜托，送花给我，偷偷准备热门色号的唇膏给我，摸摸我的头，天冷的时候把我的手放在你的口袋里，俗气而又热烈的喜欢我。</strong></p></li><li><p><strong>和你一起环游世界拍照，就是一口气做了三件最爱的事情。</strong> —#孔维与诗苑#</p></li><li><p><strong>看你周围，你未来另一半此时正在某个地方，可能坐计程车、看小说、做数学题，收到情书、烹饪、身处旅途、阴天躲在被子里哭、学习怎么打扮、喂猫、给大狗洗澡。就在现在，就在此时此刻，未来注定要和你在一起的那个人，正在努力制造着你们一起躺在床上的那无数个夜晚里准备讲给你的回忆和故事。</strong>—博主:#小羊爱吃酱肘子#</p></li><li><p><strong>温柔仅供参考，一切请以生气时间为准</strong></p></li><li><p><strong>我是檐上三寸雪，你是人间惊鸿客</strong></p></li><li><p><strong>去做你害怕的事，最后你会发现：其实不过如此。</strong></p></li><li><p><strong>把欺负你的人打疼，一次就够了。</strong></p></li><li><p><strong>苦难就是苦难，是我们自己足够坚强挺过了苦难，是我们自己从苦难中不断成长。</strong></p></li><li><p><strong>虽然也会有数不尽的悲伤，但我终将与你相遇</strong></p></li></ul><hr><blockquote><p>Hong-King</p></blockquote><ul><li><strong>我曾经害怕死亡，有太多人类的奇迹是我看不到的，但我没发现同时我也是幸运的，这个时代本身就有很多奇迹等着我们去创造。</strong></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;《终了》-张九南&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;终是庄周梦了蝶，你是恩赐也是劫。&lt;br&gt;终是李白醉了酒，你是孤独也是愁。&lt;br&gt;终是荆轲刺了秦，一代君王一世民。&lt;br&gt;终是妲己祸了国，万里江山似蹉跎。&lt;br&gt;终是玉环停了曲，无人再懂琵琶语。&lt;br&gt;终是韩信放下枪，你是宿命也是伤。&lt;br&gt;终是悟空成了佛，你一堕落便是魔。&lt;br&gt;终是霸王别了姬，弃了江山负了你。&lt;br&gt;终是后裔断了箭，此生注定难相见。&lt;br&gt;终是评书已截断，从此告别定场诗。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;刘俊宏&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;照片是光与影的悦动，纠缠着喜或悲的回忆&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;《波兰来客》-北岛&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;年轻时我们都有梦想，关于文字，关于爱情，关于穿越世界的旅行。现在我们夜深饮酒杯子撞在一起，听到的都是梦破碎的声音。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;《红玫瑰与白玫瑰》-张爱玲 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;也许每一个男子全都有过这样的两个女人，至少两个。娶了红玫瑰，久而久之，红的变了墙上的一抹蚊子血，白的还是“床前明月光”；娶了白玫瑰，白的便是衣服上的一粒饭粘子，红的却是心口上的一颗朱砂痣。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;《在细雨中呼喊》-余华 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;死亡不是失去生命，而是走出了时间。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;《生命最后的读书会》-[美] 威尔·施瓦尔贝 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;假如你不愿祝福他的王国，那么不要为之祈祷。假如你愿意，不能只靠祈祷，还必须为之努力。-《天国降临》&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="佳句收录 新句美文" scheme="https://Hong-King.github.io/categories/%E4%BD%B3%E5%8F%A5%E6%94%B6%E5%BD%95-%E6%96%B0%E5%8F%A5%E7%BE%8E%E6%96%87/"/>
    
    
      <category term="语言之美" scheme="https://Hong-King.github.io/tags/%E8%AF%AD%E8%A8%80%E4%B9%8B%E7%BE%8E/"/>
    
  </entry>
  
  <entry>
    <title>Python网络爬虫示例（有道词典）</title>
    <link href="https://hong-king.github.io/2020/08/14/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E7%A4%BA%E4%BE%8B%EF%BC%88%E6%9C%89%E9%81%93%E8%AF%8D%E5%85%B8%EF%BC%89/"/>
    <id>https://hong-king.github.io/2020/08/14/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E7%A4%BA%E4%BE%8B%EF%BC%88%E6%9C%89%E9%81%93%E8%AF%8D%E5%85%B8%EF%BC%89/</id>
    <published>2020-08-14T14:39:00.000Z</published>
    <updated>2020-08-14T14:41:55.204Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line">import urllib.parse</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://fanyi.youdao.com/translate?smartresult=dict&amp;smartresult=rule&amp;sessionFrom='</span></span><br><span class="line">data = &#123;&#125;</span><br><span class="line">data[<span class="string">'i'</span>] = <span class="string">'hellow world'</span></span><br><span class="line">data[<span class="string">'from'</span>] = <span class="string">'AUTO'</span></span><br><span class="line">data[<span class="string">'to'</span>] = <span class="string">'AUTO'</span></span><br><span class="line">data[<span class="string">'smartresult'</span>] = <span class="string">'fanyideskweb'</span></span><br><span class="line">data[<span class="string">'salt'</span>] = <span class="string">'15974087852539'</span></span><br><span class="line">data[<span class="string">'sign'</span>] = <span class="string">'bf425f71f33933c9acf4bfbf4e7977f2'</span></span><br><span class="line">data[<span class="string">'lts'</span>] = <span class="string">'1597408785253'</span></span><br><span class="line">data[<span class="string">'bv'</span>] = <span class="string">'4a974ec57c26e120374ce7e28f9434e5'</span></span><br><span class="line">data[<span class="string">'client'</span>] = <span class="string">'dict'</span></span><br><span class="line">data[<span class="string">'doctype'</span>] = <span class="string">'json'</span></span><br><span class="line">data[<span class="string">'version'</span>] = <span class="string">'2.1'</span></span><br><span class="line">data[<span class="string">'keyfrom'</span>] = <span class="string">'fanyi.web'</span></span><br><span class="line">data[<span class="string">'action'</span>] = <span class="string">'FY_BY_CLICKBUTTION'</span></span><br><span class="line">data = urllib.parse.urlencode(data).encode(<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">response = urllib.request.urlopen(url,data)</span><br><span class="line">html = response.read().decode(<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(html)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 网络爬虫" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>python 表格数据合并函数merge()</title>
    <link href="https://hong-king.github.io/2020/08/09/python%20%E8%A1%A8%E6%A0%BC%E6%95%B0%E6%8D%AE%E5%90%88%E5%B9%B6%E5%87%BD%E6%95%B0merge()/"/>
    <id>https://hong-king.github.io/2020/08/09/python%20%E8%A1%A8%E6%A0%BC%E6%95%B0%E6%8D%AE%E5%90%88%E5%B9%B6%E5%87%BD%E6%95%B0merge()/</id>
    <published>2020-08-09T00:52:00.000Z</published>
    <updated>2020-08-09T04:48:43.296Z</updated>
    
    <content type="html"><![CDATA[<p>函数merge()的用法有点类似SQL语言</p><h3 id="左右连接键名一样"><a href="#左右连接键名一样" class="headerlink" title="左右连接键名一样"></a>左右连接键名一样</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line">df1=pd.DataFrame(&#123;<span class="string">'key'</span>:[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'b'</span>],<span class="string">'value1'</span>:range(5)&#125;)</span><br><span class="line">df2=pd.DataFrame(&#123;<span class="string">'key'</span>:[<span class="string">'a'</span>,<span class="string">'c'</span>,<span class="string">'c'</span>,<span class="string">'c'</span>,<span class="string">'c'</span>],<span class="string">'value2'</span>:range(5)&#125;)</span><br><span class="line">display(df1,df2,pd.merge(df1,df2))</span><br></pre></td></tr></table></figure><p>df1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    key  value1          </span><br><span class="line">0 a  0</span><br><span class="line">1  b  1</span><br><span class="line">2  a  2</span><br><span class="line">3  b  3</span><br><span class="line">4  b  4</span><br></pre></td></tr></table></figure><p>df2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    key  value2</span><br><span class="line">0  a  0</span><br><span class="line">1  c  1</span><br><span class="line">2  c  2</span><br><span class="line">3  c  3</span><br><span class="line">4  c  4</span><br></pre></td></tr></table></figure><p>pd.merge(df1,df2) ##以df1、df2中相同的列名key进行连接,默认how=’inner’, pd.merge(df1,df2,on=’key’,how=’inner’)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   key  value1 value2</span><br><span class="line">0  a    0    0</span><br><span class="line">1  a    2    0</span><br></pre></td></tr></table></figure><a id="more"></a><p>pd.merge(df1,df2,how=’outer’) ##  全连接，取并集</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">keyvalue1value2</span><br><span class="line">0  a  0.00.0</span><br><span class="line">1 a  2.00.0</span><br><span class="line">2 b  1.0NaN</span><br><span class="line">3  b  3.0NaN</span><br><span class="line">4  b  4.0NaN</span><br><span class="line">5 c  NaN1.0</span><br><span class="line">6  c  NaN2.0</span><br><span class="line">7  c  NaN3.0</span><br><span class="line">8  c  NaN4.0</span><br></pre></td></tr></table></figure><p>pd.merge(df1,df2,how=’left’)  ### 左连接，左边取全部，右边取部分，没有值则用NaN填充</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   key   value1   value2</span><br><span class="line">0  a   0   0.0</span><br><span class="line">1  b   1   NaN</span><br><span class="line">2  a   2   0.0</span><br><span class="line">3  b   3   NaN</span><br><span class="line">4  b   4   NaN</span><br></pre></td></tr></table></figure><p>pd.merge(df1,df2,how=’right’) ###  右连接，右边取全部，左边取部分，没有值则用NaN填充</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">key   value1  value2</span><br><span class="line">0a   0.0 0</span><br><span class="line">1a   2.0 0</span><br><span class="line">2c   NaN 1</span><br><span class="line">3c   NaN 2</span><br><span class="line">4c   NaN 3</span><br><span class="line">5c   NaN 4</span><br></pre></td></tr></table></figure><hr><h3 id="左右连接键名不一样"><a href="#左右连接键名不一样" class="headerlink" title="左右连接键名不一样"></a>左右连接键名不一样</h3><p>如果两个DataFrame的左右连接键的列名不一样，可以用left_on，right_on来进行指定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df3=pd.DataFrame(&#123;<span class="string">'lkey'</span>:[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'b'</span>],<span class="string">'data1'</span>:range(5)&#125;)</span><br><span class="line">df4=pd.DataFrame(&#123;<span class="string">'rkey'</span>:[<span class="string">'a'</span>,<span class="string">'c'</span>,<span class="string">'c'</span>,<span class="string">'c'</span>,<span class="string">'c'</span>],<span class="string">'data2'</span>:range(5)&#125;)</span><br></pre></td></tr></table></figure><p>df3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    lkey  data1</span><br><span class="line">0    a      0</span><br><span class="line">1    b      1</span><br><span class="line">2    a      2</span><br><span class="line">3    b      3</span><br><span class="line">4    b      4</span><br></pre></td></tr></table></figure><p>df4</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    rkey  data2</span><br><span class="line">0    a      0</span><br><span class="line">1    c      1</span><br><span class="line">2    c      2</span><br><span class="line">3    c      3</span><br><span class="line">4    c      4</span><br></pre></td></tr></table></figure><p>pd.merge(df3,df4,left_on=’lkey’,right_on=’rkey’)   ### 内连接，默认how=’inner’</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    lkey  data1 rkey  data2</span><br><span class="line">0    a      0    a      0</span><br><span class="line">1    a      2    a      0</span><br></pre></td></tr></table></figure><p>pd.merge(df3,df4,left_on=’lkey’,right_on=’lkey’,how=’outer’)  ### 全连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    lkey  data1 rkey  data2</span><br><span class="line">0    a    0.0    a    0.0</span><br><span class="line">1    a    2.0    a    0.0</span><br><span class="line">2    b    1.0  NaN    NaN</span><br><span class="line">3    b    3.0  NaN    NaN</span><br><span class="line">4    b    4.0  NaN    NaN</span><br><span class="line">5  NaN    NaN    c    1.0</span><br><span class="line">6  NaN    NaN    c    2.0</span><br><span class="line">7  NaN    NaN    c    3.0</span><br><span class="line">8  NaN    NaN    c    4.0</span><br></pre></td></tr></table></figure><p>pd.merge(df3,df4,left_on=’lkey’,right_on=’rkey’,how=’left’)  ### 左连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    lkey  data1 rkey  data2</span><br><span class="line">0    a      0    a    0.0</span><br><span class="line">1    b      1  NaN    NaN</span><br><span class="line">2    a      2    a    0.0</span><br><span class="line">3    b      3  NaN    NaN</span><br><span class="line">4    b      4  NaN    NaN</span><br></pre></td></tr></table></figure><p>pd.merge(df3,df4,left_on=’lkey’,right_on=’rkey’,how=’right’)  ### 右连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    lkey  data1 rkey  data2</span><br><span class="line">0    a    0.0    a      0</span><br><span class="line">1    a    2.0    a      0</span><br><span class="line">2  NaN    NaN    c      1</span><br><span class="line">3  NaN    NaN    c      2</span><br><span class="line">4  NaN    NaN    c      3</span><br><span class="line">5  NaN    NaN    c      4</span><br></pre></td></tr></table></figure><hr><h3 id="索引作为连接键"><a href="#索引作为连接键" class="headerlink" title="索引作为连接键"></a>索引作为连接键</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df5=pd.DataFrame(np.arange(12).reshape(3,4),index=list(<span class="string">'abc'</span>),columns=[<span class="string">'v1'</span>,<span class="string">'v2'</span>,<span class="string">'v3'</span>,<span class="string">'v4'</span>])</span><br><span class="line">df6=pd.DataFrame(np.arange(12,24,1).reshape(3,4),index=list(<span class="string">'abd'</span>),columns=[<span class="string">'v5'</span>,<span class="string">'v6'</span>,<span class="string">'v7'</span>,<span class="string">'v8'</span>])</span><br></pre></td></tr></table></figure><p>df5</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    v1  v2  v3  v4</span><br><span class="line">a   0   1   2   3</span><br><span class="line">b   4   5   6   7</span><br><span class="line">c   8   9  10  11</span><br></pre></td></tr></table></figure><p>df6</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   v5  v6  v7  v8</span><br><span class="line">a  12  13  14  15</span><br><span class="line">b  16  17  18  19</span><br><span class="line">d  20  21  22  23</span><br></pre></td></tr></table></figure><p>pd.merge(df5,df6,left_index=True,right_index=True)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v1v2v3v4v5v6v7v8</span><br><span class="line">a012312131415</span><br><span class="line">b456716171819</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;函数merge()的用法有点类似SQL语言&lt;/p&gt;
&lt;h3 id=&quot;左右连接键名一样&quot;&gt;&lt;a href=&quot;#左右连接键名一样&quot; class=&quot;headerlink&quot; title=&quot;左右连接键名一样&quot;&gt;&lt;/a&gt;左右连接键名一样&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import pandas as pd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;df1=pd.DataFrame(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;key&#39;&lt;/span&gt;:[&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;],&lt;span class=&quot;string&quot;&gt;&#39;value1&#39;&lt;/span&gt;:range(5)&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;df2=pd.DataFrame(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;key&#39;&lt;/span&gt;:[&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;],&lt;span class=&quot;string&quot;&gt;&#39;value2&#39;&lt;/span&gt;:range(5)&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;display(df1,df2,pd.merge(df1,df2))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;df1&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    key  value1          &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0 	a		  0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1	  b		  1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2	  a		  2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3	  b		  3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4	  b		  4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;df2&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    key  value2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0	  a		  0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1	  c		  1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2	  c		  2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3	  c		  3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4	  c		  4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;pd.merge(df1,df2) ##以df1、df2中相同的列名key进行连接,默认how=’inner’, pd.merge(df1,df2,on=’key’,how=’inner’)&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   key  value1 value2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0	  a	    0	    0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1	  a	    2	    0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>关于在Python中利用pandas读取与保存csv文件失败的解决方法(&#39;utf-8&#39;编码格式不对)</title>
    <link href="https://hong-king.github.io/2020/08/09/%E5%85%B3%E4%BA%8E%E5%9C%A8Python%E4%B8%AD%E5%88%A9%E7%94%A8pandas%E8%AF%BB%E5%8F%96csv%E6%96%87%E4%BB%B6%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95(&#39;utf-8&#39;%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F%E4%B8%8D%E5%AF%B9)/"/>
    <id>https://hong-king.github.io/2020/08/09/%E5%85%B3%E4%BA%8E%E5%9C%A8Python%E4%B8%AD%E5%88%A9%E7%94%A8pandas%E8%AF%BB%E5%8F%96csv%E6%96%87%E4%BB%B6%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95(&#39;utf-8&#39;%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F%E4%B8%8D%E5%AF%B9)/</id>
    <published>2020-08-09T00:52:00.000Z</published>
    <updated>2020-08-09T00:52:26.906Z</updated>
    
    <content type="html"><![CDATA[<p>在一开始我遇到了这个错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line">data = pd.read_csv(<span class="string">'data1.csv'</span>)</span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line"></span><br><span class="line">[out]:</span><br><span class="line">UnicodeDecodeError: <span class="string">'utf-8'</span> codec can<span class="string">'t decode byte 0xc4 in position 0: invalid continuation byte</span></span><br></pre></td></tr></table></figure><p>开始不知道如何解决，一直想通过下载csv包来解决，但pip里没有这个包。后来我通过对csv文件进行“只读”操作后，发出现程序可以运行了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line">data = pd.read_csv(open(<span class="string">'data1.csv'</span>,<span class="string">'r'</span>))</span><br><span class="line"><span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure><hr><p>在保存时我也遇到了编码格式不对的错误，我是这样解决的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">data1 = pd.read_csv(open(<span class="string">'data1.csv'</span>,<span class="string">'r'</span>))</span><br><span class="line">data2 = pd.read_csv(open(<span class="string">'data2.csv'</span>,<span class="string">'r'</span>))</span><br><span class="line">data3 = pd.read_csv(open(<span class="string">'data3.csv'</span>,<span class="string">'r'</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(data1))</span><br><span class="line">result = pd.merge(data1, data2 ,on=<span class="string">'CardNo'</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line">result.to_csv(<span class="string">'data4.csv'</span>,encoding=<span class="string">"utf_8_sig"</span>) <span class="comment">#用于解决编码错误问题</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在一开始我遇到了这个错误：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>R语言dgCMatrix稀疏矩阵结构</title>
    <link href="https://hong-king.github.io/2020/08/06/R%E8%AF%AD%E8%A8%80dgCMatrix%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5%E7%BB%93%E6%9E%84/"/>
    <id>https://hong-king.github.io/2020/08/06/R%E8%AF%AD%E8%A8%80dgCMatrix%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5%E7%BB%93%E6%9E%84/</id>
    <published>2020-08-06T12:15:00.000Z</published>
    <updated>2020-08-06T12:15:31.298Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; str(mat)</span><br><span class="line">Formal class <span class="string">'dgCMatrix'</span> [package <span class="string">"Matrix"</span>] with 6 slots</span><br><span class="line">  ..@ i       : int(0) </span><br><span class="line">  ..@ p       : int [1:8190] 0 0 0 0 0 0 0 0 0 0 ...</span><br><span class="line">  ..@ Dim     : int [1:2] 320127 8189 <span class="comment">#记录矩阵的维度信息</span></span><br><span class="line">  ..@ Dimnames:List of 2 <span class="comment">#记录行名和列名</span></span><br><span class="line">  .. ..$ : NULL</span><br><span class="line">  .. ..$ : NULL</span><br><span class="line">  ..@ x       : num(0) <span class="comment">#记录不为0的数值</span></span><br><span class="line">  ..@ factors : list()</span><br></pre></td></tr></table></figure><p><strong>@Dim</strong>记录矩阵的维度信息, <strong>@Dimnames</strong>记录行名和列名, <strong>@x</strong>记录不为0的数值。<strong>@i</strong>记录不为0的行索引，由于这里全为0，所以不记录。<strong>@p</strong>(待定更新)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="R语言 基础语法" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/R%E8%AF%AD%E8%A8%80-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
    
      <category term="R语言" scheme="https://Hong-King.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>R语言学习笔记</title>
    <link href="https://hong-king.github.io/2020/07/20/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://hong-king.github.io/2020/07/20/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-07-20T12:32:00.000Z</published>
    <updated>2020-07-25T07:16:45.350Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h1><h3 id="使用getwd-函数来显示当前工作目录"><a href="#使用getwd-函数来显示当前工作目录" class="headerlink" title="使用getwd()函数来显示当前工作目录"></a>使用<em>getwd()</em>函数来显示当前工作目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">getwd()</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line">[1] <span class="string">"C:/Users/lenovo/Documents"</span></span><br></pre></td></tr></table></figure><hr><h3 id="使用setwd-函数来修改工作目录"><a href="#使用setwd-函数来修改工作目录" class="headerlink" title="使用setwd()函数来修改工作目录"></a>使用<em>setwd()</em>函数来修改工作目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setwd(dir = <span class="string">"目标工作路径"</span>)</span><br></pre></td></tr></table></figure><hr><h3 id="在R中建议使用”-lt-“符号来进行赋值，符号”-lt-lt-“表示强制赋值给一个全局变量。"><a href="#在R中建议使用”-lt-“符号来进行赋值，符号”-lt-lt-“表示强制赋值给一个全局变量。" class="headerlink" title="在R中建议使用”&lt;-“符号来进行赋值，符号”&lt;&lt;-“表示强制赋值给一个全局变量。"></a>在R中建议使用”&lt;-“符号来进行赋值，符号”&lt;&lt;-“表示强制赋值给一个全局变量。</h3><hr><h3 id="使用ls-函数来查看当前工作空间中存在的已定义的变量和函数，使用str-变量名-会列出改变量的详细信息，使用ls-str-会列出所有已定义变量和函数详细的信息。"><a href="#使用ls-函数来查看当前工作空间中存在的已定义的变量和函数，使用str-变量名-会列出改变量的详细信息，使用ls-str-会列出所有已定义变量和函数详细的信息。" class="headerlink" title="使用ls()函数来查看当前工作空间中存在的已定义的变量和函数，使用str(变量名)会列出改变量的详细信息，使用ls.str()会列出所有已定义变量和函数详细的信息。"></a>使用<em>ls()</em>函数来查看当前工作空间中存在的已定义的变量和函数，使用<em>str(变量名)</em>会列出改变量的详细信息，使用<em>ls.str()</em>会列出所有已定义变量和函数详细的信息。</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">ls()</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line">[1] <span class="string">"x"</span> <span class="string">"y"</span> <span class="string">"z"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------------</span></span><br><span class="line"></span><br><span class="line">str(x)</span><br><span class="line">str(y)</span><br><span class="line">str(z)</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line">num 3</span><br><span class="line">num 15</span><br><span class="line">num 1</span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------------</span></span><br><span class="line"></span><br><span class="line">ls.str()</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line">x : num 3</span><br><span class="line">y : num 15</span><br><span class="line">z : num 1</span><br></pre></td></tr></table></figure><a id="more"></a><hr><h1 id="向量索引"><a href="#向量索引" class="headerlink" title="向量索引"></a>向量索引</h1><h3 id="利用C-函数来构建向量，并赋值给x变量-c函数用于执行组合功能"><a href="#利用C-函数来构建向量，并赋值给x变量-c函数用于执行组合功能" class="headerlink" title="利用C()函数来构建向量，并赋值给x变量(c函数用于执行组合功能)"></a>利用<em>C()</em>函数来构建向量，并赋值给x变量(c函数用于执行组合功能)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- c(1:10)</span><br><span class="line">x</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line">[1]  1  2  3  4  5  6  7  8  9 10</span><br></pre></td></tr></table></figure><hr><h3 id="利用C-函数对数组-x-进行基础操作"><a href="#利用C-函数对数组-x-进行基础操作" class="headerlink" title="利用C()函数对数组(x)进行基础操作"></a>利用<em>C()</em>函数对数组(x)进行基础操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">x[1] % x下标从1开始取</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line">[1] 1</span><br><span class="line"></span><br><span class="line"><span class="comment">#--------------------</span></span><br><span class="line"></span><br><span class="line">x[0] % 当要输出下标为0的数时，不会输出任何有效值</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"><span class="built_in">integer</span>(0) % 0不是正整数</span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------</span></span><br><span class="line"></span><br><span class="line">x[-1] % 当使用负号索引时，表示输出除该索引的所有元素</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line">[1]  2  3  4  5  6  7  8  9 10</span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------------</span></span><br><span class="line"></span><br><span class="line">x[c(2:6)] % 利用向量对数组进行切割</span><br><span class="line">x[c(2,6)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line">[1] 2 3 4 5 6</span><br><span class="line">[1] 2 6</span><br><span class="line"></span><br><span class="line"><span class="comment">#----------------------------</span></span><br><span class="line"></span><br><span class="line">x[c(-2,5)] % 当同时有负数与正数时将报错</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line">Error <span class="keyword">in</span> y[c(-2, 5)] : 只有负下标里才能有零</span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------------------------</span></span><br><span class="line"></span><br><span class="line">x[c(T,F,F,T,F,F,F,F,T,T)] % 利用逻辑值对X数组进行操作</span><br><span class="line"></span><br><span class="line">x[c(T)]</span><br><span class="line"></span><br><span class="line">x[c(F)]</span><br><span class="line"></span><br><span class="line">x[c(T,F)]% 当给出逻辑值数目少于数组长度时，逻辑值将被循环判断</span><br><span class="line"></span><br><span class="line">x[c(T,F,T)]% 当给出逻辑值数目少于数组长度时，逻辑值将被循环判断</span><br><span class="line"></span><br><span class="line">x[c(T,F,F,T,F,F,F,F,T,T,T,T,F)] % 当给出逻辑值数目大于数组长度时，多出的逻辑值为T则取NA(缺失值),为F不取值</span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line"></span><br><span class="line">[1]  1  4  9 10</span><br><span class="line"></span><br><span class="line">[1]  1  2  3  4  5  6  7  8  9 10</span><br><span class="line"></span><br><span class="line"><span class="built_in">integer</span>(0)</span><br><span class="line"></span><br><span class="line">[1] 1 3 5 7 9</span><br><span class="line"></span><br><span class="line">[1]  1  3  4  6  7  9 10</span><br><span class="line"></span><br><span class="line">[1]  1  4  9 10 NA NA</span><br></pre></td></tr></table></figure><p>也可以通过逻辑运算提取数组元素</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x[x&gt;5]</span><br><span class="line"></span><br><span class="line">x[x&gt;5 &amp; x&lt;9]</span><br><span class="line"></span><br><span class="line">x[x&gt;5 &amp; x&gt;9]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># out:</span></span><br><span class="line">[1]  6  7  8  9 10</span><br><span class="line">[1] 6 7 8</span><br><span class="line">[1] 10</span><br></pre></td></tr></table></figure><hr><h1 id="创建数据集"><a href="#创建数据集" class="headerlink" title="创建数据集"></a>创建数据集</h1><h3 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h3><p>矩阵是一个二维数组，只是每个元素都拥有相同的模式（数值型、字符型或逻辑型）。可通过函数matrix()创建矩阵。一般使用格式为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">myymatrix &lt;- matrix(vector, nrow=number_of_rows, ncol=number_of_columns, byrow=logical_value, dimnames=list(</span><br><span class="line"> char_vector_rownames, char_vector_colnames))</span><br></pre></td></tr></table></figure><p>其中vector包含了矩阵的元素，nrow和ncol用以指定行和列的维数，dimnames包含了可选的、以字符型向量表示的行名和列名。选项byrow则表明矩阵应当按行填充（byrow=TRUE）还是按列填充（byrow=FALSE），默认情况下按列填充。</p><hr><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><pre><code>数组（array）与矩阵类似，但是维度可以大于2。数组可通过array函数创建，形式如下：</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myarray &lt;- array(vector, dimensions, dimnames)</span><br></pre></td></tr></table></figure><p>其中vector包含了数组中的数据，dimensions是一个数值型向量，给出了各个维度下标的最大值，而dimnames是可选的、各维度名称标签的列表。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; dim1 &lt;- c(<span class="string">"A1"</span>, <span class="string">"A2"</span>)</span><br><span class="line">&gt; dim2 &lt;- c(<span class="string">"B1"</span>, <span class="string">"B2"</span>, <span class="string">"B3"</span>)</span><br><span class="line">&gt; dim3 &lt;- c(<span class="string">"C1"</span>, <span class="string">"C2"</span>, <span class="string">"C3"</span>, <span class="string">"C4"</span>)</span><br><span class="line">&gt; z &lt;- array(1:24, c(2, 3, 4), dimnames=list(dim1, dim2, dim3))</span><br><span class="line"><span class="comment">#  z[1,2,3]==15</span></span><br></pre></td></tr></table></figure><hr><h3 id="数据框"><a href="#数据框" class="headerlink" title="数据框"></a>数据框</h3><p>数据框不同的列可以包含不同模式（数值型、字符型等）的数据，所以其较矩阵来说更为一般。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; patientID &lt;- c(1, 2, 3, 4)</span><br><span class="line">&gt; age &lt;- c(25, 34, 28, 52)</span><br><span class="line">&gt; diabetes &lt;- c(<span class="string">"Type1"</span>, <span class="string">"Type2"</span>, <span class="string">"Type1"</span>, <span class="string">"Type1"</span>)</span><br><span class="line">&gt; status &lt;- c(<span class="string">"Poor"</span>, <span class="string">"Improved"</span>, <span class="string">"Excellent"</span>, <span class="string">"Poor"</span>)</span><br><span class="line">&gt; patientdata &lt;- data.frame(patientID, age, diabetes, status)</span><br><span class="line">&gt; patientdata</span><br><span class="line"></span><br><span class="line"> patientID age diabetes status</span><br><span class="line">1 1 25 Type1 Poor</span><br><span class="line">2 2 34 Type2 Improved</span><br><span class="line">3 3 28 Type1 Excellent</span><br><span class="line">4 4 52 Type1 Poor</span><br></pre></td></tr></table></figure><p>选取数据框中元素的方式有若干种。你可以使用前述（如矩阵中的）下标记号，亦可直接指定列名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt; patientdata[1:2]</span><br><span class="line"> patientID age</span><br><span class="line">1 1 25</span><br><span class="line">2 2 34</span><br><span class="line">3 3 28</span><br><span class="line">4 4 52</span><br><span class="line"></span><br><span class="line">&gt; patientdata[c(<span class="string">"diabetes"</span>, <span class="string">"status"</span>)]</span><br><span class="line"> diabetes status</span><br><span class="line">1 Type1 Poor</span><br><span class="line">2 Type2 Improved</span><br><span class="line">3 Type1 Excellent</span><br><span class="line">4 Type1 Poor</span><br><span class="line"></span><br><span class="line"> &gt; patientdata<span class="variable">$age</span></span><br><span class="line">[1] 25 34 28 52</span><br></pre></td></tr></table></figure><p>第三个例子中的记号&lt;$&gt;被用来选取一个给定数据框中的某个特定变量。例如，如果你想生成糖尿病类型变量diabetes和病情变量status的列联表，使用以下代码即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; table(patientdata<span class="variable">$diabetes</span>, patientdata<span class="variable">$status</span>)</span><br><span class="line"> Excellent Improved Poor</span><br><span class="line"> Type1 1 0 2</span><br><span class="line"> Type2 0 1 0</span><br></pre></td></tr></table></figure><hr><h3 id="使用attach-、detach-和with-函数简化代码"><a href="#使用attach-、detach-和with-函数简化代码" class="headerlink" title="使用attach()、detach()和with()函数简化代码"></a>使用attach()、detach()和with()函数简化代码</h3><p>函数attach()[attach有”绑定”之意]可将数据框添加到R的搜索路径中。R在遇到一个变量名以后，将检查搜索路径中的数据框。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">summary(mtcars<span class="variable">$mpg</span>)</span><br><span class="line">plot(mtcars<span class="variable">$mpg</span>, mtcars<span class="variable">$disp</span>)</span><br><span class="line">plot(mtcars<span class="variable">$mpg</span>, mtcars<span class="variable">$wt</span>)</span><br><span class="line"><span class="comment">#----------------------以上代码可简化成：</span></span><br><span class="line">attach(mtcars)</span><br><span class="line"> summary(mpg)</span><br><span class="line"> plot(mpg, disp)</span><br><span class="line"> plot(mpg, wt)</span><br><span class="line">detach(mtcars) <span class="comment">#函数detach()将数据框从搜索路径中移除。值得注意的是，detach()并不会对数据框本身做任何处理。这句是可以省略的，但其实它应当被例行地放入代码中，因为这是一个好的编程习惯。</span></span><br></pre></td></tr></table></figure><p>当名称相同的对象不止一个时，这种方法的局限性就很明显了。考虑以下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&gt; mpg &lt;- c(25, 36, 47)</span><br><span class="line">&gt; attach(mtcars)</span><br><span class="line">The following object(s) are masked _by_ <span class="string">'.GlobalEnv'</span>: mpg</span><br><span class="line">&gt; plot(mpg, wt)</span><br><span class="line">Error <span class="keyword">in</span> xy.coords(x, y, xlabel, ylabel, <span class="built_in">log</span>) :</span><br><span class="line"> <span class="string">'x'</span> and <span class="string">'y'</span> lengths differ</span><br><span class="line">&gt; mpg</span><br><span class="line">[1] 25 36 47 </span><br><span class="line"></span><br><span class="line"><span class="comment">#这里，在数据框mtcars被绑定（attach）之前，你们的环境中已经有了一个名为mpg的对象。在这种情况下，原始对象将取得优先权。由于mpg中有3个元素而disp中有32个元素，故plot语句出错。函数attach()和detach()最好在你分析一个单独的数据框，并且不太可能有多个同名对象时使用。**任何情况下，都要当心那些告知某个对象已被屏蔽（masked）的警告。**</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------------------使用函数with()可以这样重写上例</span></span><br><span class="line"></span><br><span class="line">with(mtcars, &#123;</span><br><span class="line"> <span class="built_in">print</span>(summary(mpg))</span><br><span class="line"> plot(mpg, disp)</span><br><span class="line"> plot(mpg, wt)</span><br><span class="line">&#125;) </span><br><span class="line"><span class="comment">#在这种情况下，花括号&#123;&#125;之间的语句都针对数据框mtcars执行，这样就无需担心名称冲突了。如果仅有一条语句（例如summary(mpg)），那么花括号&#123;&#125;可以省略。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-----------------函数with()的局限性在于，赋值仅在此函数的括号内生效。</span></span><br><span class="line"></span><br><span class="line">&gt; with(mtcars, &#123;</span><br><span class="line"> stats &lt;- summary(mpg)</span><br><span class="line"> stats</span><br><span class="line"> &#125;)</span><br><span class="line"> Min. 1st Qu. Median Mean 3rd Qu. Max.</span><br><span class="line"> 10.40 15.43 19.20 20.09 22.80 33.90</span><br><span class="line">&gt; stats</span><br><span class="line">Error: object <span class="string">'stats'</span> not found </span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------------如果你需要创建在with()结构以外存在的对象，使用特殊赋值符(&lt;&lt;-)替代标准赋值符（&lt;-）即可，它可将对象保存到with()之外的全局环境中。</span></span><br><span class="line"></span><br><span class="line">&gt; with(mtcars, &#123;</span><br><span class="line"> nokeepstats &lt;- summary(mpg)</span><br><span class="line"> keepstats &lt;&lt;- summary(mpg)</span><br><span class="line">&#125;)</span><br><span class="line">&gt; nokeepstats</span><br><span class="line">Error: object <span class="string">'nokeepstats'</span> not found</span><br><span class="line">&gt; keepstats</span><br><span class="line"> Min. 1st Qu. Median Mean 3rd Qu. Max.</span><br><span class="line"> 10.40 15.43 19.20 20.09 22.80 33.90</span><br></pre></td></tr></table></figure><ul><li>实例标识符<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&gt; patientID &lt;- c(1, 2, 3, 4)</span><br><span class="line">&gt; age &lt;- c(25, 34, 28, 52)</span><br><span class="line">&gt; diabetes &lt;- c(<span class="string">"Type1"</span>, <span class="string">"Type2"</span>, <span class="string">"Type1"</span>, <span class="string">"Type1"</span>)</span><br><span class="line">&gt; status &lt;- c(<span class="string">"Poor"</span>, <span class="string">"Improved"</span>, <span class="string">"Excellent"</span>, <span class="string">"Poor"</span>)</span><br><span class="line">&gt; patientdata &lt;- data.frame(patientID, age, diabetes, status)</span><br><span class="line">&gt; patientdata </span><br><span class="line">  patientID age diabetes    status</span><br><span class="line">1         1  25    Type1      Poor</span><br><span class="line">2         2  34    Type2  Improved</span><br><span class="line">3         3  28    Type1 Excellent</span><br><span class="line">4         4  52    Type1      Poor</span><br><span class="line"></span><br><span class="line"><span class="comment">#------------------------------在病例数据中，病人编号（patientID）用于区分数据集中不同的个体。在R中，实例标识符（case identifier）可通过数据框操作函数中的rowname选项指定。</span></span><br><span class="line"></span><br><span class="line">&gt; patientdata &lt;- data.frame(patientID, age, diabetes,status, row.names=age) </span><br><span class="line">&gt; patientdata</span><br><span class="line">   patientID age diabetes    status</span><br><span class="line">25         1  25    Type1      Poor</span><br><span class="line">34         2  34    Type2  Improved</span><br><span class="line">28         3  28    Type1 Excellent</span><br><span class="line">52         4  52    Type1      Poor</span><br><span class="line"><span class="comment">#将patientID指定为R中标记各类打印输出和图形中实例名称所用的变量。</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="因子"><a href="#因子" class="headerlink" title="因子"></a>因子</h3><p>变量可归结为名义型、有序型或连续型变量。</p><ol><li>名义型变量是没有顺序之分的类别变量。糖尿病类型Diabetes（Type1、Type2）是名义型变量的一例。即使在数据中Type1编码为1而Type2编码为2，这也并不意味着二者是有序的。</li><li>有序型变量表示一种顺序关系，而非数量关系。病情Status（poor、improved、excellent）是顺序型变量的一个上佳示例。我们明白，病情为poor（较差）病人的状态不如improved（病情好转）的病人，但并不知道相差多少。</li><li>连续型变量可以呈现为某个范围内的任意值，并同时表示了顺序和数量。年龄Age就是一个连续型变量，它能够表示像14.5或22.8这样的值以及其间的其他任意值。</li></ol><p><strong>类别（名义型）变量</strong>和<strong>有序类别（有序型）变量</strong>在R中称为<strong>因子（factor）</strong>。<strong>因子在R中非常重要，因为它决定了数据的分析方式以及如何进行视觉呈现</strong>。</p><p>函数factor()以一个整数向量的形式存储类别值，整数的取值范围是[1…k]（其中k是名义型变量中唯一值的个数），同时一个由字符串（原始值）组成的内部向量将映射到这些整数上。</p><ul><li><p>对于<strong>字符型向量</strong>，因子的水平默认<strong>依字母顺序创建</strong>。但按默认的字母顺序排序的因子很少能够让人满意。你可以通过指定levels选项来覆盖默认排序。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; status &lt;- c(<span class="string">"Poor"</span>, <span class="string">"Improved"</span>, <span class="string">"Excellent"</span>, <span class="string">"Poor"</span>)</span><br><span class="line">&gt; status &lt;- factor(status, order=TRUE,levels=c(<span class="string">"Poor"</span>, <span class="string">"Improved"</span>, <span class="string">"Excellent"</span>))</span><br><span class="line">&gt; status</span><br><span class="line">[1] Poor Improved Excellent Poor     </span><br><span class="line">Levels: Poor &lt; Improved &lt; Excellent</span><br><span class="line"><span class="comment">#各水平的赋值将为1=Poor、2=Improved、3=Excellent。必须保证指定的水平与数据中的真实值相匹配，否则任何在数据中出现而未在参数中列举的数据都将被设为缺失值。</span></span><br></pre></td></tr></table></figure></li><li><p>数值型变量可以用levels和labels参数来编码成因子。如果男性被编码成1，女性被编码成2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; sex &lt;- c(1,2,1,1)</span><br><span class="line">&gt; sex &lt;- factor(sex, levels=c(1, 2), labels=c(<span class="string">"Male"</span>, <span class="string">"Female"</span>))</span><br><span class="line">&gt; sex</span><br><span class="line">[1] Male Female Male Male  </span><br><span class="line">Levels: Male Female</span><br></pre></td></tr></table></figure><p>以下代码演示了普通因子和有序因子的不同是如何影响数据分析的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&gt; patientID &lt;- c(1, 2, 3, 4)</span><br><span class="line">&gt; age &lt;- c(25, 34, 28, 52)</span><br><span class="line">&gt; diabetes &lt;- c(<span class="string">"Type1"</span>, <span class="string">"Type2"</span>, <span class="string">"Type1"</span>, <span class="string">"Type1"</span>)</span><br><span class="line">&gt; status &lt;- c(<span class="string">"Poor"</span>, <span class="string">"Improved"</span>, <span class="string">"Excellent"</span>, <span class="string">"Poor"</span>)</span><br><span class="line">&gt; diabetes &lt;- factor(diabetes)</span><br><span class="line">&gt; status &lt;- factor(status, order=TRUE)</span><br><span class="line">&gt; patientdata &lt;- data.frame(patientID, age, diabetes, status) </span><br><span class="line"></span><br><span class="line">&gt; str(patientdata) </span><br><span class="line"><span class="string">'data.frame'</span>:4 obs. of  4 variables:</span><br><span class="line"> $ patientID: num  1 2 3 4</span><br><span class="line"> $ age      : num  25 34 28 52</span><br><span class="line"> $ diabetes : Factor w/ 2 levels <span class="string">"Type1"</span>,<span class="string">"Type2"</span>: 1 2 1 1</span><br><span class="line"> $ status   : Ord.factor w/ 3 levels <span class="string">"Excellent"</span>&lt;<span class="string">"Improved"</span>&lt;..: 3 2 1 3</span><br><span class="line"></span><br><span class="line"> &gt; summary(patientdata)</span><br><span class="line">   patientID         age         diabetes</span><br><span class="line"> Min.   :1.00   Min.   :25.00   Type1:3  </span><br><span class="line"> 1st Qu.:1.75   1st Qu.:27.25   Type2:1  </span><br><span class="line"> Median :2.50   Median :31.00            </span><br><span class="line"> Mean   :2.50   Mean   :34.75            </span><br><span class="line"> 3rd Qu.:3.25   3rd Qu.:38.50            </span><br><span class="line"> Max.   :4.00   Max.   :52.00  </span><br><span class="line"></span><br><span class="line">       status </span><br><span class="line"> Excellent:1  </span><br><span class="line"> Improved :1  </span><br><span class="line"> Poor     :2</span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------</span></span><br><span class="line"></span><br><span class="line">&gt; patientID &lt;- c(1, 2, 3, 4)</span><br><span class="line">&gt; age &lt;- c(25, 34, 28, 52)</span><br><span class="line">&gt; diabetes &lt;- c(<span class="string">"Type1"</span>, <span class="string">"Type2"</span>, <span class="string">"Type1"</span>, <span class="string">"Type1"</span>)</span><br><span class="line">&gt; status &lt;- c(<span class="string">"Poor"</span>, <span class="string">"Improved"</span>, <span class="string">"Excellent"</span>, <span class="string">"Poor"</span>)</span><br><span class="line">&gt; patientdata &lt;- data.frame(patientID, age, diabetes, status)</span><br><span class="line"></span><br><span class="line">&gt; str(patientdata) </span><br><span class="line"><span class="string">'data.frame'</span>:4 obs. of  4 variables:</span><br><span class="line"> $ patientID: num  1 2 3 4</span><br><span class="line"> $ age      : num  25 34 28 52</span><br><span class="line"> $ diabetes : chr  <span class="string">"Type1"</span> <span class="string">"Type2"</span> <span class="string">"Type1"</span> <span class="string">"Type1"</span></span><br><span class="line"> $ status   : chr  <span class="string">"Poor"</span> <span class="string">"Improved"</span> <span class="string">"Excellent"</span> <span class="string">"Poor"</span></span><br><span class="line"></span><br><span class="line">&gt; summary(patientdata)</span><br><span class="line">   patientID         age          diabetes        </span><br><span class="line"> Min.   :1.00   Min.   :25.00   Length:4          </span><br><span class="line"> 1st Qu.:1.75   1st Qu.:27.25   Class :character  </span><br><span class="line"> Median :2.50   Median :31.00   Mode  :character  </span><br><span class="line"> Mean   :2.50   Mean   :34.75                     </span><br><span class="line"> 3rd Qu.:3.25   3rd Qu.:38.50                     </span><br><span class="line"> Max.   :4.00   Max.   :52.00 </span><br><span class="line"></span><br><span class="line">    status         </span><br><span class="line"> Length:4          </span><br><span class="line"> Class :character  </span><br><span class="line"> Mode  :character</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>列表（list）是R的数据类型中最为复杂的一种。一般来说，列表就是一些对象（或成分，component）的有序集合。列表允许你整合若干（可能无关的）对象到单个对象名下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&gt; g &lt;- <span class="string">"My First List"</span></span><br><span class="line">&gt; h &lt;- c(25, 26, 18, 39)</span><br><span class="line">&gt; j &lt;- matrix(1:10, nrow=5)</span><br><span class="line">&gt; k &lt;- c(<span class="string">"one"</span>, <span class="string">"two"</span>, <span class="string">"three"</span>)</span><br><span class="line">&gt; mylist &lt;- list(title=g, ages=h, j, k)</span><br><span class="line">&gt; mylist</span><br><span class="line"><span class="variable">$title</span></span><br><span class="line">[1] <span class="string">"My First List"</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$ages</span></span><br><span class="line">[1] 25 26 18 39</span><br><span class="line"></span><br><span class="line">[[3]]</span><br><span class="line">     [,1] [,2]</span><br><span class="line">[1,]    1    6</span><br><span class="line">[2,]    2    7</span><br><span class="line">[3,]    3    8</span><br><span class="line">[4,]    4    9</span><br><span class="line">[5,]    5   10</span><br><span class="line"></span><br><span class="line">[[4]]</span><br><span class="line">[1] <span class="string">"one"</span>   <span class="string">"two"</span>   <span class="string">"three"</span></span><br><span class="line"><span class="comment">#----------下面输出第三个成分</span></span><br><span class="line">&gt; mylist[[2]]</span><br><span class="line">[1] 25 26 18 39</span><br><span class="line">&gt; mylist[[<span class="string">"ages"</span>]]</span><br><span class="line">[1] 25 26 18 39</span><br></pre></td></tr></table></figure><hr><h3 id="程序员注意事项"><a href="#程序员注意事项" class="headerlink" title="程序员注意事项"></a>程序员注意事项</h3><ul><li><p>R不提供多行注释或块注释功能。你必须以#作为多行注释每行的开始。出于调试目的，你也可以把想让解释器忽略的代码放到语句if(FALSE){… }中。将FALSE改为TRUE即允许这块代码执行。</p></li><li><p>将一个值赋给某个向量、矩阵、数组或列表中一个不存在的元素时，R将自动扩展这个数据结构以容纳新值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- c(8, 6, 4)</span><br><span class="line">&gt; x[7] &lt;- 10</span><br><span class="line">&gt; x</span><br><span class="line">[1] 8 6 4 NA NA NA 10</span><br></pre></td></tr></table></figure><p>通过赋值，向量x由三个元素扩展到了七个元素。x &lt;- x[1:3]会重新将其缩减回三个元素。</p></li><li><p>R中没有标量。标量以单元素向量的形式出现。</p></li><li><p>R中的下标不从0开始，而从1开始。在上述向量中，x[1]的值为8。</p></li><li><p>变量无法被声明。它们在首次被赋值时生成。</p></li></ul><hr><h1 id="数据的输入"><a href="#数据的输入" class="headerlink" title="数据的输入"></a>数据的输入</h1><h3 id="使用键盘输入数据"><a href="#使用键盘输入数据" class="headerlink" title="使用键盘输入数据"></a>使用键盘输入数据</h3><p>使用键盘输入数据有两种常见的方式：<strong>用R内置的文本编辑器</strong>和<strong>直接在代码中嵌入数据</strong>。</p><ol><li>R中的函数edit()会自动调用一个允许手动输入数据的文本编辑器。具体步骤如下：(1) 创建一个空数据框（或矩阵），其中变量名和变量的模式需与理想中的最终数据集一致；(2) 针对这个数据对象调用文本编辑器，输入你的数据，并将结果保存回此数据对象中。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; mydata &lt;- data.frame(age = numeric(0),gender = character(0),weight = numeric(0))</span><br><span class="line"><span class="comment"># 以上例子创建一个名为mydata的数据框，它含有三个*空变量*：age（数值型）、gender（字符型）和weight（数值型）。</span></span><br><span class="line">&gt; mydata &lt;- edit(mydata) <span class="comment">#调用文本编辑器输入数据</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>类似于age=numeric(0)的赋值语句将创建一个指定模式但不含实际数据的变量。</li><li><strong>编辑的结果需要赋值回对象本身</strong>。函数edit()事实上是在对象的一个副本上进行操作的。<strong>如果你不将其赋值到一个目标，你的所有修改将会全部丢失</strong>！</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基本操作&quot;&gt;&lt;a href=&quot;#基本操作&quot; class=&quot;headerlink&quot; title=&quot;基本操作&quot;&gt;&lt;/a&gt;基本操作&lt;/h1&gt;&lt;h3 id=&quot;使用getwd-函数来显示当前工作目录&quot;&gt;&lt;a href=&quot;#使用getwd-函数来显示当前工作目录&quot; class=&quot;headerlink&quot; title=&quot;使用getwd()函数来显示当前工作目录&quot;&gt;&lt;/a&gt;使用&lt;em&gt;getwd()&lt;/em&gt;函数来显示当前工作目录&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;getwd()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# out:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[1] &lt;span class=&quot;string&quot;&gt;&quot;C:/Users/lenovo/Documents&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h3 id=&quot;使用setwd-函数来修改工作目录&quot;&gt;&lt;a href=&quot;#使用setwd-函数来修改工作目录&quot; class=&quot;headerlink&quot; title=&quot;使用setwd()函数来修改工作目录&quot;&gt;&lt;/a&gt;使用&lt;em&gt;setwd()&lt;/em&gt;函数来修改工作目录&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;setwd(dir = &lt;span class=&quot;string&quot;&gt;&quot;目标工作路径&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h3 id=&quot;在R中建议使用”-lt-“符号来进行赋值，符号”-lt-lt-“表示强制赋值给一个全局变量。&quot;&gt;&lt;a href=&quot;#在R中建议使用”-lt-“符号来进行赋值，符号”-lt-lt-“表示强制赋值给一个全局变量。&quot; class=&quot;headerlink&quot; title=&quot;在R中建议使用”&amp;lt;-“符号来进行赋值，符号”&amp;lt;&amp;lt;-“表示强制赋值给一个全局变量。&quot;&gt;&lt;/a&gt;在R中建议使用”&amp;lt;-“符号来进行赋值，符号”&amp;lt;&amp;lt;-“表示强制赋值给一个全局变量。&lt;/h3&gt;&lt;hr&gt;
&lt;h3 id=&quot;使用ls-函数来查看当前工作空间中存在的已定义的变量和函数，使用str-变量名-会列出改变量的详细信息，使用ls-str-会列出所有已定义变量和函数详细的信息。&quot;&gt;&lt;a href=&quot;#使用ls-函数来查看当前工作空间中存在的已定义的变量和函数，使用str-变量名-会列出改变量的详细信息，使用ls-str-会列出所有已定义变量和函数详细的信息。&quot; class=&quot;headerlink&quot; title=&quot;使用ls()函数来查看当前工作空间中存在的已定义的变量和函数，使用str(变量名)会列出改变量的详细信息，使用ls.str()会列出所有已定义变量和函数详细的信息。&quot;&gt;&lt;/a&gt;使用&lt;em&gt;ls()&lt;/em&gt;函数来查看当前工作空间中存在的已定义的变量和函数，使用&lt;em&gt;str(变量名)&lt;/em&gt;会列出改变量的详细信息，使用&lt;em&gt;ls.str()&lt;/em&gt;会列出所有已定义变量和函数详细的信息。&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ls()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# out:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[1] &lt;span class=&quot;string&quot;&gt;&quot;x&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;y&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str(y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str(z)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# out:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	num 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	num 15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	num 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ls.str()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# out:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	x : num 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	y : num 15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	z : num 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="R语言 基础语法" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/R%E8%AF%AD%E8%A8%80-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
    
      <category term="R语言" scheme="https://Hong-King.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Hexo常用命令</title>
    <link href="https://hong-king.github.io/2020/07/14/Hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://hong-king.github.io/2020/07/14/Hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2020-07-14T00:19:04.000Z</published>
    <updated>2020-08-10T07:39:45.080Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用-进行本地预览"><a href="#使用-进行本地预览" class="headerlink" title="使用  进行本地预览"></a>使用 <hexo s> 进行本地预览</hexo></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><h2 id="使用-清除缓存文件和已生成的静态文件"><a href="#使用-清除缓存文件和已生成的静态文件" class="headerlink" title="使用  清除缓存文件和已生成的静态文件"></a>使用 <hexo clean> 清除缓存文件和已生成的静态文件</hexo></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean <span class="comment"># 清除缓存文件db.json 和已生成的静态文件public</span></span><br></pre></td></tr></table></figure><h2 id="使用-hexo-generate的简写形式-生成静态文件"><a href="#使用-hexo-generate的简写形式-生成静态文件" class="headerlink" title="使用  (hexo generate的简写形式)生成静态文件"></a>使用 <hexo g> (hexo generate的简写形式)生成静态文件</hexo></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g <span class="comment"># 是hexo generate的简写形式，生成静态文件到public文件夹</span></span><br></pre></td></tr></table></figure><h2 id="使用-hexo-deploy的简写形式-部署静态文件到设定的仓库"><a href="#使用-hexo-deploy的简写形式-部署静态文件到设定的仓库" class="headerlink" title="使用  (hexo deploy的简写形式)部署静态文件到设定的仓库"></a>使用 <hexo d> (hexo deploy的简写形式)部署静态文件到设定的仓库</hexo></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d <span class="comment"># 是hexo deploy的简写形式，部署静态文件到设定的仓库</span></span><br></pre></td></tr></table></figure><h2 id="使用-lt-hexo-clean-amp-amp-hexo-g-amp-amp-hexo-d-gt-进行一步操作"><a href="#使用-lt-hexo-clean-amp-amp-hexo-g-amp-amp-hexo-d-gt-进行一步操作" class="headerlink" title="使用 &lt;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d&gt; 进行一步操作"></a>使用 &lt;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d&gt; 进行一步操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d <span class="comment"># 常用的组合命令，清除缓存，生成静态文件，并部署到指定仓库</span></span><br></pre></td></tr></table></figure><h2 id="使用-lt-hexo-new-draft-“new-draft-File-Name-”-gt-创建草稿（私密文章）"><a href="#使用-lt-hexo-new-draft-“new-draft-File-Name-”-gt-创建草稿（私密文章）" class="headerlink" title="使用 &lt;hexo new draft “new draft(File Name)”&gt; 创建草稿（私密文章）"></a>使用 &lt;hexo new draft “new draft(File Name)”&gt; 创建草稿（私密文章）</h2><ul><li>输入创建草稿命令，系统会在source/_drafts目录下生成一个new-draft.md文件。但是这个文件不被显示在页面上，链接也访问不到。也就是说如果你想把某一篇文章移除显示，又不舍得删除，可以把它移动到_drafts目录之中。相当于很多博客都有的“私密文章”功能。 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new draft <span class="string">"new draft(File Name)"</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用-进行本地预览&quot;&gt;&lt;a href=&quot;#使用-进行本地预览&quot; class=&quot;headerlink&quot; title=&quot;使用  进行本地预览&quot;&gt;&lt;/a&gt;使用 &lt;hexo s&gt; 进行本地预览&lt;/hexo&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight bas
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Hexo" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://Hong-King.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>C++学习笔记</title>
    <link href="https://hong-king.github.io/2020/07/05/C++%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://hong-king.github.io/2020/07/05/C++%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-07-05T02:34:00.000Z</published>
    <updated>2020-07-14T00:07:25.815Z</updated>
    
    <content type="html"><![CDATA[<h3 id="关于使用get-和getline-函数将整行的字符串输入储存在数组的注意事项"><a href="#关于使用get-和getline-函数将整行的字符串输入储存在数组的注意事项" class="headerlink" title="关于使用get()和getline()函数将整行的字符串输入储存在数组的注意事项"></a>关于使用<em>get()</em>和<em>getline()</em>函数将<strong>整行的字符串输入</strong>储存在数组的注意事项</h3><ul><li><p>两者区别：两者都通过换行符来确定输入的结尾，不同之处在于，在到达换行符后，<strong>getline()将丢弃换行符，而get()将换行符保留在输入流中。</strong></p></li><li><p><em>getline(name,num)</em>函数读取整行，它使用通过回车键输入的换行符来确定输入结尾。name为存储输入行的数组名，num为要读取的字符数。getline()最多读取(num-1)个字符数，余下的空间用于储存’\0’字符。getline()成员函数在读取指定数目的字符或遇到换行符时停止读取。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    const int num = 10;</span><br><span class="line">    char a[num];</span><br><span class="line">    char b[num];</span><br><span class="line"></span><br><span class="line">    cout&lt;&lt;<span class="string">"your a's name is: \n"</span>;</span><br><span class="line">    cout&lt;&lt;<span class="string">"your b's name is: \n"</span>;</span><br><span class="line">    cin.getline(a,num);</span><br><span class="line">    cin.getline(b,num);</span><br><span class="line"><span class="comment">#   cin.getline(a,num).getline(b,num); 上面两行代码也可以用这行代码代替</span></span><br><span class="line">    cout&lt;&lt;<span class="string">"your a name is: "</span>&lt;&lt;a&lt;&lt;<span class="string">",your b name is: "</span>&lt;&lt;b;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>get(name,num)</em>函数有与会将换行符保留在输入流中，所以需要借助一些额外操作使程序正常运行。</p></li></ul><ol><li>使用不带任何参数的cin.get()的调用可读取下一个字符(即使是换行符)，为读取下一行做准备。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    const int num = 10;</span><br><span class="line">    char a[num];</span><br><span class="line">    char b[num];</span><br><span class="line"></span><br><span class="line">    cout&lt;&lt;<span class="string">"your a's name is: \n"</span>;</span><br><span class="line">    cin.get(a,num);</span><br><span class="line">    cin.get();</span><br><span class="line">    cout&lt;&lt;<span class="string">"your b's name is: \n"</span>;</span><br><span class="line">    cin.get(b,num);</span><br><span class="line">    cout&lt;&lt;<span class="string">"your a name is: "</span>&lt;&lt;a&lt;&lt;<span class="string">",your b name is: "</span>&lt;&lt;b;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>将两个类成员函数拼接起来<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    const int num = 10;</span><br><span class="line">    char a[num];</span><br><span class="line">    char b[num];</span><br><span class="line"></span><br><span class="line">    cout&lt;&lt;<span class="string">"your a's name is: \n"</span>;</span><br><span class="line">    cin.get(a,num).get();</span><br><span class="line">    cout&lt;&lt;<span class="string">"your b's name is: \n"</span>;</span><br><span class="line">    cin.get(b,num);</span><br><span class="line">    cout&lt;&lt;<span class="string">"your a name is: "</span>&lt;&lt;a&lt;&lt;<span class="string">",your b name is: "</span>&lt;&lt;b;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;关于使用get-和getline-函数将整行的字符串输入储存在数组的注意事项&quot;&gt;&lt;a href=&quot;#关于使用get-和getline-函数将整行的字符串输入储存在数组的注意事项&quot; class=&quot;headerlink&quot; title=&quot;关于使用get()和getlin
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C++ 基础语法" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/C-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
    
      <category term="C++" scheme="https://Hong-King.github.io/tags/C/"/>
    
  </entry>
  
</feed>
