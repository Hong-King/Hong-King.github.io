<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Welcome to Mr.l&#39;s World</title>
  
  <subtitle>海棠 花未眠/I miss you</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hong-king.github.io/"/>
  <updated>2021-06-05T14:06:04.667Z</updated>
  <id>https://hong-king.github.io/</id>
  
  <author>
    <name>Hong-King</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>你好，欢迎光临我的博客</title>
    <link href="https://hong-king.github.io/2021/06/05/%E4%BD%A0%E5%A5%BD%EF%BC%8C%E6%AC%A2%E8%BF%8E%E5%85%89%E4%B8%B4%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%81/"/>
    <id>https://hong-king.github.io/2021/06/05/%E4%BD%A0%E5%A5%BD%EF%BC%8C%E6%AC%A2%E8%BF%8E%E5%85%89%E4%B8%B4%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%81/</id>
    <published>2021-06-05T14:05:00.000Z</published>
    <updated>2021-06-05T14:06:04.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="这篇说明将更好地帮助你在-lt-Mr-l’s-World-gt-里畅游"><a href="#这篇说明将更好地帮助你在-lt-Mr-l’s-World-gt-里畅游" class="headerlink" title="这篇说明将更好地帮助你在&lt;Mr.l’s World&gt;里畅游"></a>这篇说明将更好地帮助你在&lt;<em>Mr.l’s World</em>&gt;里畅游</h2><blockquote><p><strong>博客使用简介</strong></p></blockquote><ol><li><p>博客界面<strong>左侧</strong>有<strong>侧边菜单</strong>为你提供快捷帮助<strong>&lt;<em>手机用户请点击屏幕左上角按钮以呼出菜单</em>&gt;</strong></p></li><li><p>博客界面<strong>右下角</strong>有<strong>暗夜模式按钮</strong>为你提供更好的浏览体验</p></li><li><p>博客同样为你提供<strong>文章查找</strong>功能，功能按钮在<strong>侧边菜单</strong>的下方</p></li><li><p>博客已开放<strong>评论留言系统</strong>，欢迎大家在评论区留下你的足迹</p></li><li><p><strong>《语言之美-古诗丽词》</strong>与<strong>《语言之美-新句美文》</strong>两篇文章将不定时持续更新，欢迎大家在评论区留下自己的珍藏，我也很乐意将其收录进文章里面</p></li><li><p><strong>光影画廊</strong>模块里展示了一些我个人的绘画作品，希望大家能够喜欢(^-^)</p></li><li><p>由于对留言系统提供支持的<strong>LeanCloud</strong>将定期对不绑定自由域名数据库进行清理，所以在2020年之后，您的留言数据将只会保留一段时间。对于您留言的流失，我感到很抱歉，也很遗憾。不过还是衷心感谢您愿意在我的留言区留下您的足迹。</p></li></ol><blockquote><p>技术支持</p></blockquote><ul><li><strong>Powered by</strong> <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a></li><li><strong>Theme:</strong> <a href="https://shen-yu.gitee.io/" target="_blank" rel="noopener">Ayer</a></li></ul><hr><p> (以下是博客更新日志，日志从2020/4/11开始记录，你<strong>可以点击</strong>&lt;阅读更多…&gt;来快速掌握博客更新动向，或者在<strong>文章概览</strong>里浏览最近更新的文章)</p><a id="more"></a><hr><blockquote><p><strong>博客更新日志</strong></p></blockquote><ul><li><strong>2021/6/5</strong></li></ul><ol><li>添加《ElGamal加密算法大数版本(Python实现)》</li></ol><p><strong>小结</strong>：添加一篇文章</p><hr><ul><li><strong>2021/6/4</strong></li></ul><ol><li>添加《RSA加密算法大数版本(Python实现)》</li></ol><p><strong>小结</strong>：添加一篇文章</p><hr><ul><li><strong>2021/5/25</strong></li></ul><ol><li>添加《利用欧拉函数求解高幂模的Python实现》</li></ol><p><strong>小结</strong>：添加一篇文章</p><hr><ul><li><strong>2021/4/20</strong></li></ul><ol><li>添加《DES加密算法的Python实现》</li></ol><p><strong>小结</strong>：添加一篇文章</p><hr><ul><li><strong>2021/4/10</strong></li></ul><ol><li>添加《希尔密码(Hill Cipher)的C++实现》</li></ol><p><strong>小结</strong>：添加一篇文章</p><hr><ul><li><strong>2021/2/4</strong></li></ul><ol><li>添加《元胞自动机在模拟森林野火的应用（Matlab实现）》</li></ol><p><strong>小结</strong>：添加一篇文章</p><hr><ul><li><strong>2021/2/2</strong></li></ul><ol><li>添加《遗传算法的Matlab实现》</li><li>添加《负指数分布的卡方检验（Matlab实现）》</li><li>添加《泊松分布的卡方检验（Matlab实现）》</li></ol><p><strong>小结</strong>：添加三篇文章</p><hr><ul><li><strong>2021/2/1</strong></li></ul><ol><li>更新《语言之美-新句美文》</li></ol><p><strong>小结</strong>：《语言之美-新句美文》添加一篇文章</p><hr><ul><li><strong>2021/1/30</strong></li></ul><ol><li>更新《语言之美-古诗丽词》</li></ol><p><strong>小结</strong>：《语言之美-古诗丽词》添加一篇文章</p><hr><ul><li><strong>2021/1/28</strong></li></ul><ol><li>更新《语言之美-新句美文》</li></ol><p><strong>小结</strong>：《语言之美-新句美文》添加一篇文章</p><hr><ul><li><strong>2021/1/26</strong></li></ul><ol><li>重新上线博客留言系统</li></ol><p><strong>小结</strong>：修复博客BUG</p><hr><ul><li><strong>2021/1/6</strong></li></ul><ol><li>更新《语言之美-新句美文》</li><li>更新《语言之美-古诗丽词》</li></ol><p><strong>小结</strong>：更新两篇文章</p><hr><ul><li><strong>2021/1/2</strong></li></ul><ol><li>大幅更新《语言之美-古诗丽词》</li><li>大幅更新《语言之美-新句美文》</li></ol><p><strong>小结</strong>：更新两篇文章</p><hr><ul><li><strong>2020/12/23</strong></li></ul><ol><li>《语言之美-古诗丽词》添加两篇诗</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/12/13</strong></li></ul><ol><li>《语言之美-古诗丽词》添加一篇诗</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/12/11</strong></li></ul><ol><li>修改文章《希尔密码(Hill Cipher)的Python实现》</li></ol><p><strong>小结</strong>：修改一篇文章</p><hr><ul><li><strong>2020/11/29</strong></li></ul><ol><li>修改文章《希尔密码(Hill Cipher)的Python实现》</li></ol><p><strong>小结</strong>：修改一篇文章</p><hr><ul><li><strong>2020/11/28</strong></li></ul><ol><li>添加文章《希尔密码(Hill Cipher)的Python实现》</li></ol><p><strong>小结</strong>：添加一篇文章</p><hr><ul><li><strong>2020/11/27</strong></li></ul><ol><li>修改文章《利用reshape重塑数》</li><li>添加文章《Python 从输入端读取多行数据》</li></ol><p><strong>小结</strong>：修改一篇文章，添加一篇文章</p><hr><ul><li><strong>2020/11/25</strong></li></ul><ol><li>修改文章《费诺(Fano)编码的Python实现》</li><li>添加文章《哈夫曼(Huffman)编码的Python实现》</li></ol><p><strong>小结</strong>：添加一篇文章,修改一篇文章</p><hr><ul><li><strong>2020/11/24</strong></li></ul><ol><li>修改文章《天平秤球问题的Python实现》</li><li>添加文章《香农(Shannon)编码的Python实现》</li><li>添加文章《费诺(Fano)编码的Python实现》</li></ol><p><strong>小结</strong>：添加两篇文章，修改一篇文章</p><hr><ul><li><strong>2020/11/18</strong></li></ul><ol><li>添加文章《天平秤球问题的Python实现》</li></ol><p><strong>小结</strong>：添加一篇文章</p><hr><ul><li><strong>2020/11/06</strong></li></ul><ol><li>《语言之美-古诗丽词》添加一篇诗</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/10/31</strong></li></ul><ol><li>《语言之美-古诗丽词》添加一篇诗</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/10/16</strong></li></ul><ol><li>添加文章《利用Python从文本中提取单词》</li></ol><p><strong>小结</strong>：添加一篇文章</p><hr><ul><li><strong>2020/10/13</strong></li></ul><ol><li>添加文章《解决C++从输入流读取所需个数的数据后，多余数据仍存在输入流中的问题》</li></ol><p><strong>小结</strong>：添加一篇文章</p><hr><ul><li><strong>2020/10/12</strong></li></ul><ol><li>添加文章《解决C++ ifstream 读取文件总多读一次问题》</li></ol><p><strong>小结</strong>：添加一篇文章</p><hr><ul><li><strong>2020/10/06</strong></li></ul><ol><li>《语言之美-古诗丽词》添加一篇诗</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/9/30</strong></li></ul><ol><li>《语言之美-古诗丽词》添加两篇词</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/9/26</strong></li></ul><ol><li>《语言之美-古诗丽词》添加词《一剪梅·舟过吴江》</li><li>修复无法评论BUG</li></ol><p><strong>小结</strong>：更新一篇文章；修复BUG</p><hr><ul><li><strong>2020/8/26</strong></li></ul><ol><li>更新文章《语言之美-新句美文》</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/8/19</strong></li></ul><ol><li>更新文章《语言之美-古诗丽词》</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/8/14</strong></li></ul><ol><li>添加文章《Python网络爬虫示例（有道词典）》</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/8/9</strong></li></ul><ol><li>添加文章《关于在Python中利用pandas读取与保存csv文件失败的解决方法(‘utf-8’编码格式不对)》</li><li>删除两篇低价值文章，合并一篇文章</li></ol><p><strong>小结</strong>：更新一篇文章，清理两篇文章</p><hr><ul><li><strong>2020/8/6</strong></li></ul><ol><li>更新文章《语言之美-古诗丽词》</li><li>添加文章《R语言dgCMatrix稀疏矩阵结构》</li><li>修复文章评论系统</li></ol><p><strong>小结</strong>：更新两篇文章，修复无法评论小BUG</p><hr><ul><li><strong>2020/7/21</strong></li></ul><ol><li>更新文章《R语言学习笔记》、《语言之美-古诗丽词》</li></ol><p><strong>小结</strong>：更新两篇文章</p><hr><ul><li><strong>2020/7/20</strong></li></ul><ol><li>更新文章《R语言学习笔记》</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/7/19</strong></li></ul><ol><li>更新文章《R语言学习笔记》</li></ol><p><strong>小结</strong>：更新一篇文章</p><hr><ul><li><strong>2020/7/5</strong></li></ul><ol><li>更新文章《Hexo进行本地预览》为《Hexo常用命令》</li><li>小幅修改博客导航文字</li></ol><p><strong>小结</strong>：更新一篇文章，小幅修改博客导航文字</p><hr><ul><li><strong>2020/7/5</strong></li></ul><ol><li>更新文章《R语言学习笔记》</li></ol><p><strong>小结</strong>：更新文章《R语言学习笔记》</p><hr><ul><li><strong>2020/7/5</strong></li></ul><ol><li>添加文章《C++学习笔记》</li></ol><p><strong>小结</strong>：添加文章《C++学习笔记》</p><hr><ul><li><strong>2020/7/4</strong></li></ul><ol><li>修复了博客<em>文章分类</em>模块无法显示的问题</li></ol><p><strong>小结</strong>：博客小BUG修复</p><hr><ul><li><strong>2020/7/2</strong></li></ul><ol><li>添加文章《R语言学习笔记》</li></ol><p><strong>小结</strong>：添加文章<strong>《R语言学习笔记》</strong></p><hr><ul><li><strong>2020/5/9</strong></li></ul><ol><li>更新文章《《python深度学习》笔记》</li><li>添加文章《Python中copy与deepcopy的区别》</li></ol><p><strong>小结</strong>：今日更新文章<strong>《《python深度学习》笔记》</strong>，添加文章<strong>《Python中copy与deepcopy的区别》</strong></p><hr><ul><li><strong>2020/5/8</strong></li></ul><ol><li>更新文章《《python深度学习》笔记》</li><li>优化《语言之美-古诗丽词》检索界面</li></ol><p><strong>小结</strong>：今日更新文章<strong>《《python深度学习》笔记》</strong>，优化<strong>《语言之美-古诗丽词》</strong>检索界面(2020/5/8 09:42 PV:460 UV:206)</p><hr><ul><li><strong>2020/5/7</strong></li></ul><ol><li>更新文章《《python深度学习》笔记》</li></ol><p><strong>小结</strong>：今日更新文章<strong>《《python深度学习》笔记》</strong>(2020/5/7 11:14 PV:460 UV:206)</p><hr><ul><li><strong>2020/5/6</strong></li></ul><ol><li>添加文章《《python深度学习》笔记》</li></ol><p><strong>小结</strong>：今日添加文章<strong>《《python深度学习》笔记》</strong>(2020/5/6 12:08 PV:456 UV:204)</p><hr><ul><li><strong>2020/4/30</strong></li></ul><ol><li>光影画廊模块上线</li><li>小幅更新文章《语言之美-古诗丽词》</li></ol><p><strong>小结</strong>：今日<strong>上线光影画廊模块</strong>,更新<strong>《语言之美-古诗丽词》</strong>(2020/4/30 20:39 PV:436 UV:188)</p><hr><ul><li><strong>2020/4/29</strong></li></ul><ol><li>小幅更新文章《语言之美-古诗丽词》与《语言之美-新句美文》</li><li>更改两处滚动标题</li></ol><p><strong>小结</strong>：今日<strong>更新两篇文章</strong>(2020/4/29 22:34 PV:430 UV:183)</p><hr><ul><li><strong>2020/4/23</strong></li></ul><ol><li>更新文章《利用tf.concat()与np.concatenate来拼接向量》</li></ol><p><strong>小结</strong>：今日<strong>更新一篇文章</strong>(2020/4/23 10:13 PV:411 UV:165)</p><hr><ul><li><strong>2020/4/22</strong></li></ul><ol><li>添加文章《利用reshape重塑numpy数组》，《利用tf.concat()与np.concatenate来拼接向量》</li></ol><p><strong>小结</strong>：今日<strong>添加两篇文章</strong>(2020/4/22 10:13 PV:399 UV:158)</p><hr><ul><li><strong>2020/4/20</strong></li></ul><ol><li>更新文章《语言之美-古诗丽词》</li></ol><p><strong>小结</strong>：今日<strong>大幅更新《语言之美-古诗丽词》并优化文章排版</strong>(2020/4/20 22:05 PV:390 UV:153)</p><hr><ul><li><strong>2020/4/16</strong></li></ul><ol><li>更新文章《《数据结构与算法》笔记(Python语言实现)》(2020/4/16 20:06 PV:385 UV:150)</li></ol><hr><ul><li><strong>2020/4/14</strong></li></ul><ol><li>更新文章《Pandas在Python语言下的基础使用》(2020/4/14 22:12 PV:376 UV:145)</li></ol><hr><ul><li><strong>2020/4/13</strong></li></ul><ol><li>更新文章《《Python机器学习基础教程》笔记(scikit-learn框架)》</li><li>更新文章《python画散点图[plt.scatter()]以及矩阵散点图[pd.scatter_matrix()]详解》（待优化）</li><li>暂时搁置文章《Pandas在Python语言下的基础使用》</li><li>暂时搁置文章《《数据结构与算法》笔记(Python语言实现)》</li></ol><p><strong>小结</strong>：今日更新主要<strong>优化文章排版</strong>，<strong>更新两篇文章</strong>(2020/4/13 22:05 PV:374 UV:143)</p><hr><ul><li><strong>2020/4/11</strong></li></ul><ol><li>博客现在已经<strong>能够在文章中插入图片</strong>，但<strong>光影画廊仍然无法在云端显示图片</strong></li><li>博客现在已开放<strong>评论留言系统</strong>，并能够<strong>置顶文章</strong></li></ol><p><strong>小结</strong>：今天<strong>无文章更新</strong>，主要是<strong>完善博客功能</strong>(2020/4/11 22:39 PV:354 UV:138)</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;这篇说明将更好地帮助你在-lt-Mr-l’s-World-gt-里畅游&quot;&gt;&lt;a href=&quot;#这篇说明将更好地帮助你在-lt-Mr-l’s-World-gt-里畅游&quot; class=&quot;headerlink&quot; title=&quot;这篇说明将更好地帮助你在&amp;lt;Mr.l’s World&amp;gt;里畅游&quot;&gt;&lt;/a&gt;这篇说明将更好地帮助你在&amp;lt;&lt;em&gt;Mr.l’s World&lt;/em&gt;&amp;gt;里畅游&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;博客使用简介&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;博客界面&lt;strong&gt;左侧&lt;/strong&gt;有&lt;strong&gt;侧边菜单&lt;/strong&gt;为你提供快捷帮助&lt;strong&gt;&amp;lt;&lt;em&gt;手机用户请点击屏幕左上角按钮以呼出菜单&lt;/em&gt;&amp;gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;博客界面&lt;strong&gt;右下角&lt;/strong&gt;有&lt;strong&gt;暗夜模式按钮&lt;/strong&gt;为你提供更好的浏览体验&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;博客同样为你提供&lt;strong&gt;文章查找&lt;/strong&gt;功能，功能按钮在&lt;strong&gt;侧边菜单&lt;/strong&gt;的下方&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;博客已开放&lt;strong&gt;评论留言系统&lt;/strong&gt;，欢迎大家在评论区留下你的足迹&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;《语言之美-古诗丽词》&lt;/strong&gt;与&lt;strong&gt;《语言之美-新句美文》&lt;/strong&gt;两篇文章将不定时持续更新，欢迎大家在评论区留下自己的珍藏，我也很乐意将其收录进文章里面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;光影画廊&lt;/strong&gt;模块里展示了一些我个人的绘画作品，希望大家能够喜欢(^-^)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由于对留言系统提供支持的&lt;strong&gt;LeanCloud&lt;/strong&gt;将定期对不绑定自由域名数据库进行清理，所以在2020年之后，您的留言数据将只会保留一段时间。对于您留言的流失，我感到很抱歉，也很遗憾。不过还是衷心感谢您愿意在我的留言区留下您的足迹。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;技术支持&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Powered by&lt;/strong&gt; &lt;a href=&quot;https://hexo.io/zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Theme:&lt;/strong&gt; &lt;a href=&quot;https://shen-yu.gitee.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ayer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt; (以下是博客更新日志，日志从2020/4/11开始记录，你&lt;strong&gt;可以点击&lt;/strong&gt;&amp;lt;阅读更多…&amp;gt;来快速掌握博客更新动向，或者在&lt;strong&gt;文章概览&lt;/strong&gt;里浏览最近更新的文章)&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ElGamal加密算法大数版本(Python实现)</title>
    <link href="https://hong-king.github.io/2021/06/05/ElGamal%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%A4%A7%E6%95%B0%E7%89%88%E6%9C%AC(Python%E5%AE%9E%E7%8E%B0)/"/>
    <id>https://hong-king.github.io/2021/06/05/ElGamal%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%A4%A7%E6%95%B0%E7%89%88%E6%9C%AC(Python%E5%AE%9E%E7%8E%B0)/</id>
    <published>2021-06-05T14:04:00.000Z</published>
    <updated>2021-06-05T14:32:15.685Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>程序说明<br>ElGamal加密算法<br>Reference books: 《现代密码学（第二版）》<br>Reference books: <a href="https://blog.csdn.net/qq_41491942/article/details/103200388" target="_blank" rel="noopener">https://blog.csdn.net/qq_41491942/article/details/103200388</a><br>Reference books: <a href="https://www.cnblogs.com/mx-lqk/p/10315789.html" target="_blank" rel="noopener">https://www.cnblogs.com/mx-lqk/p/10315789.html</a><br>Completion time：2021-6-5<br>Last modification time ：2021-6-5</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line">import secrets</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"************程序功能************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"ElGamal加密算法"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"********************************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: 《现代密码学（第二版）》"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: https://blog.csdn.net/qq_41491942/article/details/103200388"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: https://www.cnblogs.com/mx-lqk/p/10315789.html"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Completion time：2021-6-5"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Last modification time ：2021-6-5"</span>,<span class="string">'\n'</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"********************博客网址********************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"欢迎访问：https://hong-king.github.io/"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"************************************************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"--------------------------------------------------------"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#高幂模</span></span><br><span class="line">def gaomimo(a,b,P):</span><br><span class="line">    c = 1</span><br><span class="line">    <span class="keyword">if</span> (b == 0):</span><br><span class="line">        <span class="built_in">return</span> (c)</span><br><span class="line">    <span class="keyword">while</span>(1):</span><br><span class="line">        <span class="keyword">if</span> (b%2 != 0):</span><br><span class="line">            b = b-1</span><br><span class="line">            c = (c*a) % P</span><br><span class="line">            <span class="keyword">if</span> (b == 0):</span><br><span class="line">                <span class="built_in">return</span> (c)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            b = b//2</span><br><span class="line">            a = (a*a) % P</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment">#米勒-拉宾素性检验</span></span><br><span class="line">def judge_sushu(P):</span><br><span class="line">    <span class="keyword">if</span> (P==2 or P==3):</span><br><span class="line">        <span class="built_in">return</span> (1)</span><br><span class="line"></span><br><span class="line">    s = 1</span><br><span class="line">    <span class="keyword">while</span>(1):</span><br><span class="line">        <span class="keyword">if</span>((P-1)%(2**s) == 0):</span><br><span class="line">            s = s+1</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            s = s-1</span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">    m = (P-1)//(2**s)</span><br><span class="line"></span><br><span class="line">    judge = 0</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> range(1,(P-1),int((P-1)/10)):</span><br><span class="line">        r = 0</span><br><span class="line">        z = gaomimo(b,m,P)</span><br><span class="line">        <span class="keyword">if</span>(z == 1 or z == P-1):</span><br><span class="line">            judge = judge + 1</span><br><span class="line">            <span class="built_in">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">while</span>(1):</span><br><span class="line">                <span class="keyword">if</span> (r == s-1):</span><br><span class="line">                    <span class="built_in">return</span>(0)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    r = r+1</span><br><span class="line">                    z = gaomimo(z,2,P)</span><br><span class="line">                    <span class="keyword">if</span>(z == P-1):</span><br><span class="line">                        <span class="built_in">continue</span></span><br><span class="line">    <span class="built_in">return</span>(1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成大素数p</span></span><br><span class="line">q = secrets.randbelow(2**256)</span><br><span class="line"><span class="keyword">if</span> (q%2 == 0):</span><br><span class="line">        q = q+1</span><br><span class="line"><span class="keyword">while</span>(judge_sushu(q) == 0):</span><br><span class="line">                q = q+2</span><br><span class="line">p = 2*q+1</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"生成大素数p中......"</span>)</span><br><span class="line"><span class="keyword">while</span>(judge_sushu(p) == 0):</span><br><span class="line">        q = q+2</span><br><span class="line">        <span class="keyword">while</span>(judge_sushu(q) == 0):</span><br><span class="line">                q = q+2</span><br><span class="line">        p = 2*q+1</span><br><span class="line"></span><br><span class="line"><span class="comment">#p = 2579</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#生成本原元g</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"生成本原元g中......"</span>)</span><br><span class="line">oula = p-1</span><br><span class="line">g = 0</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(secrets.randbelow(2**64),p):</span><br><span class="line">        g = i</span><br><span class="line">        <span class="keyword">if</span> (gaomimo(g,1,p) == 1):</span><br><span class="line">                <span class="built_in">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> (gaomimo(g,2,p) == 1):</span><br><span class="line">                        <span class="built_in">continue</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                        <span class="keyword">if</span> (gaomimo(g,q,p) == 1):</span><br><span class="line">                                <span class="built_in">continue</span></span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                                <span class="keyword">if</span> (gaomimo(g,oula,p) == 1):</span><br><span class="line">                                        <span class="built_in">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#g = 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#生成公钥y及私钥x</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"生成公钥y及私钥x中......"</span>)</span><br><span class="line">x = secrets.randbelow(2**256)</span><br><span class="line"><span class="keyword">while</span> (not( 1&lt;x and x&lt;(p-2) )):</span><br><span class="line">        x = secrets.randbelow(2**256)</span><br><span class="line">y = gaomimo(g,x,p)</span><br><span class="line"></span><br><span class="line"><span class="comment">#x = 765</span></span><br><span class="line"><span class="comment">#y = 949</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#加密密文</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"加密中......"</span>)</span><br><span class="line">M = 1299  <span class="comment">#明文M</span></span><br><span class="line"></span><br><span class="line">k = secrets.randbelow(2**256)</span><br><span class="line"><span class="keyword">while</span> (not( 1&lt;k and k&lt;(p-2) ) or k==2 or k==q):</span><br><span class="line">        k = secrets.randbelow(2**256)</span><br><span class="line"></span><br><span class="line"><span class="comment">#k = 853</span></span><br><span class="line">y1 = gaomimo(g,k,p)</span><br><span class="line">U = gaomimo(y,k,p)</span><br><span class="line">y2 = gaomimo(U*M,1,p)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"密文:("</span>,y1,<span class="string">","</span>,y2,<span class="string">")"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#解密</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"解密中......"</span>)</span><br><span class="line">V =  gaomimo(y1,x,p)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(y2%V != 0):    <span class="comment">#用于修正参数，防止无法正确得到明文</span></span><br><span class="line">        y2 = y2 + p</span><br><span class="line">M = gaomimo(y2//V,1,p)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"明文为:"</span>,M)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"私钥x为:"</span>,x)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"公钥:"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"p:"</span>,p)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"g:"</span>,g)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"y:"</span>,y)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;程序说明&lt;br&gt;ElGamal加密算法&lt;br&gt;Reference books: 《现代密码学（第二版）》&lt;br&gt;Reference books: &lt;a href=&quot;https://blog.csdn.net/qq_41491942/article/
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>RSA加密算法大数版本(Python实现)</title>
    <link href="https://hong-king.github.io/2021/06/04/RSA%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%A4%A7%E6%95%B0%E7%89%88%E6%9C%AC(Python%E5%AE%9E%E7%8E%B0)/"/>
    <id>https://hong-king.github.io/2021/06/04/RSA%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%A4%A7%E6%95%B0%E7%89%88%E6%9C%AC(Python%E5%AE%9E%E7%8E%B0)/</id>
    <published>2021-06-04T12:50:00.000Z</published>
    <updated>2021-06-04T12:51:57.998Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>程序说明<br>Reference books: 《现代密码学（第二版）》<br>Reference books: <a href="https://blog.csdn.net/jijianshuai/article/details/80582187" target="_blank" rel="noopener">https://blog.csdn.net/jijianshuai/article/details/80582187</a><br>Reference books: <a href="https://baike.baidu.com/item/RSA%E7%AE%97%E6%B3%95/263310?fromtitle=RSA&amp;fromid=210678&amp;fr=aladdin#reference-[5]-10613-wrap" target="_blank" rel="noopener">https://baike.baidu.com/item/RSA%E7%AE%97%E6%B3%95/263310?fromtitle=RSA&amp;fromid=210678&amp;fr=aladdin#reference-[5]-10613-wrap</a><br>Completion time：2021-6-4<br>Last modification time ：2021-6-4</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line">import secrets</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"************程序功能************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"求RSA加密算法"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"********************************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: 《现代密码学（第二版）》"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: https://blog.csdn.net/jijianshuai/article/details/80582187"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: https://baike.baidu.com/item/RSA%E7%AE%97%E6%B3%95/263310?fromtitle=RSA&amp;fromid=210678&amp;fr=aladdin#reference-[5]-10613-wrap"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Completion time：2021-6-4"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Last modification time ：2021-6-4"</span>,<span class="string">'\n'</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"********************博客网址********************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"欢迎访问：https://hong-king.github.io/"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"************************************************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"--------------------------------------------------------"</span>)</span><br><span class="line"></span><br><span class="line">P = secrets.randbelow(2**1024)</span><br><span class="line"><span class="keyword">if</span> (P%2 == 0):</span><br><span class="line">        P = P+1</span><br><span class="line">Q = secrets.randbelow(2**1024)</span><br><span class="line"><span class="keyword">if</span> (Q%2 == 0):</span><br><span class="line">        Q = Q+1</span><br><span class="line"></span><br><span class="line"><span class="comment">#求模逆</span></span><br><span class="line">def moni(X,Y):</span><br><span class="line">    <span class="comment">#第1步</span></span><br><span class="line">    n1 = Y</span><br><span class="line">    n2 = X</span><br><span class="line">    b1 = 0</span><br><span class="line">    b2 = 1</span><br><span class="line"></span><br><span class="line">    <span class="comment">#第2步</span></span><br><span class="line">    q = n1//n2   <span class="comment">#注意用//表示整数除法</span></span><br><span class="line">    r = n1-q*n2</span><br><span class="line"></span><br><span class="line">    <span class="comment">#第3步</span></span><br><span class="line">    <span class="keyword">while</span> (r != 0):</span><br><span class="line">        n1 = n2</span><br><span class="line">        n2 = r</span><br><span class="line">        t = b2</span><br><span class="line">        b2 = b1-q*b2</span><br><span class="line">        b1 = t</span><br><span class="line"></span><br><span class="line">        q = n1//n2</span><br><span class="line">        r = n1-q*n2</span><br><span class="line"></span><br><span class="line">    <span class="comment">#第4步</span></span><br><span class="line">    ans = b2 % Y</span><br><span class="line">    <span class="keyword">if</span> (n2 == 1):</span><br><span class="line">        <span class="built_in">return</span> (ans)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">return</span> (0)</span><br><span class="line">        </span><br><span class="line"><span class="comment">#高幂模</span></span><br><span class="line">def gaomimo(a,b,P):</span><br><span class="line">    c = 1</span><br><span class="line">    <span class="keyword">if</span> (b == 0):</span><br><span class="line">        <span class="built_in">return</span> (c)</span><br><span class="line">    <span class="keyword">while</span>(1):</span><br><span class="line">        <span class="keyword">if</span> (b%2 != 0):</span><br><span class="line">            b = b-1</span><br><span class="line">            c = (c*a) % P</span><br><span class="line">            <span class="keyword">if</span> (b == 0):</span><br><span class="line">                <span class="built_in">return</span> (c)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            b = b//2</span><br><span class="line">            a = (a*a) % P</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment">#米勒-拉宾素性检验</span></span><br><span class="line">def judge_sushu(P):</span><br><span class="line">    <span class="keyword">if</span> (P==2 or P==3):</span><br><span class="line">        <span class="built_in">return</span> (1)</span><br><span class="line"></span><br><span class="line">    s = 1</span><br><span class="line">    <span class="keyword">while</span>(1):</span><br><span class="line">        <span class="keyword">if</span>((P-1)%(2**s) == 0):</span><br><span class="line">            s = s+1</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            s = s-1</span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">    m = (P-1)//(2**s)</span><br><span class="line"></span><br><span class="line">    judge = 0</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> range(1,(P-1),int((P-1)/10)):</span><br><span class="line">        r = 0</span><br><span class="line">        z = gaomimo(b,m,P)</span><br><span class="line">        <span class="keyword">if</span>(z == 1 or z == P-1):</span><br><span class="line">            judge = judge + 1</span><br><span class="line">            <span class="built_in">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">while</span>(1):</span><br><span class="line">                <span class="keyword">if</span> (r == s-1):</span><br><span class="line">                    <span class="built_in">return</span>(0)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    r = r+1</span><br><span class="line">                    z = gaomimo(z,2,P)</span><br><span class="line">                    <span class="keyword">if</span>(z == P-1):</span><br><span class="line">                        <span class="built_in">continue</span></span><br><span class="line">    <span class="built_in">return</span>(1)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"生成大素数中......"</span>)</span><br><span class="line"><span class="keyword">while</span>(judge_sushu(P) == 0):</span><br><span class="line">    P = P+2</span><br><span class="line"><span class="keyword">while</span>(judge_sushu(Q) == 0):</span><br><span class="line">    Q = Q+2</span><br><span class="line"><span class="comment">#print(P,"\n",Q)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#计算公共模数</span></span><br><span class="line">N = P * Q</span><br><span class="line"></span><br><span class="line"><span class="comment">#欧拉函数</span></span><br><span class="line">oula = (P-1)*(Q-1)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"分配公钥及私钥中......"</span>)</span><br><span class="line"><span class="comment">#计算公钥E</span></span><br><span class="line">E = min(P,Q)</span><br><span class="line"></span><br><span class="line">D = 0</span><br><span class="line"><span class="keyword">while</span>(D == 0):</span><br><span class="line">    E = E - 2</span><br><span class="line">    <span class="keyword">while</span>(judge_sushu(E) == 0):</span><br><span class="line">        E = E-2</span><br><span class="line"></span><br><span class="line">    <span class="comment">#计算私钥D</span></span><br><span class="line">    D = moni(E,oula)</span><br><span class="line"><span class="comment">#print(D)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"加密中......"</span>)</span><br><span class="line"><span class="comment">#公钥加密</span></span><br><span class="line">M = 2</span><br><span class="line">C = gaomimo(M,E,N)</span><br><span class="line"></span><br><span class="line"><span class="comment">#私钥加密</span></span><br><span class="line">M = gaomimo(C,D,N)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"初始明文为：2"</span>,<span class="string">'\n'</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"公钥为："</span>,E,<span class="string">'\n'</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"私钥为："</span>,D,<span class="string">'\n'</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"公共模数为："</span>,N,<span class="string">'\n'</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"密文为："</span>,C)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;程序说明&lt;br&gt;Reference books: 《现代密码学（第二版）》&lt;br&gt;Reference books: &lt;a href=&quot;https://blog.csdn.net/jijianshuai/article/details/8058218
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>语言之美-古诗丽词</title>
    <link href="https://hong-king.github.io/2021/05/26/%E8%AF%AD%E8%A8%80%E4%B9%8B%E7%BE%8E-%E5%8F%A4%E8%AF%97%E4%B8%BD%E8%AF%8D/"/>
    <id>https://hong-king.github.io/2021/05/26/%E8%AF%AD%E8%A8%80%E4%B9%8B%E7%BE%8E-%E5%8F%A4%E8%AF%97%E4%B8%BD%E8%AF%8D/</id>
    <published>2021-05-26T14:24:00.000Z</published>
    <updated>2021-05-26T14:24:32.291Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2021上半年收录"><a href="#2021上半年收录" class="headerlink" title="2021上半年收录"></a>2021上半年收录</h1><h3 id="《酹江月·驿中言别》-南宋-文天祥"><a href="#《酹江月·驿中言别》-南宋-文天祥" class="headerlink" title="《酹江月·驿中言别》-[南宋] 文天祥"></a>《酹江月·驿中言别》-[南宋] 文天祥</h3><blockquote><p><strong>水天空阔，恨东风不惜世间英物。蜀鸟吴花残照里，忍见荒城颓壁。铜雀春情，金人秋泪，此恨凭谁雪？堂堂剑气，斗牛空认奇杰。<br>那信江海余生，南行万里，属扁舟齐发。正为鸥盟留醉眼，细看涛生云灭。睨柱吞嬴，回旗走懿，千古冲冠发。伴人无寐，秦淮应是孤月。</strong></p></blockquote><hr><h3 id="《雨霖铃·寒蝉凄切》-宋-柳永"><a href="#《雨霖铃·寒蝉凄切》-宋-柳永" class="headerlink" title="《雨霖铃·寒蝉凄切》-[宋] 柳永"></a>《雨霖铃·寒蝉凄切》-[宋] 柳永</h3><blockquote><p><strong>寒蝉凄切，对长亭晚，骤雨初歇。<br>都门帐饮无绪，留恋处，兰舟催发。<br>执手相看泪眼，竟无语凝噎。<br>念去去，千里烟波，暮霭沉沉楚天阔。<br>多情自古伤离别，更那堪，冷落清秋节！<br>今宵酒醒何处？杨柳岸，晓风残月。<br>此去经年，应是良辰好景虚设。<br>便纵有千种风情，更与何人说？</strong></p></blockquote><hr><h3 id="《葬花吟》-清-曹雪芹"><a href="#《葬花吟》-清-曹雪芹" class="headerlink" title="《葬花吟》-[清] 曹雪芹"></a>《葬花吟》-[清] 曹雪芹</h3><ul><li><p><strong>花谢花飞花满天，红消香断有谁怜？</strong></p></li><li><p><strong>满纸荒唐言 一把辛酸泪 都云作者痴 谁解其中味</strong></p></li></ul><a id="more"></a><hr><h3 id="《赠别二首》-唐-杜牧"><a href="#《赠别二首》-唐-杜牧" class="headerlink" title="《赠别二首》-[唐] 杜牧"></a>《赠别二首》-[唐] 杜牧</h3><blockquote><p><strong>娉娉袅袅十三余，豆蔻梢头二月初。<br>春风十里扬州路，卷上珠帘总不如。</strong></p></blockquote><hr><h3 id="《卜算子·赠妓》-宋-谢直"><a href="#《卜算子·赠妓》-宋-谢直" class="headerlink" title="《卜算子·赠妓》-[宋] 谢直"></a>《卜算子·赠妓》-[宋] 谢直</h3><blockquote><p><strong>双桨浪花平，夹岸青山锁。你自归家我自归，说着如何过。<br>我断不思量，你莫思量我。将你从前与我心，付与他人可。</strong></p></blockquote><hr><h3 id="《一剪梅》-宋-李清照"><a href="#《一剪梅》-宋-李清照" class="headerlink" title="《一剪梅》-[宋] 李清照"></a>《一剪梅》-[宋] 李清照</h3><blockquote><p><strong>红藕香残玉簟秋，轻解罗裳，独上兰舟。云中谁寄锦书来？雁字回时，月满西楼。<br>花自飘零水自流，一种相思，两处闲愁。此情无计可消除，才下眉头，却上心头。</strong></p></blockquote><hr><h3 id="《玉楼春·别后不知君远近》-宋-欧阳修"><a href="#《玉楼春·别后不知君远近》-宋-欧阳修" class="headerlink" title="《玉楼春·别后不知君远近》-[宋] 欧阳修"></a>《玉楼春·别后不知君远近》-[宋] 欧阳修</h3><blockquote><p><strong>别后不知君远近。触目凄凉多少闷。渐行渐远渐无书，水阔鱼沉何处问。<br>夜深风竹敲秋韵。万叶千声皆是恨。故欹单枕梦中寻，梦又不成灯又烬。</strong></p></blockquote><hr><h3 id="《水龙吟·次韵章质夫杨花词》-宋-苏轼"><a href="#《水龙吟·次韵章质夫杨花词》-宋-苏轼" class="headerlink" title="《水龙吟·次韵章质夫杨花词》-[宋] 苏轼"></a>《水龙吟·次韵章质夫杨花词》-[宋] 苏轼</h3><blockquote><p><strong>似花还似非花，也无人惜从教坠。抛家傍路，思量却是，无情有思。萦损柔肠，困酣娇眼，欲开还闭。梦随风万里，寻郎去处，又还被莺呼起。<br>不恨此花飞尽，恨西园，落红难缀。晓来雨过，遗踪何在？一池萍碎。春色三分，二分尘土，一分流水。细看来，不是杨花点点，是离人泪。</strong></p></blockquote><hr><h3 id="《送李副使赴碛西官军》-唐-岑参"><a href="#《送李副使赴碛西官军》-唐-岑参" class="headerlink" title="《送李副使赴碛西官军》-[唐] 岑参"></a>《送李副使赴碛西官军》-[唐] 岑参</h3><blockquote><p><strong>火山六月应更热，赤亭道口行人绝。<br>知君惯度祁连城，岂能愁见轮台月。<br>脱鞍暂入酒家垆，送君万里西击胡。<br>功名只向马上取，真是英雄一丈夫。</strong></p></blockquote><hr><h3 id="《不第后赋菊》-唐-黄巢"><a href="#《不第后赋菊》-唐-黄巢" class="headerlink" title="《不第后赋菊》-[唐] 黄巢"></a>《不第后赋菊》-[唐] 黄巢</h3><blockquote><p><strong>待到秋来九月八，我花开后百花杀。<br>冲天香阵透长安，满城尽带黄金甲。</strong></p></blockquote><hr><h3 id="《长相思·山一程》-清-纳兰性德"><a href="#《长相思·山一程》-清-纳兰性德" class="headerlink" title="《长相思·山一程》-[清] 纳兰性德"></a>《长相思·山一程》-[清] 纳兰性德</h3><blockquote><p><strong>山一程，水一程，身向榆关那畔行，夜深千帐灯。<br>风一更，雪一更，聒碎乡心梦不成，故园无此声。</strong></p></blockquote><hr><h3 id="《临江仙·寒柳》-清-纳兰性德"><a href="#《临江仙·寒柳》-清-纳兰性德" class="headerlink" title="《临江仙·寒柳》-[清] 纳兰性德"></a>《临江仙·寒柳》-[清] 纳兰性德</h3><blockquote><p><strong>飞絮飞花何处是，层冰积雪摧残，疏疏一树五更寒。爱他明月好，憔悴也相关。<br>最是繁丝摇落后，转教人忆春山。湔裙梦断续应难。西风多少恨，吹不散眉弯。</strong></p></blockquote><hr><h3 id="《钗头凤·世情薄》-宋-唐婉"><a href="#《钗头凤·世情薄》-宋-唐婉" class="headerlink" title="《钗头凤·世情薄》-[宋] 唐婉"></a>《钗头凤·世情薄》-[宋] 唐婉</h3><blockquote><p><strong>世情薄，人情恶，雨送黄昏花易落。晓风干，泪痕残。欲笺心事，独语斜阑。难，难，难！<br>人成各，今非昨，病魂常似秋千索。角声寒，夜阑珊。怕人寻问，咽泪装欢。瞒，瞒，瞒！</strong></p></blockquote><hr><h3 id="《浣溪沙·谁念西风独自凉》-清-纳兰性德"><a href="#《浣溪沙·谁念西风独自凉》-清-纳兰性德" class="headerlink" title="《浣溪沙·谁念西风独自凉》-[清] 纳兰性德"></a>《浣溪沙·谁念西风独自凉》-[清] 纳兰性德</h3><blockquote><p><strong>谁念西风独自凉？<br>萧萧黄叶闭疏窗。<br>沉思往事立残阳。<br>被酒莫惊春睡重，赌书消得泼茶香。<br>当时只道是寻常。</strong></p></blockquote><hr><h3 id="《唐多令·芦叶满汀洲》-宋-刘过"><a href="#《唐多令·芦叶满汀洲》-宋-刘过" class="headerlink" title="《唐多令·芦叶满汀洲》-[宋] 刘过"></a>《唐多令·芦叶满汀洲》-[宋] 刘过</h3><blockquote><p><strong>芦叶满汀洲，寒沙带浅流。二十年重过南楼。柳下系船犹未稳，能几日，又中秋。<br>黄鹤断矶头，故人今在否？旧江山浑是新愁。欲买桂花同载酒，终不似，少年游。</strong></p></blockquote><!--more--><hr><h1 id="2020下半年收录"><a href="#2020下半年收录" class="headerlink" title="2020下半年收录"></a>2020下半年收录</h1><h3 id="《国风·豳风·七月》-先秦-佚名"><a href="#《国风·豳风·七月》-先秦-佚名" class="headerlink" title="《国风·豳风·七月》-[先秦] 佚名"></a>《国风·豳风·七月》-[先秦] 佚名</h3><blockquote><p><strong>七月在野，八月在宇，九月在户，十月蟋蟀入我床下。</strong></p></blockquote><hr><h3 id="《题龙阳县青草湖》-元-唐珙"><a href="#《题龙阳县青草湖》-元-唐珙" class="headerlink" title="《题龙阳县青草湖》-[元] 唐珙"></a>《题龙阳县青草湖》-[元] 唐珙</h3><blockquote><p><strong>西风吹老洞庭波，一夜湘君白发多。<br>醉后不知天在水，满船清梦压星河。</strong></p></blockquote><hr><h3 id="《采桑子·谁翻乐府凄凉曲》-清-纳兰性德"><a href="#《采桑子·谁翻乐府凄凉曲》-清-纳兰性德" class="headerlink" title="《采桑子·谁翻乐府凄凉曲》-[清] 纳兰性德"></a>《采桑子·谁翻乐府凄凉曲》-[清] 纳兰性德</h3><blockquote><p><strong>谁翻乐府凄凉曲？风也萧萧，雨也萧萧，瘦尽灯花又一宵。<br>不知何事萦怀抱？醒也无聊，醉也无聊，梦也何曾到谢桥。</strong></p></blockquote><hr><h3 id="《杂诗三首·其二》-唐-王维"><a href="#《杂诗三首·其二》-唐-王维" class="headerlink" title="《杂诗三首·其二》-[唐] 王维"></a>《杂诗三首·其二》-[唐] 王维</h3><blockquote><p><strong>君自故乡来，应知故乡事。<br>来日绮窗前，寒梅著花未？</strong></p></blockquote><hr><h3 id="《相思》-唐-王维"><a href="#《相思》-唐-王维" class="headerlink" title="《相思》-[唐] 王维"></a>《相思》-[唐] 王维</h3><blockquote><p><strong>红豆生南国，春来发几枝。<br>愿君多采撷，此物最相思。</strong></p></blockquote><hr><h3 id="《自遣》-唐-罗隐"><a href="#《自遣》-唐-罗隐" class="headerlink" title="《自遣》-[唐] 罗隐"></a>《自遣》-[唐] 罗隐</h3><blockquote><p><strong>得即高歌失即休，多愁多恨亦悠悠。<br>今朝有酒今朝醉，明日愁来明日愁。</strong></p></blockquote><hr><h3 id="《妒花》-明-唐寅"><a href="#《妒花》-明-唐寅" class="headerlink" title="《妒花》-[明] 唐寅"></a>《妒花》-[明] 唐寅</h3><blockquote><p><strong>昨夜海棠初着雨，<br>数点轻盈娇欲语。<br>佳人晓起出兰房，<br>折来对镜化红妆。<br>问郎花好奴颜好？<br>郎道不如花窈窕。<br>佳人闻语发娇嗔，<br>不信死花胜活人。<br>将花揉碎掷郎前：<br>请郎今日伴花眠！</strong></p></blockquote><hr><h3 id="《近试上张籍水部-近试上张水部-闺意献张水部》-唐-朱庆馀"><a href="#《近试上张籍水部-近试上张水部-闺意献张水部》-唐-朱庆馀" class="headerlink" title="《近试上张籍水部 / 近试上张水部 / 闺意献张水部》-[唐] 朱庆馀"></a>《近试上张籍水部 / 近试上张水部 / 闺意献张水部》-[唐] 朱庆馀</h3><blockquote><p><strong>洞房昨夜停红烛，待晓堂前拜舅姑。<br>妆罢低声问夫婿，画眉深浅入时无。</strong></p></blockquote><hr><h3 id="《一剪梅·舟过吴江》-宋-蒋捷"><a href="#《一剪梅·舟过吴江》-宋-蒋捷" class="headerlink" title="《一剪梅·舟过吴江》-[宋] 蒋捷"></a>《一剪梅·舟过吴江》-[宋] 蒋捷</h3><blockquote><p><strong>一片春愁待酒浇。江上舟摇，楼上帘招。秋娘渡与泰娘桥，风又飘飘，雨又萧萧。<br>何日归家洗客袍？银字笙调，心字香烧。流光容易把人抛，红了樱桃，绿了芭蕉。</strong></p></blockquote><hr><h3 id="《宣州谢朓楼饯别校书叔云》-唐-李白"><a href="#《宣州谢朓楼饯别校书叔云》-唐-李白" class="headerlink" title="《宣州谢朓楼饯别校书叔云》-[唐] 李白"></a>《宣州谢朓楼饯别校书叔云》-[唐] 李白</h3><blockquote><p><strong>弃我去者，昨日之日不可留；<br>乱我心者，今日之日多烦忧。<br>长风万里送秋雁，对此可以酣高楼。<br>蓬莱文章建安骨，中间小谢又清发。<br>俱怀逸兴壮思飞，欲上青天览明月。<br>抽刀断水水更流，举杯消愁愁更愁。<br>人生在世不称意，明朝散发弄扁舟。</strong></p></blockquote><hr><h3 id="《卜算子·我住长江头》-宋-李之仪"><a href="#《卜算子·我住长江头》-宋-李之仪" class="headerlink" title="《卜算子·我住长江头》-[宋] 李之仪"></a>《卜算子·我住长江头》-[宋] 李之仪</h3><blockquote><p><strong>我住长江头，君住长江尾。日日思君不见君，共饮长江水。<br>此水几时休，此恨何时已。只愿君心似我心，定不负相思意。</strong></p></blockquote><hr><h3 id="《清平乐·春归何处》-宋-黄庭坚"><a href="#《清平乐·春归何处》-宋-黄庭坚" class="headerlink" title="《清平乐·春归何处》-[宋] 黄庭坚"></a>《清平乐·春归何处》-[宋] 黄庭坚</h3><blockquote><p><strong>春归何处。寂寞无行路。若有人知春去处。换取归来同住。<br>春无踪迹谁知。除非问取黄鹂。百啭无人能解，因风飞过蔷薇。</strong></p></blockquote><hr><h1 id="2020上半年收录"><a href="#2020上半年收录" class="headerlink" title="2020上半年收录"></a>2020上半年收录</h1><h2 id="五月上旬收录"><a href="#五月上旬收录" class="headerlink" title="* 五月上旬收录"></a>* 五月上旬收录</h2><h3 id="《蝶恋花·庭院深深深几许》-宋-欧阳修"><a href="#《蝶恋花·庭院深深深几许》-宋-欧阳修" class="headerlink" title="《蝶恋花·庭院深深深几许》-[宋] 欧阳修"></a>《蝶恋花·庭院深深深几许》-[宋] 欧阳修</h3><blockquote><p><strong>庭院深深深几许，杨柳堆烟，帘幕无重数。玉勒雕鞍游冶处，楼高不见章台路。<br>雨横风狂三月暮，门掩黄昏，无计留春住。泪眼问花花不语，乱红飞过秋千去。</strong></p></blockquote><hr><h3 id="《武陵春·风住尘香花已尽》-宋-李清照"><a href="#《武陵春·风住尘香花已尽》-宋-李清照" class="headerlink" title="《武陵春·风住尘香花已尽》-[宋] 李清照"></a>《武陵春·风住尘香花已尽》-[宋] 李清照</h3><blockquote><p><strong>风住尘香花已尽，日晚倦梳头。物是人非事事休，欲语泪先流。<br>闻说双溪春尚好，也拟泛轻舟。只恐双溪舴艋舟，载不动许多愁。</strong></p></blockquote><hr><h3 id="《生查子·元夕》-宋-欧阳修"><a href="#《生查子·元夕》-宋-欧阳修" class="headerlink" title="《生查子·元夕》-[宋] 欧阳修"></a>《生查子·元夕》-[宋] 欧阳修</h3><blockquote><p><strong>去年元夜时，花市灯如昼。月上柳梢头，人约黄昏后。<br>今年元夜时，月与灯依旧。不见去年人，泪湿春衫袖。</strong></p></blockquote><hr><h3 id="《钗头凤·红酥手》-宋-陆游"><a href="#《钗头凤·红酥手》-宋-陆游" class="headerlink" title="《钗头凤·红酥手》-[宋] 陆游"></a>《钗头凤·红酥手》-[宋] 陆游</h3><blockquote><p><strong>红酥手，黄縢酒，满城春色宫墙柳。东风恶，欢情薄。一怀愁绪，几年离索。错、错、错。<br>春如旧，人空瘦，泪痕红浥鲛绡透。桃花落，闲池阁。山盟虽在，锦书难托。莫、莫、莫！</strong></p></blockquote><hr><h2 id="四月下旬收录"><a href="#四月下旬收录" class="headerlink" title="* 四月下旬收录"></a>* 四月下旬收录</h2><h3 id="《陌上花三首》-宋-苏轼"><a href="#《陌上花三首》-宋-苏轼" class="headerlink" title="《陌上花三首》-[宋] 苏轼"></a>《陌上花三首》-[宋] 苏轼</h3><blockquote><ul><li><strong>陌上开花蝴蝶飞，江山犹是昔人非</strong></li></ul></blockquote><hr><h3 id="《贺新郎·甚矣吾衰矣》-宋-辛弃疾"><a href="#《贺新郎·甚矣吾衰矣》-宋-辛弃疾" class="headerlink" title="《贺新郎·甚矣吾衰矣》-[宋] 辛弃疾"></a>《贺新郎·甚矣吾衰矣》-[宋] 辛弃疾</h3><blockquote><ul><li><strong>我见青山多妩媚，料青山见我，应如是。</strong></li></ul></blockquote><hr><h3 id="《虞美人·雨后同干誉才卿置酒来禽花下作》-宋-叶梦得"><a href="#《虞美人·雨后同干誉才卿置酒来禽花下作》-宋-叶梦得" class="headerlink" title="《虞美人·雨后同干誉才卿置酒来禽花下作》-[宋] 叶梦得"></a>《虞美人·雨后同干誉才卿置酒来禽花下作》-[宋] 叶梦得</h3><blockquote><p><strong>落花已作风前舞。又送黄昏雨。晓来庭院半残红。惟有游丝千丈、罥晴空。<br>殷勤花下同携手。更尽杯中酒。美人不用敛蛾眉。我亦多情无奈、酒阑时。</strong></p></blockquote><hr><h3 id="《蝶恋花·春景》-宋-苏轼"><a href="#《蝶恋花·春景》-宋-苏轼" class="headerlink" title="《蝶恋花·春景》-[宋] 苏轼"></a>《蝶恋花·春景》-[宋] 苏轼</h3><blockquote><p><strong>花褪残红青杏小。燕子飞时，绿水人家绕。枝上柳绵吹又少。天涯何处无芳草。<br>墙里秋千墙外道。墙外行人，墙里佳人笑。笑渐不闻声渐悄。多情却被无情恼。</strong></p></blockquote><hr><h3 id="《东风第一枝·倾国倾城》-宋-吴文英"><a href="#《东风第一枝·倾国倾城》-宋-吴文英" class="headerlink" title="《东风第一枝·倾国倾城》-[宋] 吴文英"></a>《东风第一枝·倾国倾城》-[宋] 吴文英</h3><blockquote><p><strong>倾国倾城，非花非雾，春风十里独步。胜如西子妖绕，更比太真澹泞。铅华不御。漫道有、巫山洛浦。似恁地、标格无双，镇锁画楼深处。<br>曾被风、容易送去。曾被月、等闲留住。似花翻使花羞，似柳任从柳妒。不教歌舞。恐化作、彩云轻举。信下蔡、阳城俱迷，看取宋玉词赋。</strong></p></blockquote><hr><h3 id="《洛神赋》-魏晋-曹植"><a href="#《洛神赋》-魏晋-曹植" class="headerlink" title="《洛神赋》-[魏晋] 曹植"></a>《洛神赋》-[魏晋] 曹植</h3><blockquote><ul><li><strong>翩若惊鸿，婉若游龙，荣曜秋菊，华茂春松。</strong></li></ul></blockquote><blockquote><ul><li><strong>髣髴兮若轻云之蔽月，飘飖兮若流风之回雪。</strong></li></ul></blockquote><blockquote><ul><li><strong>远而望之，皎若太阳升朝霞；迫而察之，灼若芙蕖出渌波。</strong></li></ul></blockquote><hr><h3 id="《相见欢》-五代-李煜"><a href="#《相见欢》-五代-李煜" class="headerlink" title="《相见欢》-[五代] 李煜"></a>《相见欢》-[五代] 李煜</h3><blockquote><p><strong>林花谢了春红，太匆匆。无奈朝来寒雨晚来风。<br>胭脂泪，相留醉，几时重。自是人生长恨水长东。</strong></p></blockquote><hr><h3 id="《沈园二首》-宋-陆游"><a href="#《沈园二首》-宋-陆游" class="headerlink" title="《沈园二首》-[宋] 陆游"></a>《沈园二首》-[宋] 陆游</h3><blockquote><ul><li><strong>城上斜阳画角哀，沈园非复旧池台， 伤心桥下春波绿，曾是惊鸿照影来。</strong> </li></ul></blockquote><hr><h3 id="《鹊桥仙·纤云弄巧》-宋-秦观"><a href="#《鹊桥仙·纤云弄巧》-宋-秦观" class="headerlink" title="《鹊桥仙·纤云弄巧》-[宋] 秦观"></a>《鹊桥仙·纤云弄巧》-[宋] 秦观</h3><blockquote><p><strong>纤云弄巧，飞星传恨，银汉迢迢暗度。 金风玉露一相逢，便胜却、人间无数。<br>柔情似水，佳期如梦，忍顾鹊桥归路。 两情若是久长时，又岂在、朝朝暮暮。</strong></p></blockquote><hr><h3 id="《乞彩笺歌》-唐-韦庄"><a href="#《乞彩笺歌》-唐-韦庄" class="headerlink" title="《乞彩笺歌》-[唐] 韦庄"></a>《乞彩笺歌》-[唐] 韦庄</h3><blockquote><ul><li><strong>我有歌诗一千首，磨砻山岳罗星斗。开卷长疑雷电惊，挥毫只怕龙蛇走。</strong></li></ul></blockquote><blockquote><ul><li><strong>班班布在时人口，满袖松花都未有。人间无处买烟霞，须知得自神仙手。</strong></li></ul></blockquote><blockquote><ul><li><strong>也知价重连城璧，一纸万金犹不惜。薛涛昨夜梦中来，殷勤劝向君边觅。</strong></li></ul></blockquote><hr><h3 id="《山居秋暝》-唐-王维"><a href="#《山居秋暝》-唐-王维" class="headerlink" title="《山居秋暝》-[唐] 王维"></a>《山居秋暝》-[唐] 王维</h3><blockquote><p><strong>空山新雨后，天气晚来秋。 明月松间照，清泉石上流。<br>竹喧归浣女，莲动下渔舟。 随意春芳歇，王孙自可留。</strong></p></blockquote><hr><h3 id="《芙蓉楼送辛渐》-唐-王昌龄"><a href="#《芙蓉楼送辛渐》-唐-王昌龄" class="headerlink" title="《芙蓉楼送辛渐》-[唐] 王昌龄"></a>《芙蓉楼送辛渐》-[唐] 王昌龄</h3><blockquote><p><strong>寒雨连江夜入吴，平明送客楚山孤。 洛阳亲友如相问，一片冰心在玉壶。</strong></p></blockquote><hr><h2 id="四月中旬收录"><a href="#四月中旬收录" class="headerlink" title="* 四月中旬收录"></a>* 四月中旬收录</h2><h3 id="《无题》-唐-李商隐"><a href="#《无题》-唐-李商隐" class="headerlink" title="《无题》-[唐] 李商隐"></a>《无题》-[唐] 李商隐</h3><blockquote><p><strong>照梁初有情，出水旧知名。裙衩芙蓉小，钗茸翡翠轻。<br>锦长书郑重，眉细恨分明。莫近弹棋局，中心最不平。</strong></p></blockquote><hr><h3 id="《乐府-古相思曲》-两汉-佚名"><a href="#《乐府-古相思曲》-两汉-佚名" class="headerlink" title="《乐府.古相思曲》-[两汉] 佚名"></a>《乐府.古相思曲》-[两汉] 佚名</h3><p>　</p><blockquote><ul><li><strong>君似明月我似雾，雾随月隐空留露。<br>君善抚琴我善舞，曲终人离心若堵。<br>只缘感君一回顾，使我思君朝与暮。<br>魂随君去终不悔, 绵绵相思为君苦。<br>相思苦，凭谁诉？遥遥不知君何处。<br>扶门切思君之嘱，登高望断天涯路。</strong></li></ul></blockquote><blockquote><ul><li><strong>十三与君初相识，王侯宅里弄丝竹。<br>只缘感君一回顾，使我思君朝与暮。<br>再见君时妾十五，且为君作霓裳舞。<br>可叹年华如朝露，何时衔泥巢君屋？</strong></li></ul></blockquote><hr><h3 id="《长命女·春日宴》-五代-冯延巳"><a href="#《长命女·春日宴》-五代-冯延巳" class="headerlink" title="《长命女·春日宴》-[五代] 冯延巳"></a>《长命女·春日宴》-[五代] 冯延巳</h3><blockquote><p><strong>春日宴，绿酒一杯歌一遍。再拜陈三愿：一愿郎君千岁，二愿妾身常健，三愿如同梁上燕，岁岁长相见。</strong></p></blockquote><hr><h3 id="《听筝》-唐-李端"><a href="#《听筝》-唐-李端" class="headerlink" title="《听筝》-[唐] 李端"></a>《听筝》-[唐] 李端</h3><blockquote><p><strong>鸣筝金粟柱，素手玉房前。欲得周郎顾，时时误拂弦。</strong></p></blockquote><hr><h3 id="《陌上花开，可缓缓归矣》-五代-吴越王"><a href="#《陌上花开，可缓缓归矣》-五代-吴越王" class="headerlink" title="《陌上花开，可缓缓归矣》-[五代] 吴越王"></a>《陌上花开，可缓缓归矣》-[五代] 吴越王</h3><blockquote><p><strong>陌上花开，可缓缓归矣</strong></p></blockquote><hr><h3 id="《赠去婢》-唐-崔郊"><a href="#《赠去婢》-唐-崔郊" class="headerlink" title="《赠去婢》-[唐] 崔郊"></a>《赠去婢》-[唐] 崔郊</h3><blockquote><p><strong>公子王孙逐后尘，绿珠垂泪滴罗巾。侯门一入深如海，从此萧郎是路人。</strong></p></blockquote><hr><h3 id="《丑奴儿·书博山道中壁》-宋-辛弃疾"><a href="#《丑奴儿·书博山道中壁》-宋-辛弃疾" class="headerlink" title="《丑奴儿·书博山道中壁》-[宋] 辛弃疾"></a>《丑奴儿·书博山道中壁》-[宋] 辛弃疾</h3><blockquote><p><strong>少年不识愁滋味，爱上层楼。爱上层楼，为赋新词强说愁。<br>而今识尽愁滋味，欲说还休。欲说还休，却道天凉好个秋。</strong></p></blockquote><hr><h3 id="《题都城南庄》-唐-崔护"><a href="#《题都城南庄》-唐-崔护" class="headerlink" title="《题都城南庄》-[唐] 崔护"></a>《题都城南庄》-[唐] 崔护</h3><blockquote><p><strong>去年今日此门中，人面桃花相映红。 人面不知何处去，桃花依旧笑春风。</strong></p></blockquote><hr><h3 id="《闺怨》-唐-王昌龄"><a href="#《闺怨》-唐-王昌龄" class="headerlink" title="《闺怨》-[唐] 王昌龄"></a>《闺怨》-[唐] 王昌龄</h3><blockquote><p><strong>闺中少妇不知愁，春日凝妆上翠楼。 忽见陌头杨柳色，悔教夫婿觅封侯。</strong></p></blockquote><hr><h3 id="《采薇》-先秦-佚名"><a href="#《采薇》-先秦-佚名" class="headerlink" title="《采薇》-[先秦] 佚名"></a>《采薇》-[先秦] 佚名</h3><blockquote><ul><li><strong>昔我往矣，杨柳依依。今我来思，雨雪霏霏。</strong></li></ul></blockquote><hr><h3 id="《乌衣巷》-唐-刘禹锡"><a href="#《乌衣巷》-唐-刘禹锡" class="headerlink" title="《乌衣巷》-[唐] 刘禹锡"></a>《乌衣巷》-[唐] 刘禹锡</h3><blockquote><p><strong>朱雀桥边野草花，乌衣巷口夕阳斜。 旧时王谢堂前燕，飞入寻常百姓家。</strong></p></blockquote><hr><h3 id="《木兰词·拟古决绝词柬友》-清-纳兰性德"><a href="#《木兰词·拟古决绝词柬友》-清-纳兰性德" class="headerlink" title="《木兰词·拟古决绝词柬友》-[清] 纳兰性德"></a>《木兰词·拟古决绝词柬友》-[清] 纳兰性德</h3><blockquote><ul><li><strong>人生若只如初见，何事秋风悲画扇。</strong></li></ul></blockquote><hr><h3 id="《青玉案·凌波不过横塘路》-宋-贺铸"><a href="#《青玉案·凌波不过横塘路》-宋-贺铸" class="headerlink" title="《青玉案·凌波不过横塘路》-[宋] 贺铸"></a>《青玉案·凌波不过横塘路》-[宋] 贺铸</h3><blockquote><p><strong>凌波不过横塘路。但目送、芳尘去。锦瑟华年谁与度。月桥花院，琐窗朱户。只有春知处。<br>飞云冉冉蘅皋暮。彩笔新题断肠句。若问闲情都几许。一川烟草，满城风絮。梅子黄时雨。</strong></p></blockquote><hr><h3 id="《采桑子·时光只解催人老》-宋-晏殊"><a href="#《采桑子·时光只解催人老》-宋-晏殊" class="headerlink" title="《采桑子·时光只解催人老》-[宋] 晏殊"></a>《采桑子·时光只解催人老》-[宋] 晏殊</h3><blockquote><ul><li><strong>时光只解催人老，不信多情，长恨离亭，泪滴春衫酒易醒。</strong></li></ul></blockquote><hr><h2 id="四月上旬收录"><a href="#四月上旬收录" class="headerlink" title="* 四月上旬收录"></a>* 四月上旬收录</h2><h3 id="《越人歌》-春秋-刘向"><a href="#《越人歌》-春秋-刘向" class="headerlink" title="《越人歌》-[春秋] 刘向"></a>《越人歌》-[春秋] 刘向</h3><blockquote><ul><li><strong>山有木兮木有枝，心悦君兮君不知。</strong></li></ul></blockquote><hr><h3 id="《白头吟》-汉-卓文君"><a href="#《白头吟》-汉-卓文君" class="headerlink" title="《白头吟》-[汉] 卓文君"></a>《白头吟》-[汉] 卓文君</h3><blockquote><ul><li><strong>愿得一心人，白头不相离。</strong></li></ul></blockquote><hr><h3 id="《迢迢牵牛星》-汉-佚名"><a href="#《迢迢牵牛星》-汉-佚名" class="headerlink" title="《迢迢牵牛星》-[汉] 佚名"></a>《迢迢牵牛星》-[汉] 佚名</h3><blockquote><p><strong>迢迢牵牛星，皎皎河汉女。<br>纤纤擢素手，札札弄机杼。<br>终日不成章，泣涕零如雨；<br>河汉清且浅，相去复几许！<br>盈盈一水间，脉脉不得语。</strong></p></blockquote><hr><h3 id="《蝶恋花·阅尽天涯离别苦》-清-王国维"><a href="#《蝶恋花·阅尽天涯离别苦》-清-王国维" class="headerlink" title="《蝶恋花·阅尽天涯离别苦》-[清] 王国维"></a>《蝶恋花·阅尽天涯离别苦》-[清] 王国维</h3><blockquote><ul><li><strong>待把相思灯下诉，一缕新欢，旧恨千千缕。最是人间留不住，朱颜辞镜花辞树。</strong></li></ul></blockquote><hr><h3 id="《长相思·一重山》-五代-李煜"><a href="#《长相思·一重山》-五代-李煜" class="headerlink" title="《长相思·一重山》-[五代] 李煜"></a>《长相思·一重山》-[五代] 李煜</h3><blockquote><p><strong>一重山，两重山。山远天高烟水寒，相思枫叶丹。<br>菊花开，菊花残。塞雁高飞人未还，一帘风月闲。</strong></p></blockquote><hr><h3 id="《青玉案·元夕》-宋-辛弃疾"><a href="#《青玉案·元夕》-宋-辛弃疾" class="headerlink" title="《青玉案·元夕》-[宋] 辛弃疾"></a>《青玉案·元夕》-[宋] 辛弃疾</h3><blockquote><p><strong>东风夜放花千树。更吹落、星如雨。宝马雕车香满路。凤箫声动，玉壶光转，一夜鱼龙舞。<br>蛾儿雪柳黄金缕。笑语盈盈暗香去。众里寻他千百度。蓦然回首，那人却在，灯火阑珊处。</strong></p></blockquote><hr><h3 id="《醉花阴·薄雾浓云愁永昼》-宋-李清照"><a href="#《醉花阴·薄雾浓云愁永昼》-宋-李清照" class="headerlink" title="《醉花阴·薄雾浓云愁永昼》-[宋] 李清照"></a>《醉花阴·薄雾浓云愁永昼》-[宋] 李清照</h3><blockquote><p><strong>薄雾浓云愁永昼，瑞脑消金兽。佳节又重阳，玉枕纱厨，半夜凉初透。<br>东篱把酒黄昏后，有暗香盈袖。莫道不销魂，帘卷西风，人比黄花瘦。</strong></p></blockquote><hr><h3 id="《山亭夏日》-唐-高骈"><a href="#《山亭夏日》-唐-高骈" class="headerlink" title="《山亭夏日》-[唐] 高骈"></a>《山亭夏日》-[唐] 高骈</h3><blockquote><p><strong>绿树阴浓夏日长，楼台倒影入池塘。<br>水晶帘动微风起，满架蔷薇一院香。</strong></p></blockquote><hr><h3 id="《书湖阴先生壁》-宋-王安石"><a href="#《书湖阴先生壁》-宋-王安石" class="headerlink" title="《书湖阴先生壁》-[宋] 王安石"></a>《书湖阴先生壁》-[宋] 王安石</h3><blockquote><p><strong>茅檐长扫净无苔，花木成畦手自栽。<br>一水护田将绿绕，两山排闼送青来。</strong></p></blockquote><hr><h3 id="《鹧鸪天·彩袖殷勤捧玉钟》-宋-晏几道"><a href="#《鹧鸪天·彩袖殷勤捧玉钟》-宋-晏几道" class="headerlink" title="《鹧鸪天·彩袖殷勤捧玉钟》-[宋] 晏几道"></a>《鹧鸪天·彩袖殷勤捧玉钟》-[宋] 晏几道</h3><blockquote><p><strong>彩袖殷勤捧玉钟。当年拚却醉颜红。舞低杨柳楼心月，歌尽桃花扇影风。<br>从别后，忆相逢。几回魂梦与君同。今宵剩把银釭照，犹恐相逢是梦中。</strong></p></blockquote><hr><h3 id="《上邪》-汉-佚名"><a href="#《上邪》-汉-佚名" class="headerlink" title="《上邪》-[汉] 佚名"></a>《上邪》-[汉] 佚名</h3><blockquote><p><strong>上邪，<br>我欲与君相知，<br>长命无绝衰。<br>山无陵，<br>江水为竭。<br>冬雷震震，<br>夏雨雪。<br>天地合，<br>乃敢与君绝。</strong></p></blockquote><hr><h3 id="《晓出净慈寺送林子方》-宋-杨万里"><a href="#《晓出净慈寺送林子方》-宋-杨万里" class="headerlink" title="《晓出净慈寺送林子方》-[宋] 杨万里"></a>《晓出净慈寺送林子方》-[宋] 杨万里</h3><blockquote><p><strong>毕竟西湖六月中，风光不与四时同。<br>接天莲叶无穷碧，映日荷花别样红。</strong></p></blockquote><hr><h3 id="《一剪梅》-明-唐寅"><a href="#《一剪梅》-明-唐寅" class="headerlink" title="《一剪梅》-[明] 唐寅"></a>《一剪梅》-[明] 唐寅</h3><blockquote><p><strong>雨打梨花深闭门，忘了青春，误了青春。赏心乐事共谁论？花下销魂，月下销魂。<br>愁聚眉峰尽日颦，千点啼痕，万点啼痕。晓看天色暮看云，行也思君，坐也思君。</strong></p></blockquote><hr><h3 id="《清平调·其一》-唐-李白"><a href="#《清平调·其一》-唐-李白" class="headerlink" title="《清平调·其一》-[唐] 李白"></a>《清平调·其一》-[唐] 李白</h3><blockquote><p><strong>云想衣裳花想容，春风拂槛露华浓。<br>若非群玉山头见，会向瑶台月下逢。</strong></p></blockquote><hr><h3 id="《江城子·乙卯正月二十日夜记梦》-宋-苏轼"><a href="#《江城子·乙卯正月二十日夜记梦》-宋-苏轼" class="headerlink" title="《江城子·乙卯正月二十日夜记梦》-[宋] 苏轼"></a>《江城子·乙卯正月二十日夜记梦》-[宋] 苏轼</h3><blockquote><p><strong>十年生死两茫茫，不思量，自难忘。千里孤坟，无处话凄凉。纵使相逢应不识，尘满面，鬓如霜。<br>夜来幽梦忽还乡，小轩窗，正梳妆。相顾无言，惟有泪千行。料得年年肠断处，明月夜，短松冈。</strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;2021上半年收录&quot;&gt;&lt;a href=&quot;#2021上半年收录&quot; class=&quot;headerlink&quot; title=&quot;2021上半年收录&quot;&gt;&lt;/a&gt;2021上半年收录&lt;/h1&gt;&lt;h3 id=&quot;《酹江月·驿中言别》-南宋-文天祥&quot;&gt;&lt;a href=&quot;#《酹江月·驿中言别》-南宋-文天祥&quot; class=&quot;headerlink&quot; title=&quot;《酹江月·驿中言别》-[南宋] 文天祥&quot;&gt;&lt;/a&gt;《酹江月·驿中言别》-[南宋] 文天祥&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;水天空阔，恨东风不惜世间英物。蜀鸟吴花残照里，忍见荒城颓壁。铜雀春情，金人秋泪，此恨凭谁雪？堂堂剑气，斗牛空认奇杰。&lt;br&gt;那信江海余生，南行万里，属扁舟齐发。正为鸥盟留醉眼，细看涛生云灭。睨柱吞嬴，回旗走懿，千古冲冠发。伴人无寐，秦淮应是孤月。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;《雨霖铃·寒蝉凄切》-宋-柳永&quot;&gt;&lt;a href=&quot;#《雨霖铃·寒蝉凄切》-宋-柳永&quot; class=&quot;headerlink&quot; title=&quot;《雨霖铃·寒蝉凄切》-[宋] 柳永&quot;&gt;&lt;/a&gt;《雨霖铃·寒蝉凄切》-[宋] 柳永&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;寒蝉凄切，对长亭晚，骤雨初歇。&lt;br&gt;都门帐饮无绪，留恋处，兰舟催发。&lt;br&gt;执手相看泪眼，竟无语凝噎。&lt;br&gt;念去去，千里烟波，暮霭沉沉楚天阔。&lt;br&gt;多情自古伤离别，更那堪，冷落清秋节！&lt;br&gt;今宵酒醒何处？杨柳岸，晓风残月。&lt;br&gt;此去经年，应是良辰好景虚设。&lt;br&gt;便纵有千种风情，更与何人说？&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;《葬花吟》-清-曹雪芹&quot;&gt;&lt;a href=&quot;#《葬花吟》-清-曹雪芹&quot; class=&quot;headerlink&quot; title=&quot;《葬花吟》-[清] 曹雪芹&quot;&gt;&lt;/a&gt;《葬花吟》-[清] 曹雪芹&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;花谢花飞花满天，红消香断有谁怜？&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;满纸荒唐言 一把辛酸泪 都云作者痴 谁解其中味&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="佳句收录 古诗丽词" scheme="https://Hong-King.github.io/categories/%E4%BD%B3%E5%8F%A5%E6%94%B6%E5%BD%95-%E5%8F%A4%E8%AF%97%E4%B8%BD%E8%AF%8D/"/>
    
    
      <category term="语言之美" scheme="https://Hong-King.github.io/tags/%E8%AF%AD%E8%A8%80%E4%B9%8B%E7%BE%8E/"/>
    
  </entry>
  
  <entry>
    <title>利用欧拉函数求解高幂模的Python实现</title>
    <link href="https://hong-king.github.io/2021/05/25/%E9%AB%98%E5%B9%82%E6%A8%A1%E6%B1%82%E8%A7%A3%E7%9A%84Python%E5%AE%9E%E7%8E%B0/"/>
    <id>https://hong-king.github.io/2021/05/25/%E9%AB%98%E5%B9%82%E6%A8%A1%E6%B1%82%E8%A7%A3%E7%9A%84Python%E5%AE%9E%E7%8E%B0/</id>
    <published>2021-05-25T13:01:00.000Z</published>
    <updated>2021-06-04T12:49:54.110Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>程序说明<br>Reference books: <a href="https://www.cnblogs.com/linyujun/p/5194170.html" target="_blank" rel="noopener">https://www.cnblogs.com/linyujun/p/5194170.html</a><br>Reference books: <a href="https://baike.baidu.com/item/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/1944850?fr=aladdin#3_6" target="_blank" rel="noopener">https://baike.baidu.com/item/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/1944850?fr=aladdin#3_6</a><br>Completion time：2021-5-25<br>Last modification time ：2021-5-25</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">import math</span><br><span class="line"></span><br><span class="line"><span class="comment">#参考文献：https://www.cnblogs.com/linyujun/p/5194170.html</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"************程序功能************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"求 【X^Y mod Z】 的值"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"********************************"</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: https://www.cnblogs.com/linyujun/p/5194170.html"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: https://baike.baidu.com/item/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/1944850?fr=aladdin#3_6"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Completion time：2021-5-25"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Last modification time ：2021-5-25"</span>,<span class="string">'\n'</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"********************博客网址********************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"欢迎访问：https://hong-king.github.io/"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"************************************************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"--------------------------------------------------------"</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"请输入X："</span>)</span><br><span class="line">X = input()</span><br><span class="line">X = int(X)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"请输入Y："</span>)</span><br><span class="line">Y = input()</span><br><span class="line">Y = int(Y)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"请输入Z："</span>)</span><br><span class="line">Z = input()</span><br><span class="line">Z = int(Z)</span><br><span class="line"></span><br><span class="line">judge = 0 <span class="comment">#接受Z是否为素数指令,0表示Z为素数，1表示Z不为素数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#判断Z是否为素数,并求出素数个数</span></span><br><span class="line">def judge_sushu(P):</span><br><span class="line">    <span class="keyword">if</span> (P==2 or P==3):</span><br><span class="line">        <span class="built_in">return</span> (0)</span><br><span class="line">    dim = int(P**0.5)+1 <span class="comment">#必须使用+1，不能使用ceil，否则4时出错</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(2,dim):</span><br><span class="line">        <span class="keyword">if</span> (P%i != 0 and i&lt;(dim-1)):</span><br><span class="line">            <span class="built_in">continue</span></span><br><span class="line">        <span class="keyword">elif</span>(P%i!=0 and i==(dim-1)):</span><br><span class="line">            <span class="built_in">return</span> (0)    <span class="comment">#返回1说明P为素数</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">return</span> (i)</span><br><span class="line"></span><br><span class="line">Prime_matrix = []</span><br><span class="line"></span><br><span class="line">P = Z</span><br><span class="line">Factor = judge_sushu(P)</span><br><span class="line"><span class="keyword">if</span> (Factor != 0):</span><br><span class="line">    judge = 1</span><br><span class="line">    <span class="keyword">while</span>(1):</span><br><span class="line">        Prime_matrix.append(int(Factor))</span><br><span class="line">        P = P/Factor</span><br><span class="line">        <span class="keyword">if</span> (judge_sushu(P) == 0):</span><br><span class="line">            Prime_matrix.append(int(P))</span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        <span class="keyword">else</span>: </span><br><span class="line">            Factor = judge_sushu(P)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    Prime_matrix.append(int(Z))</span><br><span class="line"></span><br><span class="line"><span class="comment">#求结果</span></span><br><span class="line">Prime_set = list(<span class="built_in">set</span>(Prime_matrix))</span><br><span class="line">phi = Z</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(Prime_set)):</span><br><span class="line">    phi = phi-phi/Prime_set[i] <span class="comment">#欧拉函数值</span></span><br><span class="line"></span><br><span class="line">ans = (int(X%Z)**int(phi+(Y%phi)))%Z <span class="comment">#必须加上int，否则会转换成float类型，超出限制</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"结果为："</span>)</span><br><span class="line"><span class="built_in">print</span>(ans)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;程序说明&lt;br&gt;Reference books: &lt;a href=&quot;https://www.cnblogs.com/linyujun/p/5194170.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://ww
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>DES加密算法的Python实现</title>
    <link href="https://hong-king.github.io/2021/04/20/DES%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E7%9A%84Python%E5%AE%9E%E7%8E%B0/"/>
    <id>https://hong-king.github.io/2021/04/20/DES%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E7%9A%84Python%E5%AE%9E%E7%8E%B0/</id>
    <published>2021-04-20T13:27:00.000Z</published>
    <updated>2021-04-20T13:29:27.261Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>程序说明<br>Reference books: <a href="https://blog.csdn.net/m0_37962600/article/details/79912654" target="_blank" rel="noopener">https://blog.csdn.net/m0_37962600/article/details/79912654</a><br>Completion time：2021-4-20<br>Last modification time ：2021-4-20</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">此方法支持256种字符</span></span><br><span class="line"><span class="string">参考文献：https://blog.csdn.net/m0_37962600/article/details/79912654</span></span><br><span class="line"><span class="string">Completion time：2021-4-20</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"><span class="comment">#程序说明</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------&lt;DES编码&gt;程序说明-------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"All rights reserved"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: https://blog.csdn.net/m0_37962600/article/details/79912654)"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Completion time：2021-4-20"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Last modification time ：2021-4-20"</span>,<span class="string">'\n'</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"********************博客网址********************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"欢迎访问：https://hong-king.github.io/"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"************************************************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"--------------------------------------------------------"</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"请选择加密OR解密，加密输入0；解密输入1："</span>)</span><br><span class="line">aaaaa = input()</span><br><span class="line"><span class="keyword">if</span> (aaaaa != <span class="string">'0'</span> and aaaaa != <span class="string">'1'</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"输入有无！"</span>)</span><br><span class="line">    sys.exit(1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#***************************************创建码符集</span></span><br><span class="line">letter = [chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(256)]</span><br><span class="line">letter_dict = dict(zip(letter,[<span class="string">'&#123;:08b&#125;'</span>.format(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(len(letter))]))</span><br><span class="line">num_dict = dict(zip([<span class="string">'&#123;:08b&#125;'</span>.format(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(len(letter))],letter))</span><br><span class="line"></span><br><span class="line"><span class="comment">#***************************************生成16个子钥C,D（48位）（先假设密码为'12345678'）</span></span><br><span class="line">key = <span class="string">'12345678'</span></span><br><span class="line">key_bin = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> key:</span><br><span class="line">    key_bin = key_bin+letter_dict[i]</span><br><span class="line"></span><br><span class="line"><span class="comment">#key_bin = '0001001100110100010101110111100110011011101111001101111111110001'</span></span><br><span class="line"><span class="comment">#----------------------------------------------------步骤一</span></span><br><span class="line">EX = [57,49,41,33,25,17,9, <span class="comment">#交换规则表(8*7)</span></span><br><span class="line">      1,58,50,42,34,26,18,</span><br><span class="line">      10,2,59,51,43,35,27,</span><br><span class="line">      19,11,3,60,52,44,36,</span><br><span class="line">      63,55,47,39,31,23,15,</span><br><span class="line">      7,62,54,46,38,30,22,</span><br><span class="line">      14,6,61,53,45,37,29,</span><br><span class="line">      21,13,5,28,20,12,4]</span><br><span class="line">key_bIR  = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(EX)):</span><br><span class="line">    key_bIR = key_bIR + key_bin[(EX[i]-1)]</span><br><span class="line"><span class="comment">#----------------------------------------------------步骤二</span></span><br><span class="line">C = []</span><br><span class="line">D = []</span><br><span class="line">C.append(key_bIR[:28])</span><br><span class="line">D.append(key_bIR[28:])</span><br><span class="line"></span><br><span class="line">YW = [1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1] <span class="comment">#移位规则表(1*16)</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(16):</span><br><span class="line">    C.append(C[i][YW[i]:] + C[i][:YW[i]])</span><br><span class="line">    D.append(D[i][YW[i]:] + D[i][:YW[i]])</span><br><span class="line"><span class="comment">#----------------------------------------------------步骤三</span></span><br><span class="line">PC_2 = [14,17,11,24,1,5,</span><br><span class="line">        3,28,15,6,21,10,</span><br><span class="line">        23,19,12,4,26,8,</span><br><span class="line">        16,7,27,20,13,2,</span><br><span class="line">        41,52,31,37,47,55,</span><br><span class="line">        30,40,51,45,33,48,</span><br><span class="line">        44,49,39,56,34,53,</span><br><span class="line">        46,42,50,36,29,32]</span><br><span class="line">K  = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(C)-1):</span><br><span class="line">    K_copy = C[i+1] + D[i+1]</span><br><span class="line">    K_IV = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(PC_2)):</span><br><span class="line">        K_IV = K_IV + K_copy[(PC_2[j]-1)]</span><br><span class="line">    K.append(K_IV)</span><br><span class="line"></span><br><span class="line"><span class="comment">#***************************************用得到的子密钥对64位数据加密</span></span><br><span class="line"><span class="keyword">if</span> (aaaaa == <span class="string">'0'</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"请输入需要加密的英文讯息:"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"请输入需要解密的英文讯息:"</span>)</span><br><span class="line">m = input()</span><br><span class="line"><span class="keyword">if</span>(len(m)%8 != 0):</span><br><span class="line">    m = m + num_dict[<span class="string">'00000000'</span>]*(8 - len(m)%8)</span><br><span class="line">M = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(int(len(m)/8)):</span><br><span class="line">    M.append(m[i*8:i*8+8])</span><br><span class="line"></span><br><span class="line">Ciphertext = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> M:</span><br><span class="line">    m = i</span><br><span class="line">    word_bin = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> m:</span><br><span class="line">        word_bin = word_bin+letter_dict[i]</span><br><span class="line"></span><br><span class="line">    <span class="comment">#word_bin = '0000000100100011010001010110011110001001101010111100110111101111'</span></span><br><span class="line">    <span class="comment">#----------------------------------------------------步骤一</span></span><br><span class="line">    IP = [58,50,42,34,26,18,10,2, <span class="comment">#初始置换IP，得到word_bIR置换后的字符串</span></span><br><span class="line">          60,52,44,36,28,20,12,4,</span><br><span class="line">          62,54,46,38,30,22,14,6,</span><br><span class="line">          64,56,48,40,32,24,16,8,</span><br><span class="line">          57,49,41,33,25,17,9,1,</span><br><span class="line">          59,51,43,35,27,19,11,3,</span><br><span class="line">          61,53,45,37,29,21,13,5,</span><br><span class="line">          63,55,47,39,31,23,15,7]</span><br><span class="line">        </span><br><span class="line">    word_bIR  = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(IP)):</span><br><span class="line">        word_bIR = word_bIR + word_bin[(IP[i]-1)]</span><br><span class="line"></span><br><span class="line">    <span class="comment">#初始置换IP，得到word_bIR</span></span><br><span class="line">    R = []</span><br><span class="line">    L = []</span><br><span class="line">    L.append(word_bIR[:32])</span><br><span class="line">    R.append(word_bIR[32:])</span><br><span class="line">    <span class="comment">#----------------------------------------------------步骤二</span></span><br><span class="line">    E = [32,1,2,3,4,5,</span><br><span class="line">         4,5,6,7,8,9,</span><br><span class="line">         8,9,10,11,12,13,</span><br><span class="line">         12,13,14,15,16,17,</span><br><span class="line">         16,17,18,19,20,21,</span><br><span class="line">         20,21,22,23,24,25,</span><br><span class="line">         24,25,26,27,28,29,</span><br><span class="line">         28,29,30,31,32,1]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(16):</span><br><span class="line">        L.append(R[i])</span><br><span class="line">        R_IV = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(E)):</span><br><span class="line">            <span class="keyword">if</span> (aaaaa == <span class="string">'0'</span>):</span><br><span class="line">                <span class="keyword">if</span> ( R[i][(E[j]-1)] == K[i][j] ):</span><br><span class="line">                    R_IV = R_IV + <span class="string">'0'</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    R_IV = R_IV + <span class="string">'1'</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> ( R[i][(E[j]-1)] == K[15-i][j] ):</span><br><span class="line">                    R_IV = R_IV + <span class="string">'0'</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    R_IV = R_IV + <span class="string">'1'</span></span><br><span class="line">        S1 = [14,4,13,1,2,15,11,8,3,10,6,12,5,9,0,7, <span class="comment">#S核</span></span><br><span class="line">              0,15,7,4,14,2,13,1,10,6,12,11,9,5,3,8,</span><br><span class="line">              4,1,14,8,13,6,2,11,15,12,9,7,3,10,5,0,</span><br><span class="line">              15,12,8,2,4,9,1,7,5,11,3,14,10,0,6,13]</span><br><span class="line">        S2 = [15,1,8,14,6,11,3,4,9,7,2,13,12,0,5,10,</span><br><span class="line">              3,13,4,7,15,2,8,14,12,0,1,10,6,9,11,5,</span><br><span class="line">              0,14,7,11,10,4,13,1,5,8,12,6,9,3,2,15,</span><br><span class="line">              13,8,10,1,3,15,4,2,11,6,7,12,0,5,14,9]</span><br><span class="line">        S3 = [10,0,9,14,6,3,15,5,1,13,12,7,11,4,2,8,</span><br><span class="line">              13,7,0,9,3,4,6,10,2,8,5,14,12,11,15,1,</span><br><span class="line">              13,6,4,9,8,15,3,0,11,1,2,12,5,10,14,7,</span><br><span class="line">              1,10,13,0,6,9,8,7,4,15,14,3,11,5,2,12]</span><br><span class="line">        S4 = [7,13,14,3,0,6,9,10,1,2,8,5,11,12,4,15,</span><br><span class="line">              13,8,11,5,6,15,0,3,4,7,2,12,1,10,14,9,</span><br><span class="line">              10,6,9,0,12,11,7,13,15,1,3,14,5,2,8,4,</span><br><span class="line">              3,15,0,6,10,1,13,8,9,4,5,11,12,7,2,14]</span><br><span class="line">        S5 = [2,12,4,1,7,10,11,6,8,5,3,15,13,0,14,9,</span><br><span class="line">              14,11,2,12,4,7,13,1,5,0,15,10,3,9,8,6,</span><br><span class="line">              4,2,1,11,10,13,7,8,15,9,12,5,6,3,0,14,</span><br><span class="line">              11,8,12,7,1,14,2,13,6,15,0,9,10,4,5,3]</span><br><span class="line">        S6 = [12,1,10,15,9,2,6,8,0,13,3,4,14,7,5,11,</span><br><span class="line">              10,15,4,2,7,12,9,5,6,1,13,14,0,11,3,8,</span><br><span class="line">              9,14,15,5,2,8,12,3,7,0,4,10,1,13,11,6,</span><br><span class="line">              4,3,2,12,9,5,15,10,11,14,1,7,6,0,8,13]</span><br><span class="line">        S7 = [4,11,2,14,15,0,8,13,3,12,9,7,5,10,6,1,</span><br><span class="line">              13,0,11,7,4,9,1,10,14,3,5,12,2,15,8,6,</span><br><span class="line">              1,4,11,13,12,3,7,14,10,15,6,8,0,5,9,2,</span><br><span class="line">              6,11,13,8,1,4,10,7,9,5,0,15,14,2,3,12]</span><br><span class="line">        S8 = [13,2,8,4,6,15,11,1,10,9,3,14,5,0,12,7,</span><br><span class="line">              1,15,13,8,10,3,7,4,12,5,6,11,0,14,9,2,</span><br><span class="line">              7,11,4,1,9,12,14,2,0,6,10,13,15,3,5,8,</span><br><span class="line">              2,1,14,7,4,10,8,13,15,12,9,0,3,5,6,11]</span><br><span class="line">        S = [S1,S2,S3,S4,S5,S6,S7,S8]</span><br><span class="line"></span><br><span class="line">        R_IV_2 = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(8):</span><br><span class="line">            IV = R_IV[j*6:j*6+6]</span><br><span class="line">            hang = IV[0]+IV[5]</span><br><span class="line">            hang = int(hang,2)</span><br><span class="line">            lie = IV[1:5]</span><br><span class="line">            lie = int(lie,2)</span><br><span class="line">            num = S[j][hang*16+lie]</span><br><span class="line">            R_IV_2 = R_IV_2 + <span class="string">'&#123;:04b&#125;'</span>.format(num)</span><br><span class="line">    <span class="comment">#----------------------------------------------------步骤三</span></span><br><span class="line">        P = [16,7,20,21,   <span class="comment">#P核</span></span><br><span class="line">             29,12,28,17,</span><br><span class="line">             1,15,23,26,</span><br><span class="line">             5,18,31,10,</span><br><span class="line">             2,8,24,14,</span><br><span class="line">             32,27,3,9,</span><br><span class="line">             19,13,30,6,</span><br><span class="line">             22,11,4,25]</span><br><span class="line">        R_IV_3 = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(P)):</span><br><span class="line">            <span class="keyword">if</span> ( R_IV_2[(P[j]-1)] == L[i][j] ):</span><br><span class="line">                 R_IV_3 = R_IV_3 + <span class="string">'0'</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                R_IV_3 = R_IV_3 + <span class="string">'1'</span></span><br><span class="line">        R.append(R_IV_3)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#***************************************密文的生成</span></span><br><span class="line">    IP_1 = [40,8,48,16,56,24,64,32,</span><br><span class="line">            39,7,47,15,55,23,63,31,</span><br><span class="line">            38,6,46,14,54,22,62,30,</span><br><span class="line">            37,5,45,13,53,21,61,29,</span><br><span class="line">            36,4,44,12,52,20,60,28,</span><br><span class="line">            35,3,43,11,51,19,59,27,</span><br><span class="line">            34,2,42,10,50,18,58,26,</span><br><span class="line">            33,1,41,9,49,17,57,25]</span><br><span class="line">    RL = R[16] + L[16]</span><br><span class="line"></span><br><span class="line">    Ciphertext_bin = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(IP_1)):</span><br><span class="line">        Ciphertext_bin = Ciphertext_bin + RL[(IP_1[i]-1)]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(8):</span><br><span class="line">        Ciphertext = Ciphertext + num_dict[Ciphertext_bin[j*8:j*8+8]]</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (aaaaa == <span class="string">'0'</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"密文为："</span>+Ciphertext)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"明文为："</span>+Ciphertext)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;程序说明&lt;br&gt;Reference books: &lt;a href=&quot;https://blog.csdn.net/m0_37962600/article/details/79912654&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>希尔密码(Hill Cipher)的C++实现</title>
    <link href="https://hong-king.github.io/2021/04/10/%E5%B8%8C%E5%B0%94%E5%AF%86%E7%A0%81(Hill%20Cipher)%E7%9A%84C++%E5%AE%9E%E7%8E%B0/"/>
    <id>https://hong-king.github.io/2021/04/10/%E5%B8%8C%E5%B0%94%E5%AF%86%E7%A0%81(Hill%20Cipher)%E7%9A%84C++%E5%AE%9E%E7%8E%B0/</id>
    <published>2021-04-10T01:39:00.000Z</published>
    <updated>2021-04-10T01:40:56.759Z</updated>
    
    <content type="html"><![CDATA[<p>——————-&lt;希尔密码(MOD27)&gt;程序说明——————-<br>该程序目前只接受小写英文加密讯息(支持空格)!<br>每次运行程序，密钥都会改变!<br>该程序相较python版本有所删减，减小了码符集大小，但完善了密钥矩阵的生成条件，增强了安全性。<br><strong><strong><strong><strong>****</strong></strong></strong></strong>博客网址<strong><strong><strong><strong>****</strong></strong></strong></strong><br>欢迎访问：<a href="https://hong-king.github.io/">https://hong-king.github.io/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">All rights reserved by Liu Junhong</span><br><span class="line">Reference books: 百度百科-希尔密码 、https://www.doc88.com/p-58447325494757.html)</span><br><span class="line">Completion time：2021-4-10</span><br><span class="line">*/</span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;string.h&gt;</span></span><br><span class="line"><span class="comment">#include&lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include&lt;math.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &lt;cstdlib&gt;</span></span><br><span class="line"><span class="comment">#include &lt;ctime&gt;</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int p[9]; //P用于储存密钥矩阵</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">"Designed by 刘俊宏：All rights reserved"</span> &lt;&lt;endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">"Reference books: 百度百科-希尔密码 、https://www.doc88.com/p-58447325494757.html"</span> &lt;&lt;endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">"Completion time：2021-4-6"</span> &lt;&lt;endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">"Last modification time ：2021-4-10"</span> &lt;&lt;endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">"-------------------&lt;希尔密码(MOD27)&gt;程序说明-------------------"</span> &lt;&lt;endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">"该程序目前只接受小写英文加密讯息(支持空格)!"</span> &lt;&lt;endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">"每次运行程序，密钥都会改变!"</span> &lt;&lt;endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">"该程序相较python版本有所删减，减小了码符集大小，但完善了密钥矩阵的生成条件，增强了安全性。"</span> &lt;&lt;endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">"********************博客网址********************"</span> &lt;&lt;endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">"欢迎访问：https://hong-king.github.io/"</span> &lt;&lt;endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">"************************************************"</span> &lt;&lt;endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">"---------------------------------------------------------------"</span> &lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    /*</span><br><span class="line">    生成符合条件的3*3随机密钥矩阵</span><br><span class="line">    */</span><br><span class="line">    int num;</span><br><span class="line">    srand((int)time(0));   //产生随机种子,把0换成NULL也行</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">            <span class="keyword">for</span> (int i = 0; i &lt; 9; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                p[i] = rand()%27+1;  //[1,53]</span><br><span class="line">            &#125;</span><br><span class="line">            num = p[0]*p[4]*p[8] + p[1]*p[5]*p[6] + p[2]*p[3]*p[7] - p[2]*p[4]*p[6] - p[1]*p[3]*p[8] - p[0]*p[5]*p[7];</span><br><span class="line">    &#125;<span class="keyword">while</span>(num%3 == 0);</span><br><span class="line">    cout &lt;&lt; <span class="string">"密钥："</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; 9; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; p[i] &lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    /*</span><br><span class="line">    求逆矩阵</span><br><span class="line">    */</span><br><span class="line">    int num_mo;</span><br><span class="line">    <span class="keyword">for</span> (int i = 1; i &lt; 10000; i++)&#123;  //(i &lt; 10000)存在BUG隐患</span><br><span class="line">        <span class="keyword">if</span> ( (num*i)%27 == 1 || (num*i)%27 == -26 )&#123;</span><br><span class="line">            num_mo = i;</span><br><span class="line">            <span class="built_in">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    int I_p[9]; //P用于储存密钥的逆矩阵（转译矩阵）</span><br><span class="line"></span><br><span class="line">    I_p[0] = (((p[4]*p[8] - p[5]*p[7])*num_mo)%27 +27)%27;</span><br><span class="line"></span><br><span class="line">    I_p[3] = (((p[5]*p[6] - p[3]*p[8])*num_mo)%27 +27)%27;</span><br><span class="line"></span><br><span class="line">    I_p[6] = (((p[3]*p[7] - p[4]*p[6])*num_mo)%27 +27)%27;</span><br><span class="line"></span><br><span class="line">    I_p[1] = (((p[2]*p[7] - p[1]*p[8])*num_mo)%27 +27)%27;</span><br><span class="line"></span><br><span class="line">    I_p[4] = (((p[0]*p[8] - p[2]*p[6])*num_mo)%27 +27)%27;</span><br><span class="line"></span><br><span class="line">    I_p[7] = (((p[1]*p[6] - p[0]*p[7])*num_mo)%27 +27)%27;</span><br><span class="line"></span><br><span class="line">    I_p[2] = (((p[1]*p[5] - p[2]*p[4])*num_mo)%27 +27)%27;</span><br><span class="line"></span><br><span class="line">    I_p[5] = (((p[2]*p[3] - p[0]*p[5])*num_mo)%27 +27)%27;</span><br><span class="line"></span><br><span class="line">    I_p[8] = (((p[0]*p[4] - p[1]*p[3])*num_mo)%27 +27)%27;</span><br><span class="line"></span><br><span class="line">    /*</span><br><span class="line">    读取需要加密的信息</span><br><span class="line">    */</span><br><span class="line">    string aaa;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">"请输入需要加密的信息(只能包含空格和小写字母)："</span>;</span><br><span class="line">    getline(cin,aaa);   //getline用于读取整行数据</span><br><span class="line">    int g = aaa.length(); // 原始信息字数</span><br><span class="line">    int z = 3 - g%3; // 需要扩充的字数</span><br><span class="line">    <span class="keyword">if</span> (z == 3)</span><br><span class="line">        z = 0;</span><br><span class="line">    int g_z = g + z;  //扩充后的字数</span><br><span class="line">    int g_z_s = g_z / 3;</span><br><span class="line"></span><br><span class="line">    /*</span><br><span class="line">    将加密的信息转换成密文</span><br><span class="line">    */</span><br><span class="line">    int information[g_z] = &#123;0&#125;;</span><br><span class="line">    <span class="keyword">for</span> (int i=0; i &lt;= (g-1); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (int(aaa[i])==32)</span><br><span class="line">            information[i] = 0;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (int(aaa[i])&gt;=97 &amp;&amp; int(aaa[i])&lt;=122)</span><br><span class="line">        &#123;</span><br><span class="line">            information[i] = int(aaa[i]) - 96;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">"出现违法字符！"</span> &lt;&lt; endl;</span><br><span class="line">            <span class="built_in">break</span>;</span><br><span class="line">            <span class="built_in">return</span> 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    int information_copy[g_z] = &#123;0&#125;;</span><br><span class="line">    <span class="keyword">for</span> (int i=0; i &lt;= (g_z_s-1); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            information_copy[i*3+0] = (information[i*3+0]*p[0] + information[i*3+1]*p[1] + information[i*3+2]*p[2])%27;</span><br><span class="line">            information_copy[i*3+1] = (information[i*3+0]*p[3] + information[i*3+1]*p[4] + information[i*3+2]*p[5])%27;</span><br><span class="line">            information_copy[i*3+2] = (information[i*3+0]*p[6] + information[i*3+1]*p[7] + information[i*3+2]*p[8])%27;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout&lt;&lt; <span class="string">"密文："</span>&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (int i=0; i &lt;= (g_z-1); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (information_copy[i]==0)</span><br><span class="line">                cout&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (information_copy[i]&gt;=1 &amp;&amp; information_copy[i]&lt;=26)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; char(information_copy[i]+96);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /*</span><br><span class="line">        解码</span><br><span class="line">        */</span><br><span class="line">        int information_copy_copy[g_z] = &#123;0&#125;;</span><br><span class="line">        <span class="keyword">for</span> (int i=0; i &lt;= (g_z_s-1); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                information_copy_copy[i*3+0] = (information_copy[i*3+0]*I_p[0] + information_copy[i*3+1]*I_p[1] + information_copy[i*3+2]*I_p[2])%27;</span><br><span class="line">                information_copy_copy[i*3+1] = (information_copy[i*3+0]*I_p[3] + information_copy[i*3+1]*I_p[4] + information_copy[i*3+2]*I_p[5])%27;</span><br><span class="line">                information_copy_copy[i*3+2] = (information_copy[i*3+0]*I_p[6] + information_copy[i*3+1]*I_p[7] + information_copy[i*3+2]*I_p[8])%27;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (information_copy_copy[i*3+0]&lt;0)</span><br><span class="line">                    information_copy_copy[i*3+0] = information_copy_copy[i*3+0] + 27;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (information_copy_copy[i*3+1]&lt;0)</span><br><span class="line">                    information_copy_copy[i*3+1] = information_copy_copy[i*3+1] + 27;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (information_copy_copy[i*3+2]&lt;0)</span><br><span class="line">                    information_copy_copy[i*3+2] = information_copy_copy[i*3+2] + 27;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        cout&lt;&lt; <span class="string">"\n"</span> &lt;&lt; <span class="string">"明文："</span>&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (int i=0; i &lt;= (g_z-1); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (information_copy_copy[i]==0)</span><br><span class="line">                cout&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (information_copy_copy[i]&gt;=1 &amp;&amp; information_copy_copy[i]&lt;=26)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; char(information_copy_copy[i]+96);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>运行结果示例：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Designed by 刘俊宏：All rights reserved</span><br><span class="line">Reference books: 百度百科-希尔密码 、https://www.doc88.com/p-58447325494757.html</span><br><span class="line">Completion time：2021-4-6</span><br><span class="line">Last modification time ：2021-4-10</span><br><span class="line">-------------------&lt;希尔密码(MOD27)&gt;程序说明-------------------</span><br><span class="line">该程序目前只接受小写英文加密讯息(支持空格)!</span><br><span class="line">每次运行程序，密钥都会改变!</span><br><span class="line">该程序相较python版本有所删减，减小了码符集大小，但完善了密钥矩阵的生成条件，增强了安全性。</span><br><span class="line">********************博客网址********************</span><br><span class="line">欢迎访问：https://hong-king.github.io/</span><br><span class="line">************************************************</span><br><span class="line">---------------------------------------------------------------</span><br><span class="line">密钥：</span><br><span class="line">1 14 7 21 19 27 13 10 15</span><br><span class="line">请输入需要加密的信息(只能包含空格和小写字母)：asd dfds</span><br><span class="line">密文：</span><br><span class="line">ydtqvv mz</span><br><span class="line">明文：</span><br><span class="line">asd dfds</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;——————-&amp;lt;希尔密码(MOD27)&amp;gt;程序说明——————-&lt;br&gt;该程序目前只接受小写英文加密讯息(支持空格)!&lt;br&gt;每次运行程序，密钥都会改变!&lt;br&gt;该程序相较python版本有所删减，减小了码符集大小，但完善了密钥矩阵的生成条件，增强了安全性。&lt;br
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="C++ 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/C-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="C++" scheme="https://Hong-King.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>元胞自动机在模拟森林野火的应用（Matlab实现）</title>
    <link href="https://hong-king.github.io/2021/02/04/%E5%85%83%E8%83%9E%E8%87%AA%E5%8A%A8%E6%9C%BA%E5%9C%A8%E6%A8%A1%E6%8B%9F%E6%A3%AE%E6%9E%97%E9%87%8E%E7%81%AB%E7%9A%84%E5%BA%94%E7%94%A8%EF%BC%88Matlab%E5%AE%9E%E7%8E%B0%EF%BC%89/"/>
    <id>https://hong-king.github.io/2021/02/04/%E5%85%83%E8%83%9E%E8%87%AA%E5%8A%A8%E6%9C%BA%E5%9C%A8%E6%A8%A1%E6%8B%9F%E6%A3%AE%E6%9E%97%E9%87%8E%E7%81%AB%E7%9A%84%E5%BA%94%E7%94%A8%EF%BC%88Matlab%E5%AE%9E%E7%8E%B0%EF%BC%89/</id>
    <published>2021-02-04T06:28:00.000Z</published>
    <updated>2021-02-04T06:29:46.065Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">close;</span><br><span class="line">clear;</span><br><span class="line">clc;</span><br><span class="line">n = 300;     %元胞矩阵大小</span><br><span class="line">Plight = 0.000001; Pgrowth = 0.001;</span><br><span class="line">UL = [n 1:n-1];</span><br><span class="line">DR = [2:n 1];</span><br><span class="line">veg = zeros(n,n);        %初始化</span><br><span class="line">% The value of veg:</span><br><span class="line">% empty == 0  </span><br><span class="line">% burning == 1</span><br><span class="line">% green == 2</span><br><span class="line">imh = image(cat(3,veg,veg,veg));</span><br><span class="line">m=annotation(<span class="string">'textbox'</span>,[0.1,0.1,0.1,0.1],<span class="string">'LineStyle'</span>,<span class="string">'-'</span>,<span class="string">'LineWidth'</span>,1,<span class="string">'String'</span>,<span class="string">'123'</span>);</span><br><span class="line"><span class="keyword">for</span> i = 1:100000</span><br><span class="line">    sum = (veg(UL,:) == 1) + (veg(:,UL) == 1) + (veg(DR,:) == 1) + (veg(:,DR) == 1);</span><br><span class="line">    %根据规则更新森林矩阵：树 = 树 - 着火的树 + 新生的树</span><br><span class="line">    veg = 2 * (veg == 2) - ( (veg == 2) &amp; (sum &gt; 0 | (rand(n,n) &lt; Plight)) ) + 2 * ( (veg == 0) &amp; rand(n,n) &lt; Pgrowth);</span><br><span class="line">    a=find(veg==2);</span><br><span class="line">    b=find(veg==1);</span><br><span class="line">    aa=length(a);</span><br><span class="line">    bb=length(b);</span><br><span class="line">    shu(i)=aa;</span><br><span class="line">    fire(i)=bb*30;</span><br><span class="line">    <span class="keyword">if</span> (bb&gt;=0&amp;&amp;bb&lt;=10)</span><br><span class="line">        str1=<span class="string">'森林正常'</span>;</span><br><span class="line">    elseif (bb&gt;10&amp;&amp;bb&lt;=100)</span><br><span class="line">        str1=<span class="string">'火灾发展'</span>;</span><br><span class="line">    elseif (bb&gt;100)</span><br><span class="line">        str1=<span class="string">'森林大火'</span>;</span><br><span class="line">    end</span><br><span class="line">    <span class="keyword">if</span> ((aa&gt;48000)||(bb&gt;=10))</span><br><span class="line">        str2=<span class="string">'火灾预警：红色预警'</span>;</span><br><span class="line">    elseif (aa&gt;42000&amp;&amp;aa&lt;=48000)</span><br><span class="line">        str2=<span class="string">'火灾预警：黄色预警'</span>;</span><br><span class="line">    elseif (aa&gt;35000&amp;&amp;aa&lt;=42000)</span><br><span class="line">        str2=<span class="string">'火灾预警：蓝色预警'</span>;</span><br><span class="line">    elseif (aa&gt;=0&amp;&amp;aa&lt;=35000)</span><br><span class="line">        str2=<span class="string">'火灾预警：安全'</span>;</span><br><span class="line">    end </span><br><span class="line">    str=[str1 10 str2];</span><br><span class="line">    <span class="built_in">set</span>(imh, <span class="string">'cdata'</span>, cat(3, (veg == 1), (veg == 2), zeros(n)) )</span><br><span class="line">    drawnow</span><br><span class="line">    figure(2)</span><br><span class="line">    delete(m)</span><br><span class="line">    plot(shu);</span><br><span class="line">    hold on</span><br><span class="line">    plot(fire);</span><br><span class="line">    legend([<span class="string">'绿树的数量'</span>,num2str(aa)],[<span class="string">'火的数量'</span>,num2str(bb)]);</span><br><span class="line">    title([<span class="string">'时间T='</span>,num2str(i),<span class="string">'天'</span>]);</span><br><span class="line">    m=annotation(<span class="string">'textbox'</span>,[0.15,0.8,0.1,0.1],<span class="string">'LineStyle'</span>,<span class="string">'-'</span>,<span class="string">'LineWidth'</span>,1,<span class="string">'String'</span>,str);</span><br><span class="line">    hold off</span><br><span class="line">%     pause(0.0001)</span><br><span class="line">end</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Matlab 算法实现" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Matlab-%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0/"/>
    
    
      <category term="Matlab" scheme="https://Hong-King.github.io/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>泊松分布的卡方检验（Matlab实现）</title>
    <link href="https://hong-king.github.io/2021/02/02/%E6%B3%8A%E6%9D%BE%E5%88%86%E5%B8%83%E7%9A%84%E5%8D%A1%E6%96%B9%E6%A3%80%E9%AA%8C%EF%BC%88Matlab%E5%AE%9E%E7%8E%B0%EF%BC%89/"/>
    <id>https://hong-king.github.io/2021/02/02/%E6%B3%8A%E6%9D%BE%E5%88%86%E5%B8%83%E7%9A%84%E5%8D%A1%E6%96%B9%E6%A3%80%E9%AA%8C%EF%BC%88Matlab%E5%AE%9E%E7%8E%B0%EF%BC%89/</id>
    <published>2021-02-02T02:11:00.000Z</published>
    <updated>2021-02-02T02:34:10.502Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">%&#123;</span><br><span class="line">r = expcdf(x,2.5)*100; %负指数分布(累计)</span><br><span class="line">P = poisscdf(x,2.1)*100; %泊松分布(累计)</span><br><span class="line">r = exppdf(x,2.5)*100; %负指数分布</span><br><span class="line">P = poisspdf(x,2.1)*100; %泊松分布</span><br><span class="line">%&#125;</span><br><span class="line"></span><br><span class="line">x = 0:1:6;</span><br><span class="line">y = poisspdf(x,2.1)*100; %泊松分布的理论值</span><br><span class="line">plot(x,y)</span><br><span class="line">hold on;</span><br><span class="line">x = 0:1:6;</span><br><span class="line">y1 = [10 28 29 16 10 6 1]; %泊松分布的实际值</span><br><span class="line">plot(x,y1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[h,p,stats] = chi2gof(x, <span class="string">'ctrs'</span>, x, <span class="string">'frequency'</span>, y1, <span class="string">'expected'</span>, y, <span class="string">'nparams'</span>,0) %卡方检验</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Matlab 算法实现" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Matlab-%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0/"/>
    
    
      <category term="Matlab" scheme="https://Hong-King.github.io/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>负指数分布的卡方检验（Matlab实现）</title>
    <link href="https://hong-king.github.io/2021/02/02/%E8%B4%9F%E6%8C%87%E6%95%B0%E5%88%86%E5%B8%83%E7%9A%84%E5%8D%A1%E6%96%B9%E6%A3%80%E9%AA%8C%EF%BC%88Matlab%E5%AE%9E%E7%8E%B0%EF%BC%89/"/>
    <id>https://hong-king.github.io/2021/02/02/%E8%B4%9F%E6%8C%87%E6%95%B0%E5%88%86%E5%B8%83%E7%9A%84%E5%8D%A1%E6%96%B9%E6%A3%80%E9%AA%8C%EF%BC%88Matlab%E5%AE%9E%E7%8E%B0%EF%BC%89/</id>
    <published>2021-02-02T02:03:00.000Z</published>
    <updated>2021-02-02T02:12:14.803Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">%&#123;</span><br><span class="line">r = expcdf(x,2.5)*100; %负指数分布(累计)</span><br><span class="line">P = poisscdf(x,2.1)*100; %泊松分布(累计)</span><br><span class="line">r = exppdf(x,2.5)*100; %负指数分布</span><br><span class="line">P = poisspdf(x,2.1)*100; %泊松分布</span><br><span class="line">%&#125;</span><br><span class="line"></span><br><span class="line">x = 0:1:6;</span><br><span class="line">y1 = [38,25,17,9,6,5,0]; %负指数分布实际值</span><br><span class="line">plot(x,y1)</span><br><span class="line">hold on;</span><br><span class="line">x = 0:1:6;</span><br><span class="line">y2 = exppdf(x,2.5)*100; %负指数分布理论值</span><br><span class="line">plot(x,y2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[h,p,stats] = chi2gof(x, <span class="string">'ctrs'</span>, x, <span class="string">'frequency'</span>, y1, <span class="string">'expected'</span>, y2, <span class="string">'nparams'</span>,0) %卡方检验</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Matlab 算法实现" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Matlab-%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0/"/>
    
    
      <category term="Matlab" scheme="https://Hong-King.github.io/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>遗传算法的Matlab实现</title>
    <link href="https://hong-king.github.io/2021/02/02/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95%E7%9A%84Matlab%E5%AE%9E%E7%8E%B0/"/>
    <id>https://hong-king.github.io/2021/02/02/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95%E7%9A%84Matlab%E5%AE%9E%E7%8E%B0/</id>
    <published>2021-02-02T01:18:00.000Z</published>
    <updated>2021-02-02T02:33:14.705Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>遗传算法主函数</p></blockquote><p><strong>k1</strong>为遗传进化总代数，<strong>k2</strong>为计算机显示控制数<br><strong>m</strong>为群体规模，<strong>n</strong>为染色体长度，<strong>t</strong>为交叉算子选择位<br><strong>pc</strong>为交叉概率，<strong>pm</strong>为变异概率，<strong>[a,b]</strong>为解码取值范围<br><strong>A</strong>为进化结束后群体，<strong>xx</strong>为对应解码，<strong>yy</strong>为目标函数值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> [A,xx,yy] = genetic_algorithm(k1,k2,m,n,t,pc,pm,a,b)</span><br><span class="line">%&#123;</span><br><span class="line">k1为遗传进化总代数，k2为计算机显示控制数</span><br><span class="line">m为群体规模，n为染色体长度，t为交叉算子选择位</span><br><span class="line">pc为交叉概率，pm为变异概率，[a,b]为解码取值范围</span><br><span class="line">A为进化结束后群体，xx为对应解码，yy为目标函数值</span><br><span class="line">%&#125;</span><br><span class="line">A = round(rand(m,n)); %生成遗传基因</span><br><span class="line">% round()函数用于取最接近的整数</span><br><span class="line">% rand())函数用于产生由在(0, 1)之间均匀分布的随机数组成的数组。</span><br><span class="line"><span class="keyword">for</span> k = 1:k1</span><br><span class="line">    [g,f] = fun_fitness(A,n,a,b);%计算适应度函数</span><br><span class="line">    A = fun_selection(A,g,m,n);%选择算子</span><br><span class="line">    A = fun_crossover(A,t,n,pc);%交叉算子</span><br><span class="line">    A = fun_mutation(A,pm); %变异算子</span><br><span class="line">    <span class="keyword">if</span> mod(k,k2) == 0</span><br><span class="line">        [xx,yy] = fun_value(A,n,a,b); %函数值计算</span><br><span class="line">        k</span><br><span class="line">        dispx = xx<span class="string">'</span></span><br><span class="line"><span class="string">        dispy = yy'</span></span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">[xx,yy] = fun_value(A,n,a,b);</span><br><span class="line">%[A,xx,yy] = genetic_algorithm(500,100,10,17,9,0.8,0.01,0,10)</span><br></pre></td></tr></table></figure><a id="more"></a><hr><blockquote><p>适应度函数，用于计算A中各染色体的个体适应度</p></blockquote><p><strong>n</strong>为染色体长度，<strong>[a,b]</strong>为变量取值范围，<strong>g</strong>为适应值，<strong>f</strong>为目标函数值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> [g,f] = fun_fitness(A,n,a,b)</span><br><span class="line">%适应度函数，用于计算A中各染色体的个体适应度</span><br><span class="line">%n为染色体长度，[a,b]为变量取值范围，g为适应值，f为目标函数值</span><br><span class="line">[p,~] = size(A);</span><br><span class="line">f = zeros(p,1);</span><br><span class="line">g = zeros(p,1);</span><br><span class="line">vx = fun_decode(A,n,a,b); % 解码操作</span><br><span class="line"><span class="keyword">for</span> i = 1:p</span><br><span class="line">     x = vx(i);</span><br><span class="line">     f(i,1) = 8*sin(5*x)+5*cos(4*x); %目标函数值</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">fmin = min(f);</span><br><span class="line"><span class="keyword">for</span> i = 1:p</span><br><span class="line">    g(i,1) = f(i)-fmin+1; %适应度函数值</span><br><span class="line">end</span><br></pre></td></tr></table></figure><hr><blockquote><p>选择算子</p></blockquote><p>按个体适应度F从种群A中选取m个形成种群B，<strong>n</strong>为基因编码长度</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> B = fun_selection(A,F,m,n)</span><br><span class="line">%选择算子。按个体适应度F从种群A中选取m个形成种群B，n为基因编码长度</span><br><span class="line">[p,~] = size(A);</span><br><span class="line">B = zeros(m,n);</span><br><span class="line">s = sum(F); % 默认对每列进行求和</span><br><span class="line">F = cumsum(F)/s; %cumsum()函数计算元素累加值，默认对每列进行累加</span><br><span class="line">rr = rand(1,m); %</span><br><span class="line"><span class="keyword">for</span> k=1:m</span><br><span class="line">    <span class="keyword">if</span> rr(k)&lt;F(1)</span><br><span class="line">        w = 1;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        con = 1;</span><br><span class="line">        t = 2;</span><br><span class="line">        <span class="keyword">while</span> t &lt;= p &amp;&amp; con == 1 %&amp;&amp;与</span><br><span class="line">            <span class="keyword">if</span> rr(k)&lt;F(t) &amp;&amp; rr(k)&gt;=F(t-1)</span><br><span class="line">                w = t;</span><br><span class="line">                con = 0;</span><br><span class="line">            end</span><br><span class="line">            t = t+1;</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">    B(k,:) = A(w,:);</span><br><span class="line">    %D(k) = w;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><hr><blockquote><p>交叉算子，单点交叉操作。</p></blockquote><p><strong>k</strong>表示选择位，<strong>n</strong>表示总位数，<strong>r</strong>表示交叉概率</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> B = fun_crossover(A,k,n,r)</span><br><span class="line">%交叉算子，单点交叉操作。k表示选择位，n表示总位数，r表示交叉概率</span><br><span class="line">[p,q] = size(A);</span><br><span class="line">B = zeros(p,q);</span><br><span class="line">R = rand(p,1);</span><br><span class="line"><span class="keyword">for</span> i = 1:2:p</span><br><span class="line">    <span class="keyword">if</span> R(i)&lt;r</span><br><span class="line">        a = A(i,:);</span><br><span class="line">        b = A(i+1,:);</span><br><span class="line">        a1 = a(1:k-1);</span><br><span class="line">        a2 = a(k:n);</span><br><span class="line">        b1 = b(1:k-1);</span><br><span class="line">        b2 = b(k:n);</span><br><span class="line">        B(i,:) = [a1,b2];</span><br><span class="line">        B(i+1,:) = [b1,a2];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        B(i,:) = A(i,:);</span><br><span class="line">        B(i+1,:) = A(i+1,:);</span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><hr><blockquote><p>变异算子</p></blockquote><p>以变异概率<strong>r</strong>对种群A中基因进行变异操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> A = fun_mutation(A,r)</span><br><span class="line">%变异算子，以变异概率r对种群A中基因进行变异操作</span><br><span class="line">[p,q] = size(A);</span><br><span class="line">B = rand(p,q);</span><br><span class="line"><span class="keyword">for</span> i = 1:p</span><br><span class="line">    <span class="keyword">for</span> j = 1:q</span><br><span class="line">        <span class="keyword">if</span> B(i,j)&lt;r</span><br><span class="line">            <span class="keyword">if</span> A(i,j) == 1</span><br><span class="line">                A(i,j)=0;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                A(i,j) = 1;</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><hr><blockquote><p>函数值计算</p></blockquote><p><strong>n</strong>为染色体长度，<strong>[a，b]</strong>为变量取值范围，<strong>xx</strong>为染色体解码，<strong>yy</strong>为目标函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> [xx,yy] = fun_value(A,n,a,b)</span><br><span class="line">%函数值计算</span><br><span class="line">%n为染色体长度，[a，b]为变量取值范围，xx为染色体解码，yy为目标函数</span><br><span class="line">[p,q] = size(A);</span><br><span class="line">xx = fun_decode(A,n,a,b);</span><br><span class="line">yy = zeros(p,1);</span><br><span class="line"><span class="keyword">for</span> i=1:p</span><br><span class="line">    x = xx(i);</span><br><span class="line">    yy(i,1) = 8*sin(5*x)+5*cos(4*x);</span><br><span class="line">end</span><br></pre></td></tr></table></figure><hr><blockquote><p>解码操作</p></blockquote><p>将二进制基因编码转换为在<strong>[a,b]</strong>内对应的十进制数值,<strong>n</strong>为染色体长度</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> d = fun_decode(A,n,a,b)</span><br><span class="line">% 解码操作，将二进制基因编码转换为在[a,b]内对应的十进制数值,n为染色体长度</span><br><span class="line">[p,~] = size(A); %p为矩阵行数，q为矩阵列数</span><br><span class="line">d = zeros(p,1);</span><br><span class="line"><span class="keyword">for</span> k = 1:p</span><br><span class="line">    x = A(k,:);</span><br><span class="line">    ss = 0;</span><br><span class="line">    <span class="keyword">for</span> i = 1:n</span><br><span class="line">        ss = ss + x(i)*2^(n-i);</span><br><span class="line">    end</span><br><span class="line">    d(k,1) = a + ss*(b<span class="_">-a</span>)/(2^n-1);</span><br><span class="line">end</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;遗传算法主函数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;k1&lt;/strong&gt;为遗传进化总代数，&lt;strong&gt;k2&lt;/strong&gt;为计算机显示控制数&lt;br&gt;&lt;strong&gt;m&lt;/strong&gt;为群体规模，&lt;strong&gt;n&lt;/strong&gt;为染色体长度，&lt;strong&gt;t&lt;/strong&gt;为交叉算子选择位&lt;br&gt;&lt;strong&gt;pc&lt;/strong&gt;为交叉概率，&lt;strong&gt;pm&lt;/strong&gt;为变异概率，&lt;strong&gt;[a,b]&lt;/strong&gt;为解码取值范围&lt;br&gt;&lt;strong&gt;A&lt;/strong&gt;为进化结束后群体，&lt;strong&gt;xx&lt;/strong&gt;为对应解码，&lt;strong&gt;yy&lt;/strong&gt;为目标函数值&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; [A,xx,yy] = genetic_algorithm(k1,k2,m,n,t,pc,pm,a,b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;%&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;k1为遗传进化总代数，k2为计算机显示控制数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m为群体规模，n为染色体长度，t为交叉算子选择位&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pc为交叉概率，pm为变异概率，[a,b]为解码取值范围&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A为进化结束后群体，xx为对应解码，yy为目标函数值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;%&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A = round(rand(m,n)); %生成遗传基因&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% round()函数用于取最接近的整数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;% rand())函数用于产生由在(0, 1)之间均匀分布的随机数组成的数组。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; k = 1:k1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [g,f] = fun_fitness(A,n,a,b);%计算适应度函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    A = fun_selection(A,g,m,n);%选择算子&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    A = fun_crossover(A,t,n,pc);%交叉算子&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    A = fun_mutation(A,pm); %变异算子&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; mod(k,k2) == 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [xx,yy] = fun_value(A,n,a,b); %函数值计算&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        k&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dispx = xx&lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;        dispy = yy&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[xx,yy] = fun_value(A,n,a,b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;%[A,xx,yy] = genetic_algorithm(500,100,10,17,9,0.8,0.01,0,10)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Matlab 算法实现" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Matlab-%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0/"/>
    
    
      <category term="Matlab" scheme="https://Hong-King.github.io/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>语言之美-新句美文</title>
    <link href="https://hong-king.github.io/2021/02/01/%E8%AF%AD%E8%A8%80%E4%B9%8B%E7%BE%8E-%E6%96%B0%E5%8F%A5%E7%BE%8E%E6%96%87/"/>
    <id>https://hong-king.github.io/2021/02/01/%E8%AF%AD%E8%A8%80%E4%B9%8B%E7%BE%8E-%E6%96%B0%E5%8F%A5%E7%BE%8E%E6%96%87/</id>
    <published>2021-02-01T07:29:00.000Z</published>
    <updated>2021-05-26T14:17:45.096Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>佚名</p></blockquote><ul><li><p><strong>那我们就让敌人有来无回，血流成河，让他们知道这是可怕的一夜。</strong></p></li><li><p><strong>我们的奋斗只有两种结果，要么敌人踏着我们的尸骨过去，要么我们踏着敌人的尸骨过去。</strong></p></li><li><p><strong>当我们遭遇敌人，遭遇苦难时，我们必须反抗，否则他们会踩着我们的头颅拔除血淋淋的剑，唾弃着说，：看！这就是奴隶！</strong></p></li></ul><hr><blockquote><p>佚名</p></blockquote><ul><li><strong>生如亚当，却没有伊甸园的庇护。在这无情无义的世界，我势如撒旦。（Born like Adam, but I had no refuge in the Garden of Eden. In the heartless and unjust world, I am like Satan.）</strong></li></ul><hr><blockquote><p>《敌基督者》-尼采</p></blockquote><ul><li><strong>谁终将声震人间，必长久深自缄默。<br>谁终将点燃闪电，必长久如云漂泊。</strong></li></ul><a id="more"></a><hr><blockquote><p>我</p></blockquote><ul><li><strong>如果地球是平的<br>你向西，我往东，一起跌入这世界尽头<br>从此世界是圆的，我们终会重逢</strong></li></ul><hr><blockquote><p>《随性所欲》</p></blockquote><ul><li><strong>我们花一辈子时间，等待父母给我们道歉；他们花一辈子时间等我们说谢谢，而我们都得不到想要的。</strong></li></ul><hr><blockquote><p>佚名</p></blockquote><ul><li><strong>你写了成百上千条微博、日志或朋友圈，有些是写给专门的人看的。但往往这个人看不到，不会看，也不想看。直到有一天，另一个不相关的人突然跟你说：你写的所有东西我都看完了，好心疼你呀，啊哈——你看，真正在乎你的人读的不是你的某条心情，他们想读的，是你的整个人生。</strong></li></ul><hr><blockquote><p>某位抑郁症患者-佚名</p></blockquote><ul><li><strong>我做了自己最大的抗争，我在无数次放弃自己的边缘拯救自己，也许在别人的世界里我什么也不是，但在我自己的世界里，我是自己的英雄。</strong></li></ul><hr><blockquote><p>佚名</p></blockquote><ul><li><strong>如今我渴望的爱情，不是牵着手一起面对无可预知的未来；不是花前月下浪漫的拥吻；也不是因为寂寞而随便找个人来陪。<br>而是当我面无表情穿梭在人群的时候，不知道会走多远，但知道在路的尽头我可以和你遇见。你张开双臂，来接纳我一身风霜雨雪，心疼地问我一路走来辛不辛苦，累不累。<br>我不言也不语，只把最温柔的笑给你</strong></li></ul><hr><blockquote><p>《道别》-佚名</p></blockquote><p><strong>我对蝉说：<br>他日再见 要待来年<br>蝉对我说：<br>他日重逢 要等来生</strong></p><hr><blockquote><p>《热风》-鲁迅</p></blockquote><ul><li><strong>愿中国青年都摆脱冷气,只是向上走,不必听自暴自弃者流的话。能做事的做事,能发声的发声.有一分热,发一分光,就令萤火一般,也可以在黑暗里发一点光,不必等候炬火。</strong></li><li><strong>此后如竟没有炬火：我便是唯一的光。</strong></li><li><strong>倘若有了炬火,出了太阳,我们自然心悦诚服的消失,不但毫无不平,而且还要随喜赞美这炬火或太阳；因为他照了人类,连我都在内.　　我又愿中国青年都只是向上走,不必理会这冷笑和暗箭。</strong></li></ul><hr><blockquote><p>《终了》-张九南</p></blockquote><ul><li><strong>终是庄周梦了蝶，你是恩赐也是劫。<br>终是李白醉了酒，你是孤独也是愁。<br>终是荆轲刺了秦，一代君王一世民。<br>终是妲己祸了国，万里江山似蹉跎。<br>终是玉环停了曲，无人再懂琵琶语。<br>终是韩信放下枪，你是宿命也是伤。<br>终是悟空成了佛，你一堕落便是魔。<br>终是霸王别了姬，弃了江山负了你。<br>终是后裔断了箭，此生注定难相见。<br>终是评书已截断，从此告别定场诗。</strong></li></ul><hr><blockquote><p>我</p></blockquote><ul><li><strong>照片是光与影的悦动，纠缠着喜或悲的回忆</strong></li></ul><hr><blockquote><p>《波兰来客》-北岛</p></blockquote><ul><li><strong>年轻时我们都有梦想，关于文字，关于爱情，关于穿越世界的旅行。现在我们夜深饮酒杯子撞在一起，听到的都是梦破碎的声音。</strong></li></ul><hr><blockquote><p>《红玫瑰与白玫瑰》-张爱玲 </p></blockquote><ul><li><strong>也许每一个男子全都有过这样的两个女人，至少两个。娶了红玫瑰，久而久之，红的变了墙上的一抹蚊子血，白的还是“床前明月光”；娶了白玫瑰，白的便是衣服上的一粒饭粘子，红的却是心口上的一颗朱砂痣。</strong></li></ul><hr><blockquote><p>《在细雨中呼喊》-余华 </p></blockquote><ul><li><strong>死亡不是失去生命，而是走出了时间。</strong></li></ul><hr><blockquote><p>《生命最后的读书会》-[美] 威尔·施瓦尔贝 </p></blockquote><ul><li><strong>假如你不愿祝福他的王国，那么不要为之祈祷。假如你愿意，不能只靠祈祷，还必须为之努力。-《天国降临》</strong></li></ul><hr><blockquote><p>《江海共余生》-春和</p></blockquote><ul><li><strong>山河远阔，人间星河，无一是你，无一不是你。</strong></li></ul><hr><blockquote><p>《十里红妆女儿梦》-何晓道</p></blockquote><ul><li><strong>待我长发及腰，少年娶我可好？待你青丝绾正，铺十里红妆可愿？ 却怕长发及腰，少年倾心他人。待你青丝绾正，笑看君怀她笑颜。时待我发齐腰长，愿与梦郎诉衷肠。半生缠绵报君享，此情绵绵意长长。时待我发齐腰长，轻舞霓裳意飞扬。襄王神女应无恙，巫山云雨梦得度偿。时待我发齐腰长，红颜老去珠也黄。</strong></li></ul><hr><blockquote><p>《思念往昔》-张小娴</p></blockquote><ul><li><strong>我没有很刻意地去想念你，因为我知道遇到了就应该感恩，路过了就应该释怀。我只是在很多个小瞬间想起你。比如，一部电影，一首歌，一句歌词，一条马路和无数个闭上眼的瞬间。</strong></li></ul><hr><blockquote><p>《后来》-2017年刘若英演唱会后，出自网络</p></blockquote><p><strong>初闻不知曲中意，再闻已是曲中人。<br>既然已是曲中人，何必再听曲中曲。<br>曲中轻忆梦中人，梦醒时分叹红尘。<br>曲终人散梦已醒，何处再寻梦中人。<br>梦中合唱凤求凰，梦醒独奏离别赋。<br>即知曲人存于梦，何故执于曲外人。<br>多少痴梦多少等，难诉痴情曲中人。<br>一萧一页红尘事，一弦一曲了人生。<br>既然已是曲中人，何必再悟曲中意。<br>不愿再做曲中人，奈何越听越沉沦。<br>曲中曲，人中人，曲散人终离，曲终人散早成空。<br>一曲肝肠断，天涯何处觅知音。</strong></p><hr><blockquote><p>《当幸福来敲门》-电影</p></blockquote><ul><li><strong>当人们做不到一些事情的时候，他们就会对你说你也同样不可能。如果你有梦想，就去捍卫它。</strong></li></ul><hr><blockquote><p>《寄生虫》影评-Hong-King改编自网络</p></blockquote><ul><li><strong>有人说电影《寄生虫》太过灰暗，描述了穷富之间难以跨越的鸿沟，书写了生而为人难以逃脱的宿命。但这是阶级的悲剧吗？我更倾向于这是选择的悲剧，亦是悲剧的选择。他们本可以选择上进、勤恳、沟通，却沉沦于寄生和懒惰，暴力和杀戮。生活不是永恒的暴雨倾盆，总有阳光灿烂的时候，但这时候，就要看你如何选择。是躲在屋里仇视外面的阳光，还是冲到阳光下，努力地活一把。</strong></li></ul><hr><blockquote><p>《Like That》-网易云评论</p></blockquote><ul><li><strong>我会变得更好，因为你，但不是为了你。</strong></li></ul><hr><blockquote><p>《记得》-网易云评论</p></blockquote><ul><li><strong>无论我们以后生疏成什么样子，请记得曾经我对你的好是真的。剩下的路就不陪你走了，要照顾好自己，不是每个人都是我，三生有幸，遇见你纵使悲凉也是情。</strong></li></ul><hr><blockquote><p>《被讨厌的勇气》-[日] 岸见一郎/古贺史健  </p></blockquote><ul><li><strong>在阿德勒眼中，理想的人际关系大概是“我爱你，但与你无关”。他认为每个人的课题都是分离又独特的。我怎么爱你，这是我的课题，而你要不要接受我的爱，这是你的课题。</strong></li></ul><hr><blockquote><p>摘自网络</p></blockquote><ul><li><p><strong>有人说，林深时见鹿，海蓝时见鲸，梦醒时见你。可实际，林深时起雾，海蓝时浪涌，梦醒时夜续。但终究，鹿踏雾而来，鲸随浪而起。你没回头又怎知我不在？</strong></p></li><li><p><strong>你认为的完美爱情是从一而终，而现实中的完美爱情，更像是和生活的握手言和。永远不要说永远。</strong></p></li><li><p><strong>我永远喜欢你，不是说我会十年二十年一辈子都喜欢你，而是指，我这一刻喜欢你的程度，让我有勇气说出来我永远喜欢你。</strong></p></li><li><p><strong>过程才是生命，两端都是死亡。</strong></p></li><li><p><strong>每当有人问起，为什么我不恋爱的时候，我都以麻烦为由搪塞过去。又有人开始问我到底喜欢过谁没有，我也轻描淡写地表示否定。无数的朋友告诉我，或许是你还没碰到过真正喜欢的人吧，我却没法开口告诉他们，其实我曾经碰到过，碰得太早，以至于我没来得及分清，也没来得及弄明白。</strong></p></li><li><p><strong>遗憾吗？那么喜欢连张合影都没有</strong></p></li><li><p><strong>没人嘲笑你的梦想，他们只是嘲笑你的实力</strong></p></li><li><p><strong>其实我也是很羡慕别的小女生收到花，收到唇膏，收到各种各样的惊喜，我嘴上说，反正我都买得起，但在心里还是偷偷羡慕过的，所以希望我的恋人，拜托拜托，送花给我，偷偷准备热门色号的唇膏给我，摸摸我的头，天冷的时候把我的手放在你的口袋里，俗气而又热烈的喜欢我。</strong></p></li><li><p><strong>和你一起环游世界拍照，就是一口气做了三件最爱的事情。</strong> —#孔维与诗苑#</p></li><li><p><strong>看你周围，你未来另一半此时正在某个地方，可能坐计程车、看小说、做数学题，收到情书、烹饪、身处旅途、阴天躲在被子里哭、学习怎么打扮、喂猫、给大狗洗澡。就在现在，就在此时此刻，未来注定要和你在一起的那个人，正在努力制造着你们一起躺在床上的那无数个夜晚里准备讲给你的回忆和故事。</strong>—博主:#小羊爱吃酱肘子#</p></li><li><p><strong>温柔仅供参考，一切请以生气时间为准</strong></p></li><li><p><strong>我是檐上三寸雪，你是人间惊鸿客</strong></p></li><li><p><strong>去做你害怕的事，最后你会发现：其实不过如此。</strong></p></li><li><p><strong>把欺负你的人打疼，一次就够了。</strong></p></li><li><p><strong>苦难就是苦难，是我们自己足够坚强挺过了苦难，是我们自己从苦难中不断成长。</strong></p></li><li><p><strong>虽然也会有数不尽的悲伤，但我终将与你相遇</strong></p></li></ul><hr><blockquote><p>Hong-King</p></blockquote><ul><li><strong>我曾经害怕死亡，有太多人类的奇迹是我看不到的，但我没发现同时我也是幸运的，这个时代本身就有很多奇迹等着我们去创造。</strong></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;佚名&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;那我们就让敌人有来无回，血流成河，让他们知道这是可怕的一夜。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;我们的奋斗只有两种结果，要么敌人踏着我们的尸骨过去，要么我们踏着敌人的尸骨过去。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;当我们遭遇敌人，遭遇苦难时，我们必须反抗，否则他们会踩着我们的头颅拔除血淋淋的剑，唾弃着说，：看！这就是奴隶！&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;佚名&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;生如亚当，却没有伊甸园的庇护。在这无情无义的世界，我势如撒旦。（Born like Adam, but I had no refuge in the Garden of Eden. In the heartless and unjust world, I am like Satan.）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;《敌基督者》-尼采&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;谁终将声震人间，必长久深自缄默。&lt;br&gt;谁终将点燃闪电，必长久如云漂泊。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="佳句收录 新句美文" scheme="https://Hong-King.github.io/categories/%E4%BD%B3%E5%8F%A5%E6%94%B6%E5%BD%95-%E6%96%B0%E5%8F%A5%E7%BE%8E%E6%96%87/"/>
    
    
      <category term="语言之美" scheme="https://Hong-King.github.io/tags/%E8%AF%AD%E8%A8%80%E4%B9%8B%E7%BE%8E/"/>
    
  </entry>
  
  <entry>
    <title>希尔密码(Hill Cipher)的Python实现</title>
    <link href="https://hong-king.github.io/2020/12/11/%E5%B8%8C%E5%B0%94%E5%AF%86%E7%A0%81(Hill%20Cipher)%E7%9A%84Python%E5%AE%9E%E7%8E%B0/"/>
    <id>https://hong-king.github.io/2020/12/11/%E5%B8%8C%E5%B0%94%E5%AF%86%E7%A0%81(Hill%20Cipher)%E7%9A%84Python%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-12-11T13:59:00.000Z</published>
    <updated>2020-12-11T14:00:21.361Z</updated>
    
    <content type="html"><![CDATA[<p>此程序为希尔密码(Hill Cipher)的Python实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">All rights reserved by Liu Junhong</span></span><br><span class="line"><span class="string">Reference books: 《信息论基础》、百度百科-希尔密码 (https://baike.baidu.com/item/%E5%B8%8C%E5%B0%94%E5%AF%86%E7%A0%81/2250150?fr=aladdin)</span></span><br><span class="line"><span class="string">Completion time：2020-11-27</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">import math</span><br><span class="line">import numpy as np</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"><span class="comment">#加/解密算法</span></span><br><span class="line">def <span class="keyword">function</span>(matrix):</span><br><span class="line">    List = []</span><br><span class="line">    STR = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> message:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(i)):</span><br><span class="line">            <span class="keyword">for</span> h <span class="keyword">in</span> i[j]:</span><br><span class="line">                List.append(letter_dict[h])</span><br><span class="line">            <span class="keyword">if</span> len(i)- j &gt; 1:</span><br><span class="line">                List.append(letter_dict[<span class="string">' '</span>])</span><br><span class="line">        <span class="keyword">while</span>(not len(List)%4 == 0):</span><br><span class="line">            List.append(letter_dict[<span class="string">' '</span>])</span><br><span class="line">        B = np.array(List).reshape(-1,4)</span><br><span class="line">        C = np.dot(matrix,np.transpose(B))</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> np.transpose(C).reshape(1,-1)[0]:</span><br><span class="line">            STR = STR + num_dict[(round(k))%53]         <span class="comment">#round()确保矩阵计算精度</span></span><br><span class="line">        <span class="built_in">print</span>(STR)</span><br><span class="line">        List = []     </span><br><span class="line">        STR = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#程序说明</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Designed by 刘俊宏：All rights reserved"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: 《信息论基础》、百度百科-希尔密码 (https://baike.baidu.com/item/%E5%B8%8C%E5%B0%94%E5%AF%86%E7%A0%81/2250150?fr=aladdin)"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Completion time：2020-11-27"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Last modification time ：2020-11-28"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------&lt;希尔密码(MOD53)&gt;程序说明-------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"该程序目前只接受大小写英文加密讯息(支持空格)!"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"若要结束输入，请按两次回车"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"每次运行程序，密钥都会改变!"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"为保证解码顺利，密钥矩阵|A|=+/-1!"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"********************博客网址********************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"欢迎访问：https://hong-king.github.io/"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"************************************************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"---------------------------------------------------------------"</span>,<span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建码符集</span></span><br><span class="line">letter = [<span class="string">' '</span>]+[chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(97, 123)] + [chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(65, 91)]</span><br><span class="line">letter_dict = dict(zip(letter,range(len(letter))))</span><br><span class="line">num_dict = dict(zip(range(len(letter)),letter))</span><br><span class="line">                   </span><br><span class="line"><span class="comment">#*******录入数据</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"请输入需要加密的英文讯息:"</span>)</span><br><span class="line">message = []</span><br><span class="line">try:</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        m = sys.stdin.readline().strip() <span class="comment">#若是多输入，strip()默认是以空格分隔，返回一个包含多个字符串的list。</span></span><br><span class="line">        <span class="keyword">if</span> m == <span class="string">''</span>:</span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        m = list(m.split())</span><br><span class="line">        message.append(m)</span><br><span class="line">except:</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"正在加密，请稍后...."</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成随机4阶可逆矩阵(密钥)</span></span><br><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">为减小运算压力，设随机矩阵大小为4*4，随机整数元素区间为[1,10]</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">A = np.random.randint(1, 10, size=(4,4)) <span class="comment">#生成[1,10]区间的整数随机矩阵(密钥)</span></span><br><span class="line"><span class="keyword">while</span> (not abs(np.linalg.det(A)) == 1 ): <span class="comment">#该条件用于保证密钥的逆矩阵为整数</span></span><br><span class="line">    A = np.random.randint(1, 10, size=(4,4))</span><br><span class="line">A_Inv = np.linalg.inv(A)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------密钥-------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(A)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------密文-------------------"</span>)</span><br><span class="line"><span class="keyword">function</span>(A)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"****************解码****************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"请输入密文："</span>)</span><br><span class="line">message = []</span><br><span class="line">try:</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        m = sys.stdin.readline().strip() <span class="comment">#若是多输入，strip()默认是以空格分隔，返回一个包含多个字符串的list。</span></span><br><span class="line">        <span class="keyword">if</span> m == <span class="string">''</span>:</span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        m = list(m.split())</span><br><span class="line">        message.append(m)</span><br><span class="line">except:</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"正在解密，请稍后...."</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------原文-------------------"</span>)</span><br><span class="line"><span class="keyword">function</span>(A_Inv)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;此程序为希尔密码(Hill Cipher)的Python实现&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python 从输入端读取多行数据</title>
    <link href="https://hong-king.github.io/2020/11/27/Python%20%E4%BB%8E%E8%BE%93%E5%85%A5%E7%AB%AF%E8%AF%BB%E5%8F%96%E5%A4%9A%E8%A1%8C%E6%95%B0%E6%8D%AE/"/>
    <id>https://hong-king.github.io/2020/11/27/Python%20%E4%BB%8E%E8%BE%93%E5%85%A5%E7%AB%AF%E8%AF%BB%E5%8F%96%E5%A4%9A%E8%A1%8C%E6%95%B0%E6%8D%AE/</id>
    <published>2020-11-27T08:49:00.000Z</published>
    <updated>2020-11-27T08:53:33.406Z</updated>
    
    <content type="html"><![CDATA[<p>该方法解决Python从输入端一次读取多个数据的问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">try:</span><br><span class="line">    mx = []</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        m = sys.stdin.readline().strip()</span><br><span class="line">        <span class="comment">#若是多输入，strip()默认是以空格分隔，返回一个包含多个字符串的list。</span></span><br><span class="line">        <span class="keyword">if</span> m == <span class="string">''</span>:</span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        m = list(m.split())</span><br><span class="line">        mx.append(m)</span><br><span class="line">    <span class="built_in">print</span>(mx)</span><br><span class="line">except:</span><br><span class="line">    pass</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;该方法解决Python从输入端一次读取多个数据的问题&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cla
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>利用reshape重塑数组</title>
    <link href="https://hong-king.github.io/2020/11/27/%E5%88%A9%E7%94%A8reshape%E9%87%8D%E5%A1%91numpy%E6%95%B0%E7%BB%84/"/>
    <id>https://hong-king.github.io/2020/11/27/%E5%88%A9%E7%94%A8reshape%E9%87%8D%E5%A1%91numpy%E6%95%B0%E7%BB%84/</id>
    <published>2020-11-27T08:49:00.000Z</published>
    <updated>2020-11-27T08:49:31.996Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在数据预处理阶段，我们经常需要重塑数组。这里所介绍的numpy内置属性reshape将有助于此</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">z = np.array([[1, 2, 3, 4],[5, 6, 7, 8],[9, 10, 11, 12],[13, 14, 15, 16]])</span><br><span class="line"><span class="comment"># 创建一个形状为（4，4）的数组[z]</span></span><br><span class="line">a = z.reshape(-1)</span><br><span class="line"><span class="comment">#reshape(1,-1)转化成1行：</span></span><br><span class="line"><span class="comment">#reshape(2,-1)转换成两行：</span></span><br><span class="line"><span class="comment">#reshape(-1,1)转换成1列：</span></span><br><span class="line"><span class="comment">#reshape(-1,2)转化成两列</span></span><br><span class="line"><span class="comment"># 使用reshape重塑数组[z]</span></span><br><span class="line">[out]:</span><br><span class="line">[ 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 ]</span><br><span class="line"><span class="comment">#----------------------------------------------------------</span></span><br><span class="line">a = z.reshape(-1,2)</span><br><span class="line"><span class="comment"># 在这种用法中，-1可以理解为数组行数待定，2表示重组后的数组列数为2</span></span><br><span class="line">[out]:</span><br><span class="line">[[ 1  2]</span><br><span class="line"> [ 3  4]</span><br><span class="line"> [ 5  6]</span><br><span class="line"> [ 7  8]</span><br><span class="line"> [ 9 10]</span><br><span class="line"> [11 12]</span><br><span class="line"> [13 14]</span><br><span class="line"> [15 16]]</span><br><span class="line"><span class="comment">#--------------------------------------------------------------</span></span><br><span class="line">a = z.reshape(2,2,4)</span><br><span class="line"><span class="comment"># 也可以指定行列，但重组后的矩阵元素数量必须与之前相同</span></span><br><span class="line">[out]:</span><br><span class="line">[[[ 1  2  3  4]</span><br><span class="line">  [ 5  6  7  8]]</span><br><span class="line"></span><br><span class="line"> [[ 9 10 11 12]</span><br><span class="line">  [13 14 15 16]]]</span><br></pre></td></tr></table></figure><blockquote><p>在TensorFlow中还可以利用tf.reshape对数组重塑</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tf.reshape(tensor,shape,name=None)</span><br><span class="line"><span class="comment"># tensor表示要处理的对象，shape表示目标矩阵形状（如[num，num]）</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;在数据预处理阶段，我们经常需要重塑数组。这里所介绍的numpy内置属性reshape将有助于此&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 基础语法" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>哈夫曼(Huffman)编码的Python实现</title>
    <link href="https://hong-king.github.io/2020/11/25/%E5%93%88%E5%A4%AB%E6%9B%BC(Huffman)%E7%BC%96%E7%A0%81%E7%9A%84Python%E5%AE%9E%E7%8E%B0/"/>
    <id>https://hong-king.github.io/2020/11/25/%E5%93%88%E5%A4%AB%E6%9B%BC(Huffman)%E7%BC%96%E7%A0%81%E7%9A%84Python%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-11-25T12:18:00.000Z</published>
    <updated>2020-11-25T12:20:10.877Z</updated>
    
    <content type="html"><![CDATA[<p>此程序为哈夫曼(Huffman)编码的Python实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">All rights reserved by Liu Junhong</span></span><br><span class="line"><span class="string">Reference books: 《信息论基础》</span></span><br><span class="line"><span class="string">Completion time：2020-11-24</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">import math</span><br><span class="line"></span><br><span class="line"><span class="comment">#程序说明</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------&lt;哈夫曼编码&gt;程序说明-------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Designed by 刘俊宏：All rights reserved"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: 《信息论基础》、百度百科-哈夫曼编码 (https://baike.baidu.com/item/%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81/1719730?fr=aladdin)"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Completion time：2020-11-24"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Last modification time ：2020-11-25"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"--------------------------------------------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#*******录入数据</span></span><br><span class="line">N_num = <span class="built_in">float</span>(input(<span class="string">"请输入需要编码字符个数："</span>))</span><br><span class="line"><span class="keyword">while</span>(N_num &lt;= 0 or (N_num % 1)):</span><br><span class="line">    N_num = <span class="built_in">float</span>(input(<span class="string">"请输入正整数："</span>))</span><br><span class="line">N_num = int(N_num)</span><br><span class="line"></span><br><span class="line">Dict = []</span><br><span class="line">Huffman_dict = &#123;&#125;</span><br><span class="line">probability = 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(N_num &gt; 0):</span><br><span class="line">    N_num = N_num-1</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"------还需输入"</span>,N_num,<span class="string">"编码字符信息------"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"请输入一个编码字符名："</span>)</span><br><span class="line">    name = str(input())</span><br><span class="line">    Huffman_dict.setdefault(name)</span><br><span class="line">    Huffman_dict[name] = <span class="string">''</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"请输入小于"</span>,probability,<span class="string">"的对应编码字符概率："</span>)</span><br><span class="line">    value = <span class="built_in">float</span>(input())</span><br><span class="line">    probability = probability - value</span><br><span class="line">    Dict.append((value,[name]))</span><br><span class="line"></span><br><span class="line"><span class="comment">#按概率排序</span></span><br><span class="line">Dict_order=sorted(Dict,reverse=False)</span><br><span class="line"></span><br><span class="line"><span class="comment">#编码算法</span></span><br><span class="line">Dict_order_copy = Dict_order</span><br><span class="line">Dict_order_copy_copy = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(len(Dict_order_copy)&gt;1):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(int(len(Dict_order_copy)/2)):</span><br><span class="line">        <span class="keyword">if</span> len(Dict_order_copy)-2*(i+1) == 1:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> Dict_order_copy[2*i][1]:</span><br><span class="line">                </span><br><span class="line">                   Huffman_dict[j] =  <span class="string">'0'</span> + Huffman_dict[j]</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> Dict_order_copy[2*i+1][1]:</span><br><span class="line">                   Huffman_dict[j] =  <span class="string">'1'</span> + Huffman_dict[j]</span><br><span class="line">               </span><br><span class="line">            Dict_order_copy_copy.append((Dict_order_copy[2*i][0]+Dict_order_copy[2*i+1][0],Dict_order_copy[2*i][1]+Dict_order_copy[2*i+1][1]))</span><br><span class="line">            Dict_order_copy_copy.append((Dict_order_copy[len(Dict_order_copy)-1][0],Dict_order_copy[len(Dict_order_copy)-1][1]))</span><br><span class="line">        <span class="keyword">else</span>:    </span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> Dict_order_copy[2*i][1]:</span><br><span class="line">                   Huffman_dict[j] = <span class="string">'0'</span> + Huffman_dict[j]</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> Dict_order_copy[2*i+1][1]:</span><br><span class="line">                   Huffman_dict[j] = <span class="string">'1'</span> + Huffman_dict[j]</span><br><span class="line">                   </span><br><span class="line">            Dict_order_copy_copy.append((Dict_order_copy[2*i][0]+Dict_order_copy[2*i+1][0],Dict_order_copy[2*i][1]+Dict_order_copy[2*i+1][1]))</span><br><span class="line">            </span><br><span class="line">    Dict_order_copy = sorted(Dict_order_copy_copy,reverse=False)</span><br><span class="line"></span><br><span class="line">    Dict_order_copy_copy = []</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果</span></span><br><span class="line"><span class="built_in">print</span>(Huffman_dict)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;此程序为哈夫曼(Huffman)编码的Python实现&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cl
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>费诺(Fano)编码的Python实现</title>
    <link href="https://hong-king.github.io/2020/11/25/%E8%B4%B9%E8%AF%BA(Fano)%E7%BC%96%E7%A0%81%E7%9A%84Python%E5%AE%9E%E7%8E%B0/"/>
    <id>https://hong-king.github.io/2020/11/25/%E8%B4%B9%E8%AF%BA(Fano)%E7%BC%96%E7%A0%81%E7%9A%84Python%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-11-25T10:17:00.000Z</published>
    <updated>2020-11-25T10:17:53.897Z</updated>
    
    <content type="html"><![CDATA[<p>此程序为费诺编码的Python实现,但此版本存在缺陷：每个编码符号出现的概率不能相同。该问题在第二个程序得到改进。</p><blockquote><p>第一个程序</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">All rights reserved by Liu Junhong</span></span><br><span class="line"><span class="string">Reference books: 《信息论基础》</span></span><br><span class="line"><span class="string">Completion time：2020-11-24</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line"><span class="comment">#import numpy as np</span></span><br><span class="line"><span class="comment">#import pandas</span></span><br><span class="line"><span class="comment">#import time</span></span><br><span class="line">import math</span><br><span class="line"><span class="comment">#import sys</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#程序说明</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------&lt;费诺编码&gt;程序说明-------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Designed by 刘俊宏：All rights reserved"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: 《信息论基础》、百度百科-费诺编码 (https://baike.baidu.com/item/%E8%B4%B9%E8%AF%BA%E7%BC%96%E7%A0%81)"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Completion time：2020-11-24"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Last modification time ：2020-11-24"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"--------------------------------------------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#*******录入数据</span></span><br><span class="line">N_num = <span class="built_in">float</span>(input(<span class="string">"请输入需要编码字符个数："</span>))</span><br><span class="line"><span class="keyword">while</span>(N_num &lt;= 0 or (N_num % 1)):</span><br><span class="line">    N_num = <span class="built_in">float</span>(input(<span class="string">"请输入正整数："</span>))</span><br><span class="line">N_num = int(N_num)</span><br><span class="line"></span><br><span class="line">Dict = &#123;&#125;</span><br><span class="line">probability = 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(N_num &gt; 0):</span><br><span class="line">    N_num = N_num-1</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"------还需输入"</span>,N_num,<span class="string">"编码字符信息------"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"请输入一个编码字符名："</span>)</span><br><span class="line">    name = str(input())</span><br><span class="line">    Dict.setdefault(name)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"请输入小于"</span>,probability,<span class="string">"的对应编码字符概率："</span>)</span><br><span class="line">    value = <span class="built_in">float</span>(input())</span><br><span class="line">    probability = probability - value</span><br><span class="line">    Dict[name] = value</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(Dict)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#按概率排序</span></span><br><span class="line">Dict_order=sorted(Dict.items(),key=lambda x:x[1],reverse=True)</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(Dict_order)</span></span><br><span class="line"><span class="comment">#sys.exit(0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#编码算法</span></span><br><span class="line">name = []</span><br><span class="line">value = []</span><br><span class="line"><span class="comment">#code = []</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#truncation = 0 #保存截断位置</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> Dict_order:</span><br><span class="line">    name.append(i[0])</span><br><span class="line">    value.append(i[1])</span><br><span class="line">    </span><br><span class="line">Fano_dict_value = &#123;&#125;.fromkeys(value,<span class="string">''</span>)</span><br><span class="line"><span class="comment">#print(name)</span></span><br><span class="line"><span class="comment">#print(value)</span></span><br><span class="line"></span><br><span class="line">value_copy = [value]</span><br><span class="line">value_copy_copy = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(len(value_copy)&gt;0):</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> value_copy:</span><br><span class="line">        <span class="keyword">if</span> len(k) == 2:</span><br><span class="line">            Fano_dict_value[k[0]] = Fano_dict_value[k[0]] + <span class="string">'0'</span></span><br><span class="line">            Fano_dict_value[k[1]] = Fano_dict_value[k[1]] + <span class="string">'1'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(k)):</span><br><span class="line">                a = sum(k[:i])</span><br><span class="line">                b = sum(k[i:])</span><br><span class="line">                c = sum(k[:(i+1)])</span><br><span class="line">                d = sum(k[(i+1):])</span><br><span class="line">                <span class="keyword">if</span> abs(a-b)&lt;abs(c<span class="_">-d</span>):</span><br><span class="line">                    <span class="keyword">if</span> i == 1:</span><br><span class="line">                        Fano_dict_value[k[0]] = Fano_dict_value[k[0]] + <span class="string">'0'</span></span><br><span class="line">                        value_copy_copy.append(k[1:])</span><br><span class="line">                        <span class="keyword">for</span> h <span class="keyword">in</span> k[1:]:</span><br><span class="line">                            Fano_dict_value[h] = Fano_dict_value[h] + <span class="string">'1'</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        value_copy_copy.append(k[:i])</span><br><span class="line">                        value_copy_copy.append(k[i:])</span><br><span class="line">                        <span class="keyword">for</span> j <span class="keyword">in</span> k[:i]:</span><br><span class="line">                            Fano_dict_value[j] = Fano_dict_value[j] + <span class="string">'0'</span></span><br><span class="line">                        <span class="keyword">for</span> h <span class="keyword">in</span> k[i:]:</span><br><span class="line">                            Fano_dict_value[h] = Fano_dict_value[h] + <span class="string">'1'</span></span><br><span class="line">                    <span class="built_in">break</span></span><br><span class="line">    value_copy = value_copy_copy</span><br><span class="line">    value_copy_copy = []</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果</span></span><br><span class="line">Fano_dict = dict(zip(name,Fano_dict_value.values()))</span><br><span class="line"><span class="built_in">print</span>(Fano_dict)</span><br></pre></td></tr></table></figure><a id="more"></a><blockquote><p>第二个程序</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">All rights reserved by Liu Junhong</span></span><br><span class="line"><span class="string">Reference books: 《信息论基础》</span></span><br><span class="line"><span class="string">Completion time：2020-11-24</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">import math</span><br><span class="line"></span><br><span class="line"><span class="comment">#程序说明</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------&lt;费诺编码&gt;程序说明-------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Designed by 刘俊宏：All rights reserved"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: 《信息论基础》、百度百科-费诺编码 (https://baike.baidu.com/item/%E8%B4%B9%E8%AF%BA%E7%BC%96%E7%A0%81)"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Completion time：2020-11-24"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Last modification time ：2020-11-25"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"--------------------------------------------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#*******录入数据</span></span><br><span class="line">N_num = <span class="built_in">float</span>(input(<span class="string">"请输入需要编码字符个数："</span>))</span><br><span class="line"><span class="keyword">while</span>(N_num &lt;= 0 or (N_num % 1)):</span><br><span class="line">    N_num = <span class="built_in">float</span>(input(<span class="string">"请输入正整数："</span>))</span><br><span class="line">N_num = int(N_num)</span><br><span class="line"></span><br><span class="line">Dict = &#123;&#125;</span><br><span class="line">probability = 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(N_num &gt; 0):</span><br><span class="line">    N_num = N_num-1</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"------还需输入"</span>,N_num,<span class="string">"编码字符信息------"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"请输入一个编码字符名："</span>)</span><br><span class="line">    name = str(input())</span><br><span class="line">    Dict.setdefault(name)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"请输入小于"</span>,probability,<span class="string">"的对应编码字符概率："</span>)</span><br><span class="line">    value = <span class="built_in">float</span>(input())</span><br><span class="line">    probability = probability - value</span><br><span class="line">    Dict[name] = value</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#按概率排序</span></span><br><span class="line">Dict_order=sorted(Dict.items(),key=lambda x:x[1],reverse=True)</span><br><span class="line"></span><br><span class="line"><span class="comment">#编码算法</span></span><br><span class="line">name = []</span><br><span class="line">value = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> Dict_order:</span><br><span class="line">    name.append(i[0])</span><br><span class="line">    value.append(i[1])</span><br><span class="line">    </span><br><span class="line">Fano_dict = &#123;&#125;.fromkeys(name,<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line">value_copy = [value]</span><br><span class="line">value_copy_copy = []</span><br><span class="line">name_copy = [name]</span><br><span class="line">name_copy_copy = []</span><br><span class="line"><span class="keyword">while</span>(len(value_copy)&gt;0):</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(len(value_copy)):</span><br><span class="line">        <span class="keyword">if</span> len(value_copy[k]) == 2:</span><br><span class="line">            Fano_dict[name_copy[k][0]] = Fano_dict[name_copy[k][0]] + <span class="string">'0'</span></span><br><span class="line">            Fano_dict[name_copy[k][1]] = Fano_dict[name_copy[k][1]] + <span class="string">'1'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(value_copy[k])):</span><br><span class="line">                a = sum(value_copy[k][:i])</span><br><span class="line">                b = sum(value_copy[k][i:])</span><br><span class="line">                c = sum(value_copy[k][:(i+1)])</span><br><span class="line">                d = sum(value_copy[k][(i+1):])</span><br><span class="line">                <span class="keyword">if</span> abs(a-b)&lt;abs(c<span class="_">-d</span>):</span><br><span class="line">                    <span class="keyword">if</span> i == 1:</span><br><span class="line">                        Fano_dict[name_copy[k][0]] = Fano_dict[name_copy[k][0]] + <span class="string">'0'</span></span><br><span class="line">                        value_copy_copy.append(value_copy[k][1:])</span><br><span class="line">                        name_copy_copy.append(name_copy[k][1:])</span><br><span class="line">                        <span class="keyword">for</span> h <span class="keyword">in</span> name_copy[k][1:]:</span><br><span class="line">                            Fano_dict[h] = Fano_dict[h] + <span class="string">'1'</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        value_copy_copy.append(value_copy[k][:i])</span><br><span class="line">                        value_copy_copy.append(value_copy[k][i:])</span><br><span class="line">                        name_copy_copy.append(name_copy[k][:i])</span><br><span class="line">                        name_copy_copy.append(name_copy[k][i:])</span><br><span class="line">                        <span class="keyword">for</span> j <span class="keyword">in</span> name_copy[k][:i]:</span><br><span class="line">                            Fano_dict[j] = Fano_dict[j] + <span class="string">'0'</span></span><br><span class="line">                        <span class="keyword">for</span> h <span class="keyword">in</span> name_copy[k][i:]:</span><br><span class="line">                            Fano_dict[h] = Fano_dict[h] + <span class="string">'1'</span></span><br><span class="line">                    <span class="built_in">break</span></span><br><span class="line">    value_copy = value_copy_copy</span><br><span class="line">    name_copy = name_copy_copy</span><br><span class="line">    value_copy_copy = []</span><br><span class="line">    name_copy_copy = []</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果</span></span><br><span class="line"><span class="built_in">print</span>(Fano_dict)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此程序为费诺编码的Python实现,但此版本存在缺陷：每个编码符号出现的概率不能相同。该问题在第二个程序得到改进。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第一个程序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;All rights reserved by Liu Junhong&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;Reference books: 《信息论基础》&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;Completion time：2020-11-24&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#import numpy as np&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#import pandas&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#import time&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import math&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#import sys&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#程序说明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;-------------------&amp;lt;费诺编码&amp;gt;程序说明-------------------&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Designed by 刘俊宏：All rights reserved&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Reference books: 《信息论基础》、百度百科-费诺编码 (https://baike.baidu.com/item/%E8%B4%B9%E8%AF%BA%E7%BC%96%E7%A0%81)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Completion time：2020-11-24&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Last modification time ：2020-11-24&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;--------------------------------------------------------&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#*******录入数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;N_num = &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt;(input(&lt;span class=&quot;string&quot;&gt;&quot;请输入需要编码字符个数：&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(N_num &amp;lt;= 0 or (N_num % 1)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    N_num = &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt;(input(&lt;span class=&quot;string&quot;&gt;&quot;请输入正整数：&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;N_num = int(N_num)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Dict = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;probability = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(N_num &amp;gt; 0):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    N_num = N_num-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;------还需输入&quot;&lt;/span&gt;,N_num,&lt;span class=&quot;string&quot;&gt;&quot;编码字符信息------&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;请输入一个编码字符名：&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name = str(input())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Dict.setdefault(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;请输入小于&quot;&lt;/span&gt;,probability,&lt;span class=&quot;string&quot;&gt;&quot;的对应编码字符概率：&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value = &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt;(input())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    probability = probability - value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Dict[name] = value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#print(Dict)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#按概率排序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Dict_order=sorted(Dict.items(),key=lambda x:x[1],reverse=True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#print(Dict_order)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#sys.exit(0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#编码算法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;value = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#code = []&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#truncation = 0 #保存截断位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; Dict_order:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name.append(i[0])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value.append(i[1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Fano_dict_value = &amp;#123;&amp;#125;.fromkeys(value,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#print(name)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#print(value)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;value_copy = [value]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;value_copy_copy = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(len(value_copy)&amp;gt;0):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; k &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; value_copy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(k) == 2:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Fano_dict_value[k[0]] = Fano_dict_value[k[0]] + &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Fano_dict_value[k[1]] = Fano_dict_value[k[1]] + &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(k)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                a = sum(k[:i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                b = sum(k[i:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                c = sum(k[:(i+1)])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                d = sum(k[(i+1):])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; abs(a-b)&amp;lt;abs(c&lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i == 1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        Fano_dict_value[k[0]] = Fano_dict_value[k[0]] + &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        value_copy_copy.append(k[1:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; h &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; k[1:]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            Fano_dict_value[h] = Fano_dict_value[h] + &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        value_copy_copy.append(k[:i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        value_copy_copy.append(k[i:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; k[:i]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            Fano_dict_value[j] = Fano_dict_value[j] + &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; h &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; k[i:]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            Fano_dict_value[h] = Fano_dict_value[h] + &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;built_in&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value_copy = value_copy_copy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value_copy_copy = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#输出结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Fano_dict = dict(zip(name,Fano_dict_value.values()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(Fano_dict)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>香农(Shannon)编码的Python实现</title>
    <link href="https://hong-king.github.io/2020/11/24/%E9%A6%99%E5%86%9C(Shannon)%E7%BC%96%E7%A0%81%E7%9A%84Python%E5%AE%9E%E7%8E%B0/"/>
    <id>https://hong-king.github.io/2020/11/24/%E9%A6%99%E5%86%9C(Shannon)%E7%BC%96%E7%A0%81%E7%9A%84Python%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-11-24T10:53:00.000Z</published>
    <updated>2020-11-24T10:57:04.877Z</updated>
    
    <content type="html"><![CDATA[<p>此程序为香农编码的Python实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">All rights reserved by Liu Junhong</span></span><br><span class="line"><span class="string">Reference books: 《信息论基础》</span></span><br><span class="line"><span class="string">Completion time：2020-11-23</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line"><span class="comment">#import numpy as np</span></span><br><span class="line"><span class="comment">#import pandas</span></span><br><span class="line"><span class="comment">#import time</span></span><br><span class="line">import math</span><br><span class="line"><span class="comment">#import sys</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#程序说明</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------&lt;香农编码&gt;程序说明-------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Designed by 刘俊宏：All rights reserved"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: 《信息论基础》、百度百科-香农编码 (https://baike.baidu.com/item/%E9%A6%99%E5%86%9C%E7%BC%96%E7%A0%81/22353186?fr=aladdin)"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Completion time：2020-11-23"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Last modification time ：2020-11-23"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"--------------------------------------------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#*******录入数据</span></span><br><span class="line">N_num = <span class="built_in">float</span>(input(<span class="string">"请输入需要编码字符个数："</span>))</span><br><span class="line"><span class="keyword">while</span>(N_num &lt;= 0 or (N_num % 1)):</span><br><span class="line">    N_num = <span class="built_in">float</span>(input(<span class="string">"请输入正整数："</span>))</span><br><span class="line">N_num = int(N_num)</span><br><span class="line"></span><br><span class="line">Dict = &#123;&#125;</span><br><span class="line">probability = 1</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(N_num &gt; 0):</span><br><span class="line">    N_num = N_num-1</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"------还需输入"</span>,N_num,<span class="string">"编码字符信息------"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"请输入一个编码字符名："</span>)</span><br><span class="line">    name = str(input())</span><br><span class="line">    Dict.setdefault(name)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"请输入小于"</span>,probability,<span class="string">"的对应编码字符概率："</span>)</span><br><span class="line">    value = <span class="built_in">float</span>(input())</span><br><span class="line">    probability = probability - value</span><br><span class="line">    Dict[name] = value</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(Dict)</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">#按概率排序</span></span><br><span class="line">Dict_order=sorted(Dict.items(),key=lambda x:x[1],reverse=True)</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(Dict_order)</span></span><br><span class="line"><span class="comment">#sys.exit(0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#编码算法</span></span><br><span class="line">Q = 0  <span class="comment">#累加概率</span></span><br><span class="line">Shannon_dict = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> Dict_order:</span><br><span class="line">    P = i[1]    <span class="comment">#字符概率</span></span><br><span class="line">    L = math.ceil(-math.log(P,2)) <span class="comment">#码长</span></span><br><span class="line">    Autoregressive_variable = 0</span><br><span class="line">    num = Q</span><br><span class="line">    word = <span class="string">""</span>   <span class="comment">#码字</span></span><br><span class="line">    <span class="keyword">while</span>(Autoregressive_variable &lt; L):</span><br><span class="line">        <span class="keyword">if</span> int(num) &lt; int(2*num):</span><br><span class="line">            word = word + <span class="string">'1'</span></span><br><span class="line">            num = 2*num - int(2*num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            word = word + <span class="string">'0'</span></span><br><span class="line">            num = 2*num</span><br><span class="line">        Autoregressive_variable = Autoregressive_variable+1</span><br><span class="line">    Shannon_dict.setdefault(i[0])</span><br><span class="line">    Shannon_dict[i[0]] = word</span><br><span class="line">    Q = Q + P</span><br><span class="line">    </span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Shannon_dict编码结果："</span>,Shannon_dict)</span><br><span class="line"><span class="comment">#sys.exit(0)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;此程序为香农编码的Python实现&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>天平秤球问题的Python实现</title>
    <link href="https://hong-king.github.io/2020/11/18/%E5%A4%A9%E5%B9%B3%E7%A7%A4%E7%90%83%E9%97%AE%E9%A2%98%E7%9A%84Python%E5%AE%9E%E7%8E%B0/"/>
    <id>https://hong-king.github.io/2020/11/18/%E5%A4%A9%E5%B9%B3%E7%A7%A4%E7%90%83%E9%97%AE%E9%A2%98%E7%9A%84Python%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-11-18T08:01:00.000Z</published>
    <updated>2020-11-24T10:51:20.132Z</updated>
    
    <content type="html"><![CDATA[<p>此程序为信息论中提到的秤球问题的代码实现，但此算法功能并不完善。目前，该程序只能针对特定的情况给出特定的称量方法，无法给出通解。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">All rights reserved by Liu Junhong</span></span><br><span class="line"><span class="string">Reference books: 百度百科-称球问题 (https://baike.baidu.com/item/称球问题/16038399?fr=aladdin)</span></span><br><span class="line"><span class="string">Completion time：2020-11-16</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">import numpy as np</span><br><span class="line">import pandas</span><br><span class="line">import time</span><br><span class="line">import math</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">sys.setrecursionlimit(1000000) <span class="comment">#设置最大递归深度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#程序说明</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-------------------&lt;称球问题&gt;程序说明-------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Designed by 刘俊宏：All rights reserved"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Reference books: 百度百科-称球问题 (https://baike.baidu.com/item/称球问题/16038399?fr=aladdin)"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Completion time：2020-11-16"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Last modification time ：2020-11-24"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"程序缺陷：目前只能对于提供的特定称量情况，给出相对应的称量方案"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"--------------------------------------------------------"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#*******录入数据</span></span><br><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">N_num 所需判断球的总数(正整数)</span></span><br><span class="line"><span class="string">N_bad 坏球的序号(正整数)</span></span><br><span class="line"><span class="string">N_bad_weight 坏球的轻重(正整数)</span></span><br><span class="line"><span class="string">Weighing_times 所需称量的次数</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">N_num = <span class="built_in">float</span>(input(<span class="string">"请输入所需判断球的总数(正整数，n&gt;1)："</span>))</span><br><span class="line"><span class="keyword">while</span>(N_num &lt;= 1 or (N_num % 1)):</span><br><span class="line">    N_num = <span class="built_in">float</span>(input(<span class="string">"请输入规范正整数："</span>))</span><br><span class="line">N_num = int(N_num)</span><br><span class="line">N = np.zeros(N_num,dtype=int)</span><br><span class="line"></span><br><span class="line">N_bad = <span class="built_in">float</span>(input(<span class="string">"请输入第几个球为坏球(正整数)："</span>))</span><br><span class="line"><span class="keyword">while</span>(N_bad &lt;= 0 or (N_bad % 1)):</span><br><span class="line">    N_bad = <span class="built_in">float</span>(input(<span class="string">"请输入正整数："</span>))</span><br><span class="line">N_bad = int(N_bad)</span><br><span class="line"></span><br><span class="line">N_bad_weight = <span class="built_in">float</span>(input(<span class="string">"请输入坏球的轻重(轻输入 -1，重输入 1)："</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>((N_bad_weight != -1) and  (N_bad_weight != 1)):</span><br><span class="line">    </span><br><span class="line">    N_bad_weight = <span class="built_in">float</span>(input(<span class="string">"请输入正确数字："</span>))</span><br><span class="line">N_bad_weight = int(N_bad_weight)</span><br><span class="line"></span><br><span class="line">N[N_bad - 1] = N_bad_weight</span><br><span class="line"></span><br><span class="line">Weighing_times = math.ceil(math.log((2*N_num+3),3))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"---------数据录入成功！---------"</span>,<span class="string">"\n"</span>)</span><br><span class="line">time.sleep(0.6)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"球的总数为："</span>,int(N_num),<span class="string">"\n"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"第"</span>,int(N_bad),<span class="string">"个球为坏球"</span>,<span class="string">"\n"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"球的数据概览如下："</span>,N,<span class="string">"\n"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"所需称量的次数为："</span>,Weighing_times,<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#*******算法部分</span></span><br><span class="line">def Random_generation():</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#生成符合条件的随机矩阵</span></span><br><span class="line">    A = np.random.randint(-1, 2, size=(Weighing_times,N_num)) <span class="comment">#生成[-1,2)区间的整数随机矩阵</span></span><br><span class="line">    <span class="keyword">while</span> (not all(np.sum(A,axis=1) == 0)):</span><br><span class="line">        A = np.random.randint(-1, 2, size=(Weighing_times,N_num))</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#进行矩阵乘法    </span></span><br><span class="line">    Y = np.dot(A,N.reshape((-1,1)))</span><br><span class="line">    <span class="keyword">if</span> all(Y == 0):         <span class="comment">#防止天平全平衡情况</span></span><br><span class="line">        Random_generation()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N_num):</span><br><span class="line">        LIST = list(range(N_num))</span><br><span class="line">        LIST.pop(i)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> all(Y == A[:,i].reshape((-1,1))) and (not any(all(Y == -A[:,j].reshape((-1,1))) <span class="keyword">for</span> j <span class="keyword">in</span> LIST)) and (not any(all(Y == A[:,j].reshape((-1,1))) <span class="keyword">for</span> j <span class="keyword">in</span> LIST)):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"---------程序运行成功，输出结果：---------"</span>,<span class="string">"\n"</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"第"</span>,i+1,<span class="string">"个球为坏的重球"</span>,<span class="string">"\n"</span>)</span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        <span class="keyword">elif</span> all(Y == -A[:,i].reshape((-1,1))) and (not any(all(Y == A[:,j].reshape((-1,1))) <span class="keyword">for</span> j <span class="keyword">in</span> LIST)) and (not any(all(Y == -A[:,j].reshape((-1,1))) <span class="keyword">for</span> j <span class="keyword">in</span> LIST)):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"---------程序运行成功，输出结果：---------"</span>,<span class="string">"\n"</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"第"</span>,i+1,<span class="string">"个球为坏的轻球"</span>,<span class="string">"\n"</span>)</span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        <span class="keyword">elif</span> i == N_num-1:</span><br><span class="line">            Random_generation()</span><br><span class="line">            </span><br><span class="line">    <span class="built_in">return</span> A,Y</span><br><span class="line"></span><br><span class="line">A,Y = Random_generation()</span><br><span class="line"></span><br><span class="line"><span class="comment">#*******描述部分</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"---------称量方法展示！---------"</span>,<span class="string">"\n"</span>)</span><br><span class="line">time.sleep(0.6)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(Weighing_times):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\n"</span>,<span class="string">"第"</span>,i+1,<span class="string">"次称量:"</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"左盘球的序号(从1开始计数):"</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(N_num):</span><br><span class="line">        <span class="keyword">if</span> A[i,j] == 1:</span><br><span class="line">            <span class="built_in">print</span>(j+1)</span><br><span class="line">            </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"右盘球的序号(从1开始计数):"</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(N_num):</span><br><span class="line">        <span class="keyword">if</span> A[i,j] == -1:</span><br><span class="line">            <span class="built_in">print</span>(j+1)</span><br><span class="line">            </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"称量结果:"</span>)</span><br><span class="line">    <span class="keyword">if</span> Y[i] == 1:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"左盘重"</span>)</span><br><span class="line">    <span class="keyword">elif</span> Y[i] == 0:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"平衡"</span>)</span><br><span class="line">    <span class="keyword">elif</span> Y[i] == -1:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"右盘重"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;此程序为信息论中提到的秤球问题的代码实现，但此算法功能并不完善。目前，该程序只能针对特定的情况给出特定的称量方法，无法给出通解。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>利用Python从文本中提取单词</title>
    <link href="https://hong-king.github.io/2020/10/16/%E5%88%A9%E7%94%A8Python%E4%BB%8E%E6%96%87%E6%9C%AC%E4%B8%AD%E6%8F%90%E5%8F%96%E5%8D%95%E8%AF%8D/"/>
    <id>https://hong-king.github.io/2020/10/16/%E5%88%A9%E7%94%A8Python%E4%BB%8E%E6%96%87%E6%9C%AC%E4%B8%AD%E6%8F%90%E5%8F%96%E5%8D%95%E8%AF%8D/</id>
    <published>2020-10-16T10:49:00.000Z</published>
    <updated>2020-10-16T10:49:34.266Z</updated>
    
    <content type="html"><![CDATA[<p>首先介绍string包的一些实用内置函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import string</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; string.digits  <span class="comment">#所有的数字</span></span><br><span class="line"><span class="string">'0123456789'</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; string.ascii_lowercase  <span class="comment">#所有的小写字母</span></span><br><span class="line"><span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; string.ascii_uppercase  <span class="comment">#所有的大写字母</span></span><br><span class="line"><span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; string.hexdigits        <span class="comment">#所有的十六进制字符</span></span><br><span class="line"><span class="string">'0123456789abcdefABCDEF'</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; string.whitespace       <span class="comment">#所有的空白字符</span></span><br><span class="line"><span class="string">' \t\n\r\x0b\x0c'</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; string.punctuation      <span class="comment">#所有的标点字符</span></span><br><span class="line"><span class="string">'!"#$%&amp;\'</span>()*+,-./:;&lt;=&gt;?@[\\]^_`&#123;|&#125;~<span class="string">'</span></span><br></pre></td></tr></table></figure><p>接下来时python的一些内置函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import numpy</span><br><span class="line">import pandas</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">data = open(<span class="string">"data.txt"</span>,<span class="string">"r"</span>,encoding = <span class="string">'utf-8'</span>)</span><br><span class="line"><span class="comment">##------------提取单词</span></span><br><span class="line">data.readlines()   <span class="comment">#data.readlines()用于读取所有行，每行为一个元素</span></span><br><span class="line"></span><br><span class="line">data.replace(i,<span class="string">" "</span>) <span class="comment">#data.replace()用其他字符替换文本中的指定字符</span></span><br><span class="line"></span><br><span class="line">data.strip()        <span class="comment">#data.strip用于移除字符串头尾指定的字符序列</span></span><br><span class="line"></span><br><span class="line">data.rstrip() <span class="comment">#rstrip() 删除字符串末尾的指定字符（默认为空格）</span></span><br><span class="line"></span><br><span class="line">data.split():           <span class="comment">#split() 通过指定分隔符对字符串进行切片，如果参数 num 有指定值，则分隔 num+1 个子字符串</span></span><br><span class="line"></span><br><span class="line">str.upper()          <span class="comment"># 把所有字符中的小写字母转换成大写字母</span></span><br><span class="line"></span><br><span class="line">str.lower()         <span class="comment"># 把所有字符中的大写字母转换成小写字母</span></span><br><span class="line"></span><br><span class="line">str.capitalize()   <span class="comment"># 把第一个字母转化为大写字母，其余小写</span></span><br><span class="line"></span><br><span class="line">str.title()         <span class="comment"># 把每个单词的第一个字母转化为大写，其余小写</span></span><br></pre></td></tr></table></figure><p>一下为解决一个英文文档单词提取问题的源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import numpy</span><br><span class="line">import pandas</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">data = open(<span class="string">"data.txt"</span>,<span class="string">"r"</span>,encoding = <span class="string">'utf-8'</span>)</span><br><span class="line"><span class="comment">##------------提取单词</span></span><br><span class="line">words = <span class="built_in">set</span>()</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> data.readlines():                                       <span class="comment">#.readlines用于读取所有行</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> line:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> (string.punctuation.replace(<span class="string">"'"</span>,<span class="string">" "</span>)):  <span class="comment">#如果字符是标点符号的话就将其替换为空格,.replace("'"," ")用于剔除"'"符号</span></span><br><span class="line">            line = line.replace(i,<span class="string">" "</span>)</span><br><span class="line">    line = line.strip(<span class="string">'\n'</span>)                                         <span class="comment">#.strip用于移除字符串头尾指定的字符序列</span></span><br><span class="line">    line = line.strip(string.digits)                                <span class="comment">#string.digits方法的作用是生成数组，包括0-9</span></span><br><span class="line"><span class="comment">#    line = line.strip(string.punctuation)                           #string.punctuation所有的标点字符</span></span><br><span class="line"><span class="comment">#    line = line.rstrip(string.punctuation)                          #rstrip() 删除字符串末尾的指定字符（默认为空格）</span></span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> line.split():                                       <span class="comment">#split() 通过指定分隔符对字符串进行切片，如果参数 num 有指定值，则分隔 num+1 个子字符串</span></span><br><span class="line">        words.add(word)</span><br><span class="line"><span class="built_in">print</span>(words)</span><br><span class="line">data.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先介绍string包的一些实用内置函数&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li
      
    
    </summary>
    
    
      <category term="技术笔记" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python 问题解决" scheme="https://Hong-King.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/Python-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Python" scheme="https://Hong-King.github.io/tags/Python/"/>
    
  </entry>
  
</feed>
